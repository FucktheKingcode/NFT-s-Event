{
	"id": "17fe855cb72f02dab3527fe7fe641bfb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTEventConcert.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ninterface LocationProvider {\n    function getLocation(address owner) external view returns (string memory);\n}\n\ncontract ArtistDynamicNFT is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {\n\n    string private uri;\n\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n    mapping(uint256 => string) private tokenLocations;\n    LocationProvider private locationProvider;\n\n    constructor(string memory name, string memory symbol, string memory _uri, LocationProvider _locationProvider)\n    ERC721(name, symbol) Ownable(msg.sender) {\n    uri = _uri;\n    locationProvider = _locationProvider;\n    }\n\n     function safeMint(address to) public payable returns (uint256) {\n        _tokenIds.increment();\n        uint256 tokenId = _tokenIds.current();\n        tokenLocations[tokenId] = locationProvider.getLocation(to);\n\n        return tokenId;\n    }\n\n    function _baseURI() internal view virtual override returns (string memory) {\n        return uri;\n    }\n    \n\n    function tokenURI(uint256 tokenId) public view virtual override(ERC721, ERC721URIStorage) returns(string memory)  {\n        string memory location = tokenLocations[tokenId];\n        return location;\n    }\n\n    function updateLocation(uint256 tokenId) external {\n        require(ownerOf(tokenId) == msg.sender, \"NotFound\");\n\n        string memory location = locationProvider.getLocation(msg.sender);\n        tokenLocations[tokenId] = location; // Fix the variable name\n\n    }\n\n    function getLocation(address owner) public view returns(string memory) {\n        return locationProvider.getLocation(owner);\n    }\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, ERC721URIStorage) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n}"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        _update(address(0), tokenId, _msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"ERC721Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 Token that can be burned (destroyed).",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "ERC721 Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xc48434419baa510862ba4b4802bc0500ccddadd02ae2f195548af748c3206b20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ae0bacd8623ce1cfad08c70ed111e995d23c66ad057b779b838ad2e5598681\",\"dweb:/ipfs/QmWZGSEjZ9DmbQmHjjsdkRbJtU25Ai65VScDnEziRCkPRB\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1517,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE BASEFEE EXTCODECOPY PUSH17 0xB1F77F2DEFABE845C3DBEA0CDD3580C566 0x29 CODECOPY 0x24 0x22 0x2A PUSH29 0xBF5A5FC0E264736F6C6343000816003300000000000000000000000000 ",
							"sourceMap": "424:971:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE BASEFEE EXTCODECOPY PUSH17 0xB1F77F2DEFABE845C3DBEA0CDD3580C566 0x29 CODECOPY 0x24 0x22 0x2A PUSH29 0xBF5A5FC0E264736F6C6343000816003300000000000000000000000000 ",
							"sourceMap": "424:971:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTEventConcert.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTEventConcert.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTEventConcert.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTEventConcert.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTEventConcert.sol": {
				"ArtistDynamicNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								},
								{
									"internalType": "contract LocationProvider",
									"name": "_locationProvider",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "getLocation",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "safeMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "updateLocation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTEventConcert.sol\":490:2167  contract ArtistDynamicNFT is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTEventConcert.sol\":785:1005  constructor(string memory name, string memory symbol, string memory _uri, LocationProvider _locationProvider)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NFTEventConcert.sol\":928:938  msg.sender */\n  caller\n    /* \"contracts/NFTEventConcert.sol\":906:910  name */\n  dup5\n    /* \"contracts/NFTEventConcert.sol\":912:918  symbol */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/NFTEventConcert.sol\":952:956  _uri */\n  dup2\n    /* \"contracts/NFTEventConcert.sol\":946:949  uri */\n  0x08\n    /* \"contracts/NFTEventConcert.sol\":946:956  uri = _uri */\n  swap1\n  dup2\n  tag_18\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/NFTEventConcert.sol\":981:998  _locationProvider */\n  dup1\n    /* \"contracts/NFTEventConcert.sol\":962:978  locationProvider */\n  0x0b\n  0x00\n    /* \"contracts/NFTEventConcert.sol\":962:998  locationProvider = _locationProvider */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTEventConcert.sol\":785:1005  constructor(string memory name, string memory symbol, string memory _uri, LocationProvider _locationProvider)... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/NFTEventConcert.sol\":490:2167  contract ArtistDynamicNFT is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x07\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_21:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_22:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_23:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_24:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_25:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_26:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_27:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_28:\n    /* \"#utility.yul\":957:984   */\n  tag_68\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_26\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_70\n  tag_27\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1030:1118   */\ntag_69:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_29:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_72\n  tag_21\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_73\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_28\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_30:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_76\n  tag_27\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1434:1490   */\ntag_75:\n    /* \"#utility.yul\":1508:1537   */\n  tag_77\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_26\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_31:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_79:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_79)\ntag_81:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_32:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_83\n    /* \"#utility.yul\":1992:2041   */\n  tag_84\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_30\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1976:2042   */\n  tag_29\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_86\n  tag_25\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2117:2229   */\ntag_85:\n    /* \"#utility.yul\":2238:2290   */\n  tag_87\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_31\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_33:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_90\n  tag_24\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2399:2521   */\ntag_89:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_91\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_32\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2803   */\ntag_34:\n    /* \"#utility.yul\":2714:2721   */\n  0x00\n    /* \"#utility.yul\":2754:2796   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2747:2752   */\n  dup3\n    /* \"#utility.yul\":2743:2797   */\n  and\n    /* \"#utility.yul\":2732:2797   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2803   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2809:2905   */\ntag_35:\n    /* \"#utility.yul\":2846:2853   */\n  0x00\n    /* \"#utility.yul\":2875:2899   */\n  tag_94\n    /* \"#utility.yul\":2893:2898   */\n  dup3\n    /* \"#utility.yul\":2875:2899   */\n  tag_34\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2864:2899   */\n  swap1\n  pop\n    /* \"#utility.yul\":2809:2905   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2911:3032   */\ntag_36:\n    /* \"#utility.yul\":2973:2980   */\n  0x00\n    /* \"#utility.yul\":3002:3026   */\n  tag_96\n    /* \"#utility.yul\":3020:3025   */\n  dup3\n    /* \"#utility.yul\":3002:3026   */\n  tag_35\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2991:3026   */\n  swap1\n  pop\n    /* \"#utility.yul\":2911:3032   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3038:3210   */\ntag_37:\n    /* \"#utility.yul\":3136:3185   */\n  tag_98\n    /* \"#utility.yul\":3179:3184   */\n  dup2\n    /* \"#utility.yul\":3136:3185   */\n  tag_36\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3129:3134   */\n  dup2\n    /* \"#utility.yul\":3126:3186   */\n  eq\n    /* \"#utility.yul\":3116:3204   */\n  tag_99\n  jumpi\n    /* \"#utility.yul\":3200:3201   */\n  0x00\n    /* \"#utility.yul\":3197:3198   */\n  dup1\n    /* \"#utility.yul\":3190:3202   */\n  revert\n    /* \"#utility.yul\":3116:3204   */\ntag_99:\n    /* \"#utility.yul\":3038:3210   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3216:3409   */\ntag_38:\n    /* \"#utility.yul\":3298:3303   */\n  0x00\n    /* \"#utility.yul\":3329:3335   */\n  dup2\n    /* \"#utility.yul\":3323:3336   */\n  mload\n    /* \"#utility.yul\":3314:3336   */\n  swap1\n  pop\n    /* \"#utility.yul\":3345:3403   */\n  tag_101\n    /* \"#utility.yul\":3397:3402   */\n  dup2\n    /* \"#utility.yul\":3345:3403   */\n  tag_37\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3216:3409   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3415:4804   */\ntag_3:\n    /* \"#utility.yul\":3567:3573   */\n  0x00\n    /* \"#utility.yul\":3575:3581   */\n  dup1\n    /* \"#utility.yul\":3583:3589   */\n  0x00\n    /* \"#utility.yul\":3591:3597   */\n  dup1\n    /* \"#utility.yul\":3640:3643   */\n  0x80\n    /* \"#utility.yul\":3628:3637   */\n  dup6\n    /* \"#utility.yul\":3619:3626   */\n  dup8\n    /* \"#utility.yul\":3615:3638   */\n  sub\n    /* \"#utility.yul\":3611:3644   */\n  slt\n    /* \"#utility.yul\":3608:3728   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":3647:3726   */\n  tag_104\n  tag_22\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3608:3728   */\ntag_103:\n    /* \"#utility.yul\":3788:3789   */\n  0x00\n    /* \"#utility.yul\":3777:3786   */\n  dup6\n    /* \"#utility.yul\":3773:3790   */\n  add\n    /* \"#utility.yul\":3767:3791   */\n  mload\n    /* \"#utility.yul\":3818:3836   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3810:3816   */\n  dup2\n    /* \"#utility.yul\":3807:3837   */\n  gt\n    /* \"#utility.yul\":3804:3921   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":3840:3919   */\n  tag_106\n  tag_23\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3804:3921   */\ntag_105:\n    /* \"#utility.yul\":3945:4019   */\n  tag_107\n    /* \"#utility.yul\":4011:4018   */\n  dup8\n    /* \"#utility.yul\":4002:4008   */\n  dup3\n    /* \"#utility.yul\":3991:4000   */\n  dup9\n    /* \"#utility.yul\":3987:4009   */\n  add\n    /* \"#utility.yul\":3945:4019   */\n  tag_33\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3935:4019   */\n  swap5\n  pop\n    /* \"#utility.yul\":3738:4029   */\n  pop\n    /* \"#utility.yul\":4089:4091   */\n  0x20\n    /* \"#utility.yul\":4078:4087   */\n  dup6\n    /* \"#utility.yul\":4074:4092   */\n  add\n    /* \"#utility.yul\":4068:4093   */\n  mload\n    /* \"#utility.yul\":4120:4138   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4112:4118   */\n  dup2\n    /* \"#utility.yul\":4109:4139   */\n  gt\n    /* \"#utility.yul\":4106:4223   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":4142:4221   */\n  tag_109\n  tag_23\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4106:4223   */\ntag_108:\n    /* \"#utility.yul\":4247:4321   */\n  tag_110\n    /* \"#utility.yul\":4313:4320   */\n  dup8\n    /* \"#utility.yul\":4304:4310   */\n  dup3\n    /* \"#utility.yul\":4293:4302   */\n  dup9\n    /* \"#utility.yul\":4289:4311   */\n  add\n    /* \"#utility.yul\":4247:4321   */\n  tag_33\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4237:4321   */\n  swap4\n  pop\n    /* \"#utility.yul\":4039:4331   */\n  pop\n    /* \"#utility.yul\":4391:4393   */\n  0x40\n    /* \"#utility.yul\":4380:4389   */\n  dup6\n    /* \"#utility.yul\":4376:4394   */\n  add\n    /* \"#utility.yul\":4370:4395   */\n  mload\n    /* \"#utility.yul\":4422:4440   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4414:4420   */\n  dup2\n    /* \"#utility.yul\":4411:4441   */\n  gt\n    /* \"#utility.yul\":4408:4525   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":4444:4523   */\n  tag_112\n  tag_23\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4408:4525   */\ntag_111:\n    /* \"#utility.yul\":4549:4623   */\n  tag_113\n    /* \"#utility.yul\":4615:4622   */\n  dup8\n    /* \"#utility.yul\":4606:4612   */\n  dup3\n    /* \"#utility.yul\":4595:4604   */\n  dup9\n    /* \"#utility.yul\":4591:4613   */\n  add\n    /* \"#utility.yul\":4549:4623   */\n  tag_33\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4539:4623   */\n  swap3\n  pop\n    /* \"#utility.yul\":4341:4633   */\n  pop\n    /* \"#utility.yul\":4672:4674   */\n  0x60\n    /* \"#utility.yul\":4698:4787   */\n  tag_114\n    /* \"#utility.yul\":4779:4786   */\n  dup8\n    /* \"#utility.yul\":4770:4776   */\n  dup3\n    /* \"#utility.yul\":4759:4768   */\n  dup9\n    /* \"#utility.yul\":4755:4777   */\n  add\n    /* \"#utility.yul\":4698:4787   */\n  tag_38\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":4688:4787   */\n  swap2\n  pop\n    /* \"#utility.yul\":4643:4797   */\n  pop\n    /* \"#utility.yul\":3415:4804   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4810:4909   */\ntag_39:\n    /* \"#utility.yul\":4862:4868   */\n  0x00\n    /* \"#utility.yul\":4896:4901   */\n  dup2\n    /* \"#utility.yul\":4890:4902   */\n  mload\n    /* \"#utility.yul\":4880:4902   */\n  swap1\n  pop\n    /* \"#utility.yul\":4810:4909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4915:5095   */\ntag_40:\n    /* \"#utility.yul\":4963:5040   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4960:4961   */\n  0x00\n    /* \"#utility.yul\":4953:5041   */\n  mstore\n    /* \"#utility.yul\":5060:5064   */\n  0x22\n    /* \"#utility.yul\":5057:5058   */\n  0x04\n    /* \"#utility.yul\":5050:5065   */\n  mstore\n    /* \"#utility.yul\":5084:5088   */\n  0x24\n    /* \"#utility.yul\":5081:5082   */\n  0x00\n    /* \"#utility.yul\":5074:5089   */\n  revert\n    /* \"#utility.yul\":5101:5421   */\ntag_41:\n    /* \"#utility.yul\":5145:5151   */\n  0x00\n    /* \"#utility.yul\":5182:5183   */\n  0x02\n    /* \"#utility.yul\":5176:5180   */\n  dup3\n    /* \"#utility.yul\":5172:5184   */\n  div\n    /* \"#utility.yul\":5162:5184   */\n  swap1\n  pop\n    /* \"#utility.yul\":5229:5230   */\n  0x01\n    /* \"#utility.yul\":5223:5227   */\n  dup3\n    /* \"#utility.yul\":5219:5231   */\n  and\n    /* \"#utility.yul\":5250:5268   */\n  dup1\n    /* \"#utility.yul\":5240:5321   */\n  tag_118\n  jumpi\n    /* \"#utility.yul\":5306:5310   */\n  0x7f\n    /* \"#utility.yul\":5298:5304   */\n  dup3\n    /* \"#utility.yul\":5294:5311   */\n  and\n    /* \"#utility.yul\":5284:5311   */\n  swap2\n  pop\n    /* \"#utility.yul\":5240:5321   */\ntag_118:\n    /* \"#utility.yul\":5368:5370   */\n  0x20\n    /* \"#utility.yul\":5360:5366   */\n  dup3\n    /* \"#utility.yul\":5357:5371   */\n  lt\n    /* \"#utility.yul\":5337:5355   */\n  dup2\n    /* \"#utility.yul\":5334:5372   */\n  sub\n    /* \"#utility.yul\":5331:5415   */\n  tag_119\n  jumpi\n    /* \"#utility.yul\":5387:5405   */\n  tag_120\n  tag_40\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5331:5415   */\ntag_119:\n    /* \"#utility.yul\":5152:5421   */\n  pop\n    /* \"#utility.yul\":5101:5421   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5427:5568   */\ntag_42:\n    /* \"#utility.yul\":5476:5480   */\n  0x00\n    /* \"#utility.yul\":5499:5502   */\n  dup2\n    /* \"#utility.yul\":5491:5502   */\n  swap1\n  pop\n    /* \"#utility.yul\":5522:5525   */\n  dup2\n    /* \"#utility.yul\":5519:5520   */\n  0x00\n    /* \"#utility.yul\":5512:5526   */\n  mstore\n    /* \"#utility.yul\":5556:5560   */\n  0x20\n    /* \"#utility.yul\":5553:5554   */\n  0x00\n    /* \"#utility.yul\":5543:5561   */\n  keccak256\n    /* \"#utility.yul\":5535:5561   */\n  swap1\n  pop\n    /* \"#utility.yul\":5427:5568   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5574:5667   */\ntag_43:\n    /* \"#utility.yul\":5611:5617   */\n  0x00\n    /* \"#utility.yul\":5658:5660   */\n  0x20\n    /* \"#utility.yul\":5653:5655   */\n  0x1f\n    /* \"#utility.yul\":5646:5651   */\n  dup4\n    /* \"#utility.yul\":5642:5656   */\n  add\n    /* \"#utility.yul\":5638:5661   */\n  div\n    /* \"#utility.yul\":5628:5661   */\n  swap1\n  pop\n    /* \"#utility.yul\":5574:5667   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5673:5780   */\ntag_44:\n    /* \"#utility.yul\":5717:5725   */\n  0x00\n    /* \"#utility.yul\":5767:5772   */\n  dup3\n    /* \"#utility.yul\":5761:5765   */\n  dup3\n    /* \"#utility.yul\":5757:5773   */\n  shl\n    /* \"#utility.yul\":5736:5773   */\n  swap1\n  pop\n    /* \"#utility.yul\":5673:5780   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5786:6179   */\ntag_45:\n    /* \"#utility.yul\":5855:5861   */\n  0x00\n    /* \"#utility.yul\":5905:5906   */\n  0x08\n    /* \"#utility.yul\":5893:5903   */\n  dup4\n    /* \"#utility.yul\":5889:5907   */\n  mul\n    /* \"#utility.yul\":5928:6025   */\n  tag_125\n    /* \"#utility.yul\":5958:6024   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5947:5956   */\n  dup3\n    /* \"#utility.yul\":5928:6025   */\n  tag_44\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6046:6085   */\n  tag_126\n    /* \"#utility.yul\":6076:6084   */\n  dup7\n    /* \"#utility.yul\":6065:6074   */\n  dup4\n    /* \"#utility.yul\":6046:6085   */\n  tag_44\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6034:6085   */\n  swap6\n  pop\n    /* \"#utility.yul\":6118:6122   */\n  dup1\n    /* \"#utility.yul\":6114:6123   */\n  not\n    /* \"#utility.yul\":6107:6112   */\n  dup5\n    /* \"#utility.yul\":6103:6124   */\n  and\n    /* \"#utility.yul\":6094:6124   */\n  swap4\n  pop\n    /* \"#utility.yul\":6167:6171   */\n  dup1\n    /* \"#utility.yul\":6157:6165   */\n  dup7\n    /* \"#utility.yul\":6153:6172   */\n  and\n    /* \"#utility.yul\":6146:6151   */\n  dup5\n    /* \"#utility.yul\":6143:6173   */\n  or\n    /* \"#utility.yul\":6133:6173   */\n  swap3\n  pop\n    /* \"#utility.yul\":5862:6179   */\n  pop\n  pop\n    /* \"#utility.yul\":5786:6179   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6185:6262   */\ntag_46:\n    /* \"#utility.yul\":6222:6229   */\n  0x00\n    /* \"#utility.yul\":6251:6256   */\n  dup2\n    /* \"#utility.yul\":6240:6256   */\n  swap1\n  pop\n    /* \"#utility.yul\":6185:6262   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6268:6328   */\ntag_47:\n    /* \"#utility.yul\":6296:6299   */\n  0x00\n    /* \"#utility.yul\":6317:6322   */\n  dup2\n    /* \"#utility.yul\":6310:6322   */\n  swap1\n  pop\n    /* \"#utility.yul\":6268:6328   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6334:6476   */\ntag_48:\n    /* \"#utility.yul\":6384:6393   */\n  0x00\n    /* \"#utility.yul\":6417:6470   */\n  tag_130\n    /* \"#utility.yul\":6435:6469   */\n  tag_131\n    /* \"#utility.yul\":6444:6468   */\n  tag_132\n    /* \"#utility.yul\":6462:6467   */\n  dup5\n    /* \"#utility.yul\":6444:6468   */\n  tag_46\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6435:6469   */\n  tag_47\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6417:6470   */\n  tag_46\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6404:6470   */\n  swap1\n  pop\n    /* \"#utility.yul\":6334:6476   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6482:6557   */\ntag_49:\n    /* \"#utility.yul\":6525:6528   */\n  0x00\n    /* \"#utility.yul\":6546:6551   */\n  dup2\n    /* \"#utility.yul\":6539:6551   */\n  swap1\n  pop\n    /* \"#utility.yul\":6482:6557   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6563:6832   */\ntag_50:\n    /* \"#utility.yul\":6673:6712   */\n  tag_135\n    /* \"#utility.yul\":6704:6711   */\n  dup4\n    /* \"#utility.yul\":6673:6712   */\n  tag_48\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":6734:6825   */\n  tag_136\n    /* \"#utility.yul\":6783:6824   */\n  tag_137\n    /* \"#utility.yul\":6807:6823   */\n  dup3\n    /* \"#utility.yul\":6783:6824   */\n  tag_49\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":6775:6781   */\n  dup5\n    /* \"#utility.yul\":6768:6772   */\n  dup5\n    /* \"#utility.yul\":6762:6773   */\n  sload\n    /* \"#utility.yul\":6734:6825   */\n  tag_45\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6728:6732   */\n  dup3\n    /* \"#utility.yul\":6721:6826   */\n  sstore\n    /* \"#utility.yul\":6639:6832   */\n  pop\n    /* \"#utility.yul\":6563:6832   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6838:6911   */\ntag_51:\n    /* \"#utility.yul\":6883:6886   */\n  0x00\n    /* \"#utility.yul\":6838:6911   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6917:7106   */\ntag_52:\n    /* \"#utility.yul\":6994:7026   */\n  tag_140\n  tag_51\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7035:7100   */\n  tag_141\n    /* \"#utility.yul\":7093:7099   */\n  dup2\n    /* \"#utility.yul\":7085:7091   */\n  dup5\n    /* \"#utility.yul\":7079:7083   */\n  dup5\n    /* \"#utility.yul\":7035:7100   */\n  tag_50\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":6970:7106   */\n  pop\n    /* \"#utility.yul\":6917:7106   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7112:7298   */\ntag_53:\n    /* \"#utility.yul\":7172:7292   */\ntag_143:\n    /* \"#utility.yul\":7189:7192   */\n  dup2\n    /* \"#utility.yul\":7182:7187   */\n  dup2\n    /* \"#utility.yul\":7179:7193   */\n  lt\n    /* \"#utility.yul\":7172:7292   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":7243:7282   */\n  tag_146\n    /* \"#utility.yul\":7280:7281   */\n  0x00\n    /* \"#utility.yul\":7273:7278   */\n  dup3\n    /* \"#utility.yul\":7243:7282   */\n  tag_52\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":7216:7217   */\n  0x01\n    /* \"#utility.yul\":7209:7214   */\n  dup2\n    /* \"#utility.yul\":7205:7218   */\n  add\n    /* \"#utility.yul\":7196:7218   */\n  swap1\n  pop\n    /* \"#utility.yul\":7172:7292   */\n  jump(tag_143)\ntag_145:\n    /* \"#utility.yul\":7112:7298   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7304:7847   */\ntag_54:\n    /* \"#utility.yul\":7405:7407   */\n  0x1f\n    /* \"#utility.yul\":7400:7403   */\n  dup3\n    /* \"#utility.yul\":7397:7408   */\n  gt\n    /* \"#utility.yul\":7394:7840   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":7439:7477   */\n  tag_149\n    /* \"#utility.yul\":7471:7476   */\n  dup2\n    /* \"#utility.yul\":7439:7477   */\n  tag_42\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":7523:7552   */\n  tag_150\n    /* \"#utility.yul\":7541:7551   */\n  dup5\n    /* \"#utility.yul\":7523:7552   */\n  tag_43\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7513:7521   */\n  dup2\n    /* \"#utility.yul\":7509:7553   */\n  add\n    /* \"#utility.yul\":7706:7708   */\n  0x20\n    /* \"#utility.yul\":7694:7704   */\n  dup6\n    /* \"#utility.yul\":7691:7709   */\n  lt\n    /* \"#utility.yul\":7688:7737   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":7727:7735   */\n  dup2\n    /* \"#utility.yul\":7712:7735   */\n  swap1\n  pop\n    /* \"#utility.yul\":7688:7737   */\ntag_151:\n    /* \"#utility.yul\":7750:7830   */\n  tag_152\n    /* \"#utility.yul\":7806:7828   */\n  tag_153\n    /* \"#utility.yul\":7824:7827   */\n  dup6\n    /* \"#utility.yul\":7806:7828   */\n  tag_43\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7796:7804   */\n  dup4\n    /* \"#utility.yul\":7792:7829   */\n  add\n    /* \"#utility.yul\":7779:7790   */\n  dup3\n    /* \"#utility.yul\":7750:7830   */\n  tag_53\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7409:7840   */\n  pop\n  pop\n    /* \"#utility.yul\":7394:7840   */\ntag_148:\n    /* \"#utility.yul\":7304:7847   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7853:7970   */\ntag_55:\n    /* \"#utility.yul\":7907:7915   */\n  0x00\n    /* \"#utility.yul\":7957:7962   */\n  dup3\n    /* \"#utility.yul\":7951:7955   */\n  dup3\n    /* \"#utility.yul\":7947:7963   */\n  shr\n    /* \"#utility.yul\":7926:7963   */\n  swap1\n  pop\n    /* \"#utility.yul\":7853:7970   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7976:8145   */\ntag_56:\n    /* \"#utility.yul\":8020:8026   */\n  0x00\n    /* \"#utility.yul\":8053:8104   */\n  tag_156\n    /* \"#utility.yul\":8101:8102   */\n  0x00\n    /* \"#utility.yul\":8097:8103   */\n  not\n    /* \"#utility.yul\":8089:8094   */\n  dup5\n    /* \"#utility.yul\":8086:8087   */\n  0x08\n    /* \"#utility.yul\":8082:8095   */\n  mul\n    /* \"#utility.yul\":8053:8104   */\n  tag_55\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":8049:8105   */\n  not\n    /* \"#utility.yul\":8134:8138   */\n  dup1\n    /* \"#utility.yul\":8128:8132   */\n  dup4\n    /* \"#utility.yul\":8124:8139   */\n  and\n    /* \"#utility.yul\":8114:8139   */\n  swap2\n  pop\n    /* \"#utility.yul\":8027:8145   */\n  pop\n    /* \"#utility.yul\":7976:8145   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8150:8445   */\ntag_57:\n    /* \"#utility.yul\":8226:8230   */\n  0x00\n    /* \"#utility.yul\":8372:8401   */\n  tag_158\n    /* \"#utility.yul\":8397:8400   */\n  dup4\n    /* \"#utility.yul\":8391:8395   */\n  dup4\n    /* \"#utility.yul\":8372:8401   */\n  tag_56\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":8364:8401   */\n  swap2\n  pop\n    /* \"#utility.yul\":8434:8437   */\n  dup3\n    /* \"#utility.yul\":8431:8432   */\n  0x02\n    /* \"#utility.yul\":8427:8438   */\n  mul\n    /* \"#utility.yul\":8421:8425   */\n  dup3\n    /* \"#utility.yul\":8418:8439   */\n  or\n    /* \"#utility.yul\":8410:8439   */\n  swap1\n  pop\n    /* \"#utility.yul\":8150:8445   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8450:9845   */\ntag_9:\n    /* \"#utility.yul\":8567:8604   */\n  tag_160\n    /* \"#utility.yul\":8600:8603   */\n  dup3\n    /* \"#utility.yul\":8567:8604   */\n  tag_39\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":8669:8687   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8661:8667   */\n  dup2\n    /* \"#utility.yul\":8658:8688   */\n  gt\n    /* \"#utility.yul\":8655:8711   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":8691:8709   */\n  tag_162\n  tag_27\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":8655:8711   */\ntag_161:\n    /* \"#utility.yul\":8735:8773   */\n  tag_163\n    /* \"#utility.yul\":8767:8771   */\n  dup3\n    /* \"#utility.yul\":8761:8772   */\n  sload\n    /* \"#utility.yul\":8735:8773   */\n  tag_41\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":8820:8887   */\n  tag_164\n    /* \"#utility.yul\":8880:8886   */\n  dup3\n    /* \"#utility.yul\":8872:8878   */\n  dup3\n    /* \"#utility.yul\":8866:8870   */\n  dup6\n    /* \"#utility.yul\":8820:8887   */\n  tag_54\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":8914:8915   */\n  0x00\n    /* \"#utility.yul\":8938:8942   */\n  0x20\n    /* \"#utility.yul\":8925:8942   */\n  swap1\n  pop\n    /* \"#utility.yul\":8970:8972   */\n  0x1f\n    /* \"#utility.yul\":8962:8968   */\n  dup4\n    /* \"#utility.yul\":8959:8973   */\n  gt\n    /* \"#utility.yul\":8987:8988   */\n  0x01\n    /* \"#utility.yul\":8982:9600   */\n  dup2\n  eq\n  tag_166\n  jumpi\n    /* \"#utility.yul\":9644:9645   */\n  0x00\n    /* \"#utility.yul\":9661:9667   */\n  dup5\n    /* \"#utility.yul\":9658:9735   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":9710:9719   */\n  dup3\n    /* \"#utility.yul\":9705:9708   */\n  dup8\n    /* \"#utility.yul\":9701:9720   */\n  add\n    /* \"#utility.yul\":9695:9721   */\n  mload\n    /* \"#utility.yul\":9686:9721   */\n  swap1\n  pop\n    /* \"#utility.yul\":9658:9735   */\ntag_167:\n    /* \"#utility.yul\":9761:9828   */\n  tag_168\n    /* \"#utility.yul\":9821:9827   */\n  dup6\n    /* \"#utility.yul\":9814:9819   */\n  dup3\n    /* \"#utility.yul\":9761:9828   */\n  tag_57\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":9755:9759   */\n  dup7\n    /* \"#utility.yul\":9748:9829   */\n  sstore\n    /* \"#utility.yul\":9617:9839   */\n  pop\n    /* \"#utility.yul\":8952:9839   */\n  jump(tag_165)\n    /* \"#utility.yul\":8982:9600   */\ntag_166:\n    /* \"#utility.yul\":9034:9038   */\n  0x1f\n    /* \"#utility.yul\":9030:9039   */\n  not\n    /* \"#utility.yul\":9022:9028   */\n  dup5\n    /* \"#utility.yul\":9018:9040   */\n  and\n    /* \"#utility.yul\":9068:9105   */\n  tag_169\n    /* \"#utility.yul\":9100:9104   */\n  dup7\n    /* \"#utility.yul\":9068:9105   */\n  tag_42\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":9127:9128   */\n  0x00\n    /* \"#utility.yul\":9141:9349   */\ntag_170:\n    /* \"#utility.yul\":9155:9162   */\n  dup3\n    /* \"#utility.yul\":9152:9153   */\n  dup2\n    /* \"#utility.yul\":9149:9163   */\n  lt\n    /* \"#utility.yul\":9141:9349   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":9234:9243   */\n  dup5\n    /* \"#utility.yul\":9229:9232   */\n  dup10\n    /* \"#utility.yul\":9225:9244   */\n  add\n    /* \"#utility.yul\":9219:9245   */\n  mload\n    /* \"#utility.yul\":9211:9217   */\n  dup3\n    /* \"#utility.yul\":9204:9246   */\n  sstore\n    /* \"#utility.yul\":9285:9286   */\n  0x01\n    /* \"#utility.yul\":9277:9283   */\n  dup3\n    /* \"#utility.yul\":9273:9287   */\n  add\n    /* \"#utility.yul\":9263:9287   */\n  swap2\n  pop\n    /* \"#utility.yul\":9332:9334   */\n  0x20\n    /* \"#utility.yul\":9321:9330   */\n  dup6\n    /* \"#utility.yul\":9317:9335   */\n  add\n    /* \"#utility.yul\":9304:9335   */\n  swap5\n  pop\n    /* \"#utility.yul\":9178:9182   */\n  0x20\n    /* \"#utility.yul\":9175:9176   */\n  dup2\n    /* \"#utility.yul\":9171:9183   */\n  add\n    /* \"#utility.yul\":9166:9183   */\n  swap1\n  pop\n    /* \"#utility.yul\":9141:9349   */\n  jump(tag_170)\ntag_172:\n    /* \"#utility.yul\":9377:9383   */\n  dup7\n    /* \"#utility.yul\":9368:9375   */\n  dup4\n    /* \"#utility.yul\":9365:9384   */\n  lt\n    /* \"#utility.yul\":9362:9541   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":9435:9444   */\n  dup5\n    /* \"#utility.yul\":9430:9433   */\n  dup10\n    /* \"#utility.yul\":9426:9445   */\n  add\n    /* \"#utility.yul\":9420:9446   */\n  mload\n    /* \"#utility.yul\":9478:9526   */\n  tag_174\n    /* \"#utility.yul\":9520:9524   */\n  0x1f\n    /* \"#utility.yul\":9512:9518   */\n  dup10\n    /* \"#utility.yul\":9508:9525   */\n  and\n    /* \"#utility.yul\":9497:9506   */\n  dup3\n    /* \"#utility.yul\":9478:9526   */\n  tag_56\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":9470:9476   */\n  dup4\n    /* \"#utility.yul\":9463:9527   */\n  sstore\n    /* \"#utility.yul\":9385:9541   */\n  pop\n    /* \"#utility.yul\":9362:9541   */\ntag_173:\n    /* \"#utility.yul\":9587:9588   */\n  0x01\n    /* \"#utility.yul\":9583:9584   */\n  0x02\n    /* \"#utility.yul\":9575:9581   */\n  dup9\n    /* \"#utility.yul\":9571:9585   */\n  mul\n    /* \"#utility.yul\":9567:9589   */\n  add\n    /* \"#utility.yul\":9561:9565   */\n  dup9\n    /* \"#utility.yul\":9554:9590   */\n  sstore\n    /* \"#utility.yul\":8989:9600   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8952:9839   */\ntag_165:\n  pop\n    /* \"#utility.yul\":8542:9845   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8450:9845   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9851:9969   */\ntag_58:\n    /* \"#utility.yul\":9938:9962   */\n  tag_176\n    /* \"#utility.yul\":9956:9961   */\n  dup2\n    /* \"#utility.yul\":9938:9962   */\n  tag_35\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":9933:9936   */\n  dup3\n    /* \"#utility.yul\":9926:9963   */\n  mstore\n    /* \"#utility.yul\":9851:9969   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9975:10197   */\ntag_14:\n    /* \"#utility.yul\":10068:10072   */\n  0x00\n    /* \"#utility.yul\":10106:10108   */\n  0x20\n    /* \"#utility.yul\":10095:10104   */\n  dup3\n    /* \"#utility.yul\":10091:10109   */\n  add\n    /* \"#utility.yul\":10083:10109   */\n  swap1\n  pop\n    /* \"#utility.yul\":10119:10190   */\n  tag_178\n    /* \"#utility.yul\":10187:10188   */\n  0x00\n    /* \"#utility.yul\":10176:10185   */\n  dup4\n    /* \"#utility.yul\":10172:10189   */\n  add\n    /* \"#utility.yul\":10163:10169   */\n  dup5\n    /* \"#utility.yul\":10119:10190   */\n  tag_58\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":9975:10197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NFTEventConcert.sol\":490:2167  contract ArtistDynamicNFT is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTEventConcert.sol\":490:2167  contract ArtistDynamicNFT is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd9e0dc59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_1)\n    tag_23:\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_22:\n      dup1\n      0x40d097c3\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x40d097c3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x47baf0e9\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_24:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTEventConcert.sol\":1987:2164  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, ERC721URIStorage) returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/NFTEventConcert.sol\":1012:1253  function safeMint(address to) public payable returns (uint256) {... */\n    tag_7:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":561:875  function burn(uint256 tokenId) public virtual {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/NFTEventConcert.sol\":1582:1846  function updateLocation(uint256 tokenId) external {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/NFTEventConcert.sol\":1372:1576  function tokenURI(uint256 tokenId) public view virtual override(ERC721, ERC721URIStorage) returns(string memory)  {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTEventConcert.sol\":1852:1982  function getLocation(address owner) public view returns(string memory) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      tag_117\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n    tag_120:\n      stop\n        /* \"contracts/NFTEventConcert.sol\":1987:2164  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, ERC721URIStorage) returns (bool) {... */\n    tag_29:\n        /* \"contracts/NFTEventConcert.sol\":2098:2102  bool */\n      0x00\n        /* \"contracts/NFTEventConcert.sol\":2121:2157  super.supportsInterface(interfaceId) */\n      tag_124\n        /* \"contracts/NFTEventConcert.sol\":2145:2156  interfaceId */\n      dup3\n        /* \"contracts/NFTEventConcert.sol\":2121:2144  super.supportsInterface */\n      tag_125\n        /* \"contracts/NFTEventConcert.sol\":2121:2157  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/NFTEventConcert.sol\":2114:2157  return super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"contracts/NFTEventConcert.sol\":1987:2164  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, ERC721URIStorage) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_128\n      jump\t// in\n    tag_129:\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_134:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventConcert.sol\":1012:1253  function safeMint(address to) public payable returns (uint256) {... */\n    tag_57:\n        /* \"contracts/NFTEventConcert.sol\":1066:1073  uint256 */\n      0x00\n        /* \"contracts/NFTEventConcert.sol\":1085:1106  _tokenIds.increment() */\n      tag_153\n        /* \"contracts/NFTEventConcert.sol\":1085:1094  _tokenIds */\n      0x09\n        /* \"contracts/NFTEventConcert.sol\":1085:1104  _tokenIds.increment */\n      tag_154\n        /* \"contracts/NFTEventConcert.sol\":1085:1106  _tokenIds.increment() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/NFTEventConcert.sol\":1116:1131  uint256 tokenId */\n      0x00\n        /* \"contracts/NFTEventConcert.sol\":1134:1153  _tokenIds.current() */\n      tag_155\n        /* \"contracts/NFTEventConcert.sol\":1134:1143  _tokenIds */\n      0x09\n        /* \"contracts/NFTEventConcert.sol\":1134:1151  _tokenIds.current */\n      tag_156\n        /* \"contracts/NFTEventConcert.sol\":1134:1153  _tokenIds.current() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/NFTEventConcert.sol\":1116:1153  uint256 tokenId = _tokenIds.current() */\n      swap1\n      pop\n        /* \"contracts/NFTEventConcert.sol\":1189:1205  locationProvider */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTEventConcert.sol\":1189:1217  locationProvider.getLocation */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd9e0dc59\n        /* \"contracts/NFTEventConcert.sol\":1218:1220  to */\n      dup5\n        /* \"contracts/NFTEventConcert.sol\":1189:1221  locationProvider.getLocation(to) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_157:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"contracts/NFTEventConcert.sol\":1163:1177  tokenLocations */\n      0x0a\n        /* \"contracts/NFTEventConcert.sol\":1163:1186  tokenLocations[tokenId] */\n      0x00\n        /* \"contracts/NFTEventConcert.sol\":1178:1185  tokenId */\n      dup4\n        /* \"contracts/NFTEventConcert.sol\":1163:1186  tokenLocations[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTEventConcert.sol\":1163:1221  tokenLocations[tokenId] = locationProvider.getLocation(to) */\n      swap1\n      dup2\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      pop\n        /* \"contracts/NFTEventConcert.sol\":1239:1246  tokenId */\n      dup1\n        /* \"contracts/NFTEventConcert.sol\":1232:1246  return tokenId */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTEventConcert.sol\":1012:1253  function safeMint(address to) public payable returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":561:875  function burn(uint256 tokenId) public virtual {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":826:868  _update(address(0), tokenId, _msgSender()) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":842:843  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":846:853  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":855:867  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":855:865  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":855:867  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":826:833  _update */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":826:868  _update(address(0), tokenId, _msgSender()) */\n      jump\t// in\n    tag_167:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":561:875  function burn(uint256 tokenId) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventConcert.sol\":1582:1846  function updateLocation(uint256 tokenId) external {... */\n    tag_71:\n        /* \"contracts/NFTEventConcert.sol\":1670:1680  msg.sender */\n      caller\n        /* \"contracts/NFTEventConcert.sol\":1650:1680  ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTEventConcert.sol\":1650:1666  ownerOf(tokenId) */\n      tag_170\n        /* \"contracts/NFTEventConcert.sol\":1658:1665  tokenId */\n      dup3\n        /* \"contracts/NFTEventConcert.sol\":1650:1657  ownerOf */\n      tag_75\n        /* \"contracts/NFTEventConcert.sol\":1650:1666  ownerOf(tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/NFTEventConcert.sol\":1650:1680  ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTEventConcert.sol\":1642:1693  require(ownerOf(tokenId) == msg.sender, \"NotFound\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"contracts/NFTEventConcert.sol\":1704:1726  string memory location */\n      0x00\n        /* \"contracts/NFTEventConcert.sol\":1729:1745  locationProvider */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTEventConcert.sol\":1729:1757  locationProvider.getLocation */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd9e0dc59\n        /* \"contracts/NFTEventConcert.sol\":1758:1768  msg.sender */\n      caller\n        /* \"contracts/NFTEventConcert.sol\":1729:1769  locationProvider.getLocation(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_174:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_177:\n        /* \"contracts/NFTEventConcert.sol\":1704:1769  string memory location = locationProvider.getLocation(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/NFTEventConcert.sol\":1805:1813  location */\n      dup1\n        /* \"contracts/NFTEventConcert.sol\":1779:1793  tokenLocations */\n      0x0a\n        /* \"contracts/NFTEventConcert.sol\":1779:1802  tokenLocations[tokenId] */\n      0x00\n        /* \"contracts/NFTEventConcert.sol\":1794:1801  tokenId */\n      dup5\n        /* \"contracts/NFTEventConcert.sol\":1779:1802  tokenLocations[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTEventConcert.sol\":1779:1813  tokenLocations[tokenId] = location */\n      swap1\n      dup2\n      tag_178\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_178:\n      pop\n        /* \"contracts/NFTEventConcert.sol\":1632:1846  {... */\n      pop\n        /* \"contracts/NFTEventConcert.sol\":1582:1846  function updateLocation(uint256 tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_192\n      swap1\n      tag_128\n      jump\t// in\n    tag_192:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_193\n      swap1\n      tag_128\n      jump\t// in\n    tag_193:\n      dup1\n      iszero\n      tag_194\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_195\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_194)\n    tag_195:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_196:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_196\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_53\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventConcert.sol\":1372:1576  function tokenURI(uint256 tokenId) public view virtual override(ERC721, ERC721URIStorage) returns(string memory)  {... */\n    tag_106:\n        /* \"contracts/NFTEventConcert.sol\":1470:1483  string memory */\n      0x60\n        /* \"contracts/NFTEventConcert.sol\":1496:1518  string memory location */\n      0x00\n        /* \"contracts/NFTEventConcert.sol\":1521:1535  tokenLocations */\n      0x0a\n        /* \"contracts/NFTEventConcert.sol\":1521:1544  tokenLocations[tokenId] */\n      0x00\n        /* \"contracts/NFTEventConcert.sol\":1536:1543  tokenId */\n      dup5\n        /* \"contracts/NFTEventConcert.sol\":1521:1544  tokenLocations[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTEventConcert.sol\":1496:1544  string memory location = tokenLocations[tokenId] */\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_128\n      jump\t// in\n    tag_206:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_207\n      swap1\n      tag_128\n      jump\t// in\n    tag_207:\n      dup1\n      iszero\n      tag_208\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_209\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_208)\n    tag_209:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_210:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_210\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_208:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/NFTEventConcert.sol\":1561:1569  location */\n      dup1\n        /* \"contracts/NFTEventConcert.sol\":1554:1569  return location */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTEventConcert.sol\":1372:1576  function tokenURI(uint256 tokenId) public view virtual override(ERC721, ERC721URIStorage) returns(string memory)  {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventConcert.sol\":1852:1982  function getLocation(address owner) public view returns(string memory) {... */\n    tag_111:\n        /* \"contracts/NFTEventConcert.sol\":1908:1921  string memory */\n      0x60\n        /* \"contracts/NFTEventConcert.sol\":1940:1956  locationProvider */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTEventConcert.sol\":1940:1968  locationProvider.getLocation */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd9e0dc59\n        /* \"contracts/NFTEventConcert.sol\":1969:1974  owner */\n      dup4\n        /* \"contracts/NFTEventConcert.sol\":1940:1975  locationProvider.getLocation(owner) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_212:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_214\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_214:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_215\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_215:\n        /* \"contracts/NFTEventConcert.sol\":1933:1975  return locationProvider.getLocation(owner) */\n      swap1\n      pop\n        /* \"contracts/NFTEventConcert.sol\":1852:1982  function getLocation(address owner) public view returns(string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":760:770  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":753:771  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1073  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_224\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1137  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_248\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x07\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_257\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_263\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_264\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      0x01\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_266\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_271\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_270)\n    tag_271:\n      0x60\n      swap2\n      pop\n    tag_270:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_279\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_280\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_285\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_288\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_289\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap3\n      swap2\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_305\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_306\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_307\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_308\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_309\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_310:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_311:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_312:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_313:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_314:\n        /* \"#utility.yul\":561:584   */\n      tag_374\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_313\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_375:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_315:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_377\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_314\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_28:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_380\n      tag_311\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":833:952   */\n    tag_379:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_381\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_315\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_316:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_317:\n        /* \"#utility.yul\":1268:1289   */\n      tag_384\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_316\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_31:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_386\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_317\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_318:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_319:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_320:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_390:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_390)\n    tag_392:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_321:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_322:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_395\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_318\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":2329:2400   */\n      tag_396\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_319\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_397\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_320\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":2499:2528   */\n      tag_398\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_321\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_36:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_400\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_322\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_323:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_324:\n        /* \"#utility.yul\":3016:3040   */\n      tag_403\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_323\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_404:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_325:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_406\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_324\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_40:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_409\n      tag_311\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":3292:3411   */\n    tag_408:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_410\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_325\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_326:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_327:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_413\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_326\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_328:\n        /* \"#utility.yul\":3872:3896   */\n      tag_415\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_327\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_43:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_417\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_328\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_329:\n        /* \"#utility.yul\":4210:4234   */\n      tag_419\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_327\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_420:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_330:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_422\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_329\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_47:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_425\n      tag_311\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":4503:4622   */\n    tag_424:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_426\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_330\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_427\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_325\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_52:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_430\n      tag_311\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5000:5119   */\n    tag_429:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_431\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_330\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_432\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_330\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_433\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_325\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_56:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_436\n      tag_311\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":5591:5710   */\n    tag_435:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_437\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_330\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_331:\n        /* \"#utility.yul\":5937:5961   */\n      tag_439\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_323\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_59:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_441\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_331\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_332:\n        /* \"#utility.yul\":6272:6293   */\n      tag_443\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_316\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_444:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_333:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_446\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_332\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_96:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_449\n      tag_311\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":6553:6672   */\n    tag_448:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_450\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_330\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_451\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_333\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_334:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_335:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_336:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_337:\n        /* \"#utility.yul\":7452:7479   */\n      tag_456\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_321\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_458\n      tag_336\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":7525:7613   */\n    tag_457:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_338:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_460\n      tag_310\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_461\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_337\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_339:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_464\n      tag_336\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":7928:7984   */\n    tag_463:\n        /* \"#utility.yul\":8002:8031   */\n      tag_465\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_321\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_340:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_341:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_468\n        /* \"#utility.yul\":8374:8422   */\n      tag_469\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_339\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":8358:8423   */\n      tag_338\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_471\n      tag_335\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":8498:8610   */\n    tag_470:\n        /* \"#utility.yul\":8619:8673   */\n      tag_472\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_340\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_342:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_475\n      tag_334\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":8769:8891   */\n    tag_474:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_476\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_341\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_101:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_479\n      tag_311\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":9178:9298   */\n    tag_478:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_480\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_330\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_481\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_330\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_482\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_325\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_484\n      tag_312\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":9765:9882   */\n    tag_483:\n        /* \"#utility.yul\":9906:9968   */\n      tag_485\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_342\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_116:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_488\n      tag_311\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":10084:10203   */\n    tag_487:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_489\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_330\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_490\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_330\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_343:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_128:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_493\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_493:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_495\n      tag_343\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":10887:10971   */\n    tag_494:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11425   */\n    tag_151:\n        /* \"#utility.yul\":11132:11136   */\n      0x00\n        /* \"#utility.yul\":11170:11172   */\n      0x60\n        /* \"#utility.yul\":11159:11168   */\n      dup3\n        /* \"#utility.yul\":11155:11173   */\n      add\n        /* \"#utility.yul\":11147:11173   */\n      swap1\n      pop\n        /* \"#utility.yul\":11183:11254   */\n      tag_497\n        /* \"#utility.yul\":11251:11252   */\n      0x00\n        /* \"#utility.yul\":11240:11249   */\n      dup4\n        /* \"#utility.yul\":11236:11253   */\n      add\n        /* \"#utility.yul\":11227:11233   */\n      dup7\n        /* \"#utility.yul\":11183:11254   */\n      tag_328\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":11264:11336   */\n      tag_498\n        /* \"#utility.yul\":11332:11334   */\n      0x20\n        /* \"#utility.yul\":11321:11330   */\n      dup4\n        /* \"#utility.yul\":11317:11335   */\n      add\n        /* \"#utility.yul\":11308:11314   */\n      dup6\n        /* \"#utility.yul\":11264:11336   */\n      tag_331\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":11346:11418   */\n      tag_499\n        /* \"#utility.yul\":11414:11416   */\n      0x40\n        /* \"#utility.yul\":11403:11412   */\n      dup4\n        /* \"#utility.yul\":11399:11417   */\n      add\n        /* \"#utility.yul\":11390:11396   */\n      dup5\n        /* \"#utility.yul\":11346:11418   */\n      tag_328\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":10983:11425   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11431:11739   */\n    tag_344:\n        /* \"#utility.yul\":11493:11497   */\n      0x00\n        /* \"#utility.yul\":11583:11601   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11575:11581   */\n      dup3\n        /* \"#utility.yul\":11572:11602   */\n      gt\n        /* \"#utility.yul\":11569:11625   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":11605:11623   */\n      tag_502\n      tag_336\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":11569:11625   */\n    tag_501:\n        /* \"#utility.yul\":11643:11672   */\n      tag_503\n        /* \"#utility.yul\":11665:11671   */\n      dup3\n        /* \"#utility.yul\":11643:11672   */\n      tag_321\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":11635:11672   */\n      swap1\n      pop\n        /* \"#utility.yul\":11727:11731   */\n      0x20\n        /* \"#utility.yul\":11721:11725   */\n      dup2\n        /* \"#utility.yul\":11717:11732   */\n      add\n        /* \"#utility.yul\":11709:11732   */\n      swap1\n      pop\n        /* \"#utility.yul\":11431:11739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11745:12179   */\n    tag_345:\n        /* \"#utility.yul\":11834:11839   */\n      0x00\n        /* \"#utility.yul\":11859:11925   */\n      tag_505\n        /* \"#utility.yul\":11875:11924   */\n      tag_506\n        /* \"#utility.yul\":11917:11923   */\n      dup5\n        /* \"#utility.yul\":11875:11924   */\n      tag_344\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":11859:11925   */\n      tag_338\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":11850:11925   */\n      swap1\n      pop\n        /* \"#utility.yul\":11948:11954   */\n      dup3\n        /* \"#utility.yul\":11941:11946   */\n      dup2\n        /* \"#utility.yul\":11934:11955   */\n      mstore\n        /* \"#utility.yul\":11986:11990   */\n      0x20\n        /* \"#utility.yul\":11979:11984   */\n      dup2\n        /* \"#utility.yul\":11975:11991   */\n      add\n        /* \"#utility.yul\":12024:12027   */\n      dup5\n        /* \"#utility.yul\":12015:12021   */\n      dup5\n        /* \"#utility.yul\":12010:12013   */\n      dup5\n        /* \"#utility.yul\":12006:12022   */\n      add\n        /* \"#utility.yul\":12003:12028   */\n      gt\n        /* \"#utility.yul\":12000:12112   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":12031:12110   */\n      tag_508\n      tag_335\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":12000:12112   */\n    tag_507:\n        /* \"#utility.yul\":12121:12173   */\n      tag_509\n        /* \"#utility.yul\":12166:12172   */\n      dup5\n        /* \"#utility.yul\":12161:12164   */\n      dup3\n        /* \"#utility.yul\":12156:12159   */\n      dup6\n        /* \"#utility.yul\":12121:12173   */\n      tag_320\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":11840:12179   */\n      pop\n        /* \"#utility.yul\":11745:12179   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12199:12554   */\n    tag_346:\n        /* \"#utility.yul\":12266:12271   */\n      0x00\n        /* \"#utility.yul\":12315:12318   */\n      dup3\n        /* \"#utility.yul\":12308:12312   */\n      0x1f\n        /* \"#utility.yul\":12300:12306   */\n      dup4\n        /* \"#utility.yul\":12296:12313   */\n      add\n        /* \"#utility.yul\":12292:12319   */\n      slt\n        /* \"#utility.yul\":12282:12404   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":12323:12402   */\n      tag_512\n      tag_334\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":12282:12404   */\n    tag_511:\n        /* \"#utility.yul\":12433:12439   */\n      dup2\n        /* \"#utility.yul\":12427:12440   */\n      mload\n        /* \"#utility.yul\":12458:12548   */\n      tag_513\n        /* \"#utility.yul\":12544:12547   */\n      dup5\n        /* \"#utility.yul\":12536:12542   */\n      dup3\n        /* \"#utility.yul\":12529:12533   */\n      0x20\n        /* \"#utility.yul\":12521:12527   */\n      dup7\n        /* \"#utility.yul\":12517:12534   */\n      add\n        /* \"#utility.yul\":12458:12548   */\n      tag_345\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":12449:12548   */\n      swap2\n      pop\n        /* \"#utility.yul\":12272:12554   */\n      pop\n        /* \"#utility.yul\":12199:12554   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12560:13084   */\n    tag_161:\n        /* \"#utility.yul\":12640:12646   */\n      0x00\n        /* \"#utility.yul\":12689:12691   */\n      0x20\n        /* \"#utility.yul\":12677:12686   */\n      dup3\n        /* \"#utility.yul\":12668:12675   */\n      dup5\n        /* \"#utility.yul\":12664:12687   */\n      sub\n        /* \"#utility.yul\":12660:12692   */\n      slt\n        /* \"#utility.yul\":12657:12776   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":12695:12774   */\n      tag_516\n      tag_311\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":12657:12776   */\n    tag_515:\n        /* \"#utility.yul\":12836:12837   */\n      0x00\n        /* \"#utility.yul\":12825:12834   */\n      dup3\n        /* \"#utility.yul\":12821:12838   */\n      add\n        /* \"#utility.yul\":12815:12839   */\n      mload\n        /* \"#utility.yul\":12866:12884   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12858:12864   */\n      dup2\n        /* \"#utility.yul\":12855:12885   */\n      gt\n        /* \"#utility.yul\":12852:12969   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":12888:12967   */\n      tag_518\n      tag_312\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":12852:12969   */\n    tag_517:\n        /* \"#utility.yul\":12993:13067   */\n      tag_519\n        /* \"#utility.yul\":13059:13066   */\n      dup5\n        /* \"#utility.yul\":13050:13056   */\n      dup3\n        /* \"#utility.yul\":13039:13048   */\n      dup6\n        /* \"#utility.yul\":13035:13057   */\n      add\n        /* \"#utility.yul\":12993:13067   */\n      tag_346\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":12983:13067   */\n      swap2\n      pop\n        /* \"#utility.yul\":12786:13077   */\n      pop\n        /* \"#utility.yul\":12560:13084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13090:13231   */\n    tag_347:\n        /* \"#utility.yul\":13139:13143   */\n      0x00\n        /* \"#utility.yul\":13162:13165   */\n      dup2\n        /* \"#utility.yul\":13154:13165   */\n      swap1\n      pop\n        /* \"#utility.yul\":13185:13188   */\n      dup2\n        /* \"#utility.yul\":13182:13183   */\n      0x00\n        /* \"#utility.yul\":13175:13189   */\n      mstore\n        /* \"#utility.yul\":13219:13223   */\n      0x20\n        /* \"#utility.yul\":13216:13217   */\n      0x00\n        /* \"#utility.yul\":13206:13224   */\n      keccak256\n        /* \"#utility.yul\":13198:13224   */\n      swap1\n      pop\n        /* \"#utility.yul\":13090:13231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13237:13330   */\n    tag_348:\n        /* \"#utility.yul\":13274:13280   */\n      0x00\n        /* \"#utility.yul\":13321:13323   */\n      0x20\n        /* \"#utility.yul\":13316:13318   */\n      0x1f\n        /* \"#utility.yul\":13309:13314   */\n      dup4\n        /* \"#utility.yul\":13305:13319   */\n      add\n        /* \"#utility.yul\":13301:13324   */\n      div\n        /* \"#utility.yul\":13291:13324   */\n      swap1\n      pop\n        /* \"#utility.yul\":13237:13330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13336:13443   */\n    tag_349:\n        /* \"#utility.yul\":13380:13388   */\n      0x00\n        /* \"#utility.yul\":13430:13435   */\n      dup3\n        /* \"#utility.yul\":13424:13428   */\n      dup3\n        /* \"#utility.yul\":13420:13436   */\n      shl\n        /* \"#utility.yul\":13399:13436   */\n      swap1\n      pop\n        /* \"#utility.yul\":13336:13443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13449:13842   */\n    tag_350:\n        /* \"#utility.yul\":13518:13524   */\n      0x00\n        /* \"#utility.yul\":13568:13569   */\n      0x08\n        /* \"#utility.yul\":13556:13566   */\n      dup4\n        /* \"#utility.yul\":13552:13570   */\n      mul\n        /* \"#utility.yul\":13591:13688   */\n      tag_524\n        /* \"#utility.yul\":13621:13687   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13610:13619   */\n      dup3\n        /* \"#utility.yul\":13591:13688   */\n      tag_349\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":13709:13748   */\n      tag_525\n        /* \"#utility.yul\":13739:13747   */\n      dup7\n        /* \"#utility.yul\":13728:13737   */\n      dup4\n        /* \"#utility.yul\":13709:13748   */\n      tag_349\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":13697:13748   */\n      swap6\n      pop\n        /* \"#utility.yul\":13781:13785   */\n      dup1\n        /* \"#utility.yul\":13777:13786   */\n      not\n        /* \"#utility.yul\":13770:13775   */\n      dup5\n        /* \"#utility.yul\":13766:13787   */\n      and\n        /* \"#utility.yul\":13757:13787   */\n      swap4\n      pop\n        /* \"#utility.yul\":13830:13834   */\n      dup1\n        /* \"#utility.yul\":13820:13828   */\n      dup7\n        /* \"#utility.yul\":13816:13835   */\n      and\n        /* \"#utility.yul\":13809:13814   */\n      dup5\n        /* \"#utility.yul\":13806:13836   */\n      or\n        /* \"#utility.yul\":13796:13836   */\n      swap3\n      pop\n        /* \"#utility.yul\":13525:13842   */\n      pop\n      pop\n        /* \"#utility.yul\":13449:13842   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13848:13908   */\n    tag_351:\n        /* \"#utility.yul\":13876:13879   */\n      0x00\n        /* \"#utility.yul\":13897:13902   */\n      dup2\n        /* \"#utility.yul\":13890:13902   */\n      swap1\n      pop\n        /* \"#utility.yul\":13848:13908   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13914:14056   */\n    tag_352:\n        /* \"#utility.yul\":13964:13973   */\n      0x00\n        /* \"#utility.yul\":13997:14050   */\n      tag_528\n        /* \"#utility.yul\":14015:14049   */\n      tag_529\n        /* \"#utility.yul\":14024:14048   */\n      tag_530\n        /* \"#utility.yul\":14042:14047   */\n      dup5\n        /* \"#utility.yul\":14024:14048   */\n      tag_323\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":14015:14049   */\n      tag_351\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":13997:14050   */\n      tag_323\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":13984:14050   */\n      swap1\n      pop\n        /* \"#utility.yul\":13914:14056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14062:14137   */\n    tag_353:\n        /* \"#utility.yul\":14105:14108   */\n      0x00\n        /* \"#utility.yul\":14126:14131   */\n      dup2\n        /* \"#utility.yul\":14119:14131   */\n      swap1\n      pop\n        /* \"#utility.yul\":14062:14137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14143:14412   */\n    tag_354:\n        /* \"#utility.yul\":14253:14292   */\n      tag_533\n        /* \"#utility.yul\":14284:14291   */\n      dup4\n        /* \"#utility.yul\":14253:14292   */\n      tag_352\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":14314:14405   */\n      tag_534\n        /* \"#utility.yul\":14363:14404   */\n      tag_535\n        /* \"#utility.yul\":14387:14403   */\n      dup3\n        /* \"#utility.yul\":14363:14404   */\n      tag_353\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":14355:14361   */\n      dup5\n        /* \"#utility.yul\":14348:14352   */\n      dup5\n        /* \"#utility.yul\":14342:14353   */\n      sload\n        /* \"#utility.yul\":14314:14405   */\n      tag_350\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":14308:14312   */\n      dup3\n        /* \"#utility.yul\":14301:14406   */\n      sstore\n        /* \"#utility.yul\":14219:14412   */\n      pop\n        /* \"#utility.yul\":14143:14412   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14418:14491   */\n    tag_355:\n        /* \"#utility.yul\":14463:14466   */\n      0x00\n        /* \"#utility.yul\":14418:14491   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14497:14686   */\n    tag_356:\n        /* \"#utility.yul\":14574:14606   */\n      tag_538\n      tag_355\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":14615:14680   */\n      tag_539\n        /* \"#utility.yul\":14673:14679   */\n      dup2\n        /* \"#utility.yul\":14665:14671   */\n      dup5\n        /* \"#utility.yul\":14659:14663   */\n      dup5\n        /* \"#utility.yul\":14615:14680   */\n      tag_354\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":14550:14686   */\n      pop\n        /* \"#utility.yul\":14497:14686   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14692:14878   */\n    tag_357:\n        /* \"#utility.yul\":14752:14872   */\n    tag_541:\n        /* \"#utility.yul\":14769:14772   */\n      dup2\n        /* \"#utility.yul\":14762:14767   */\n      dup2\n        /* \"#utility.yul\":14759:14773   */\n      lt\n        /* \"#utility.yul\":14752:14872   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":14823:14862   */\n      tag_544\n        /* \"#utility.yul\":14860:14861   */\n      0x00\n        /* \"#utility.yul\":14853:14858   */\n      dup3\n        /* \"#utility.yul\":14823:14862   */\n      tag_356\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":14796:14797   */\n      0x01\n        /* \"#utility.yul\":14789:14794   */\n      dup2\n        /* \"#utility.yul\":14785:14798   */\n      add\n        /* \"#utility.yul\":14776:14798   */\n      swap1\n      pop\n        /* \"#utility.yul\":14752:14872   */\n      jump(tag_541)\n    tag_543:\n        /* \"#utility.yul\":14692:14878   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14884:15427   */\n    tag_358:\n        /* \"#utility.yul\":14985:14987   */\n      0x1f\n        /* \"#utility.yul\":14980:14983   */\n      dup3\n        /* \"#utility.yul\":14977:14988   */\n      gt\n        /* \"#utility.yul\":14974:15420   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":15019:15057   */\n      tag_547\n        /* \"#utility.yul\":15051:15056   */\n      dup2\n        /* \"#utility.yul\":15019:15057   */\n      tag_347\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":15103:15132   */\n      tag_548\n        /* \"#utility.yul\":15121:15131   */\n      dup5\n        /* \"#utility.yul\":15103:15132   */\n      tag_348\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":15093:15101   */\n      dup2\n        /* \"#utility.yul\":15089:15133   */\n      add\n        /* \"#utility.yul\":15286:15288   */\n      0x20\n        /* \"#utility.yul\":15274:15284   */\n      dup6\n        /* \"#utility.yul\":15271:15289   */\n      lt\n        /* \"#utility.yul\":15268:15317   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":15307:15315   */\n      dup2\n        /* \"#utility.yul\":15292:15315   */\n      swap1\n      pop\n        /* \"#utility.yul\":15268:15317   */\n    tag_549:\n        /* \"#utility.yul\":15330:15410   */\n      tag_550\n        /* \"#utility.yul\":15386:15408   */\n      tag_551\n        /* \"#utility.yul\":15404:15407   */\n      dup6\n        /* \"#utility.yul\":15386:15408   */\n      tag_348\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":15376:15384   */\n      dup4\n        /* \"#utility.yul\":15372:15409   */\n      add\n        /* \"#utility.yul\":15359:15370   */\n      dup3\n        /* \"#utility.yul\":15330:15410   */\n      tag_357\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":14989:15420   */\n      pop\n      pop\n        /* \"#utility.yul\":14974:15420   */\n    tag_546:\n        /* \"#utility.yul\":14884:15427   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15433:15550   */\n    tag_359:\n        /* \"#utility.yul\":15487:15495   */\n      0x00\n        /* \"#utility.yul\":15537:15542   */\n      dup3\n        /* \"#utility.yul\":15531:15535   */\n      dup3\n        /* \"#utility.yul\":15527:15543   */\n      shr\n        /* \"#utility.yul\":15506:15543   */\n      swap1\n      pop\n        /* \"#utility.yul\":15433:15550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15556:15725   */\n    tag_360:\n        /* \"#utility.yul\":15600:15606   */\n      0x00\n        /* \"#utility.yul\":15633:15684   */\n      tag_554\n        /* \"#utility.yul\":15681:15682   */\n      0x00\n        /* \"#utility.yul\":15677:15683   */\n      not\n        /* \"#utility.yul\":15669:15674   */\n      dup5\n        /* \"#utility.yul\":15666:15667   */\n      0x08\n        /* \"#utility.yul\":15662:15675   */\n      mul\n        /* \"#utility.yul\":15633:15684   */\n      tag_359\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":15629:15685   */\n      not\n        /* \"#utility.yul\":15714:15718   */\n      dup1\n        /* \"#utility.yul\":15708:15712   */\n      dup4\n        /* \"#utility.yul\":15704:15719   */\n      and\n        /* \"#utility.yul\":15694:15719   */\n      swap2\n      pop\n        /* \"#utility.yul\":15607:15725   */\n      pop\n        /* \"#utility.yul\":15556:15725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15730:16025   */\n    tag_361:\n        /* \"#utility.yul\":15806:15810   */\n      0x00\n        /* \"#utility.yul\":15952:15981   */\n      tag_556\n        /* \"#utility.yul\":15977:15980   */\n      dup4\n        /* \"#utility.yul\":15971:15975   */\n      dup4\n        /* \"#utility.yul\":15952:15981   */\n      tag_360\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":15944:15981   */\n      swap2\n      pop\n        /* \"#utility.yul\":16014:16017   */\n      dup3\n        /* \"#utility.yul\":16011:16012   */\n      0x02\n        /* \"#utility.yul\":16007:16018   */\n      mul\n        /* \"#utility.yul\":16001:16005   */\n      dup3\n        /* \"#utility.yul\":15998:16019   */\n      or\n        /* \"#utility.yul\":15990:16019   */\n      swap1\n      pop\n        /* \"#utility.yul\":15730:16025   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16030:17425   */\n    tag_163:\n        /* \"#utility.yul\":16147:16184   */\n      tag_558\n        /* \"#utility.yul\":16180:16183   */\n      dup3\n        /* \"#utility.yul\":16147:16184   */\n      tag_318\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":16249:16267   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16241:16247   */\n      dup2\n        /* \"#utility.yul\":16238:16268   */\n      gt\n        /* \"#utility.yul\":16235:16291   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":16271:16289   */\n      tag_560\n      tag_336\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":16235:16291   */\n    tag_559:\n        /* \"#utility.yul\":16315:16353   */\n      tag_561\n        /* \"#utility.yul\":16347:16351   */\n      dup3\n        /* \"#utility.yul\":16341:16352   */\n      sload\n        /* \"#utility.yul\":16315:16353   */\n      tag_128\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":16400:16467   */\n      tag_562\n        /* \"#utility.yul\":16460:16466   */\n      dup3\n        /* \"#utility.yul\":16452:16458   */\n      dup3\n        /* \"#utility.yul\":16446:16450   */\n      dup6\n        /* \"#utility.yul\":16400:16467   */\n      tag_358\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":16494:16495   */\n      0x00\n        /* \"#utility.yul\":16518:16522   */\n      0x20\n        /* \"#utility.yul\":16505:16522   */\n      swap1\n      pop\n        /* \"#utility.yul\":16550:16552   */\n      0x1f\n        /* \"#utility.yul\":16542:16548   */\n      dup4\n        /* \"#utility.yul\":16539:16553   */\n      gt\n        /* \"#utility.yul\":16567:16568   */\n      0x01\n        /* \"#utility.yul\":16562:17180   */\n      dup2\n      eq\n      tag_564\n      jumpi\n        /* \"#utility.yul\":17224:17225   */\n      0x00\n        /* \"#utility.yul\":17241:17247   */\n      dup5\n        /* \"#utility.yul\":17238:17315   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":17290:17299   */\n      dup3\n        /* \"#utility.yul\":17285:17288   */\n      dup8\n        /* \"#utility.yul\":17281:17300   */\n      add\n        /* \"#utility.yul\":17275:17301   */\n      mload\n        /* \"#utility.yul\":17266:17301   */\n      swap1\n      pop\n        /* \"#utility.yul\":17238:17315   */\n    tag_565:\n        /* \"#utility.yul\":17341:17408   */\n      tag_566\n        /* \"#utility.yul\":17401:17407   */\n      dup6\n        /* \"#utility.yul\":17394:17399   */\n      dup3\n        /* \"#utility.yul\":17341:17408   */\n      tag_361\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":17335:17339   */\n      dup7\n        /* \"#utility.yul\":17328:17409   */\n      sstore\n        /* \"#utility.yul\":17197:17419   */\n      pop\n        /* \"#utility.yul\":16532:17419   */\n      jump(tag_563)\n        /* \"#utility.yul\":16562:17180   */\n    tag_564:\n        /* \"#utility.yul\":16614:16618   */\n      0x1f\n        /* \"#utility.yul\":16610:16619   */\n      not\n        /* \"#utility.yul\":16602:16608   */\n      dup5\n        /* \"#utility.yul\":16598:16620   */\n      and\n        /* \"#utility.yul\":16648:16685   */\n      tag_567\n        /* \"#utility.yul\":16680:16684   */\n      dup7\n        /* \"#utility.yul\":16648:16685   */\n      tag_347\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":16707:16708   */\n      0x00\n        /* \"#utility.yul\":16721:16929   */\n    tag_568:\n        /* \"#utility.yul\":16735:16742   */\n      dup3\n        /* \"#utility.yul\":16732:16733   */\n      dup2\n        /* \"#utility.yul\":16729:16743   */\n      lt\n        /* \"#utility.yul\":16721:16929   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":16814:16823   */\n      dup5\n        /* \"#utility.yul\":16809:16812   */\n      dup10\n        /* \"#utility.yul\":16805:16824   */\n      add\n        /* \"#utility.yul\":16799:16825   */\n      mload\n        /* \"#utility.yul\":16791:16797   */\n      dup3\n        /* \"#utility.yul\":16784:16826   */\n      sstore\n        /* \"#utility.yul\":16865:16866   */\n      0x01\n        /* \"#utility.yul\":16857:16863   */\n      dup3\n        /* \"#utility.yul\":16853:16867   */\n      add\n        /* \"#utility.yul\":16843:16867   */\n      swap2\n      pop\n        /* \"#utility.yul\":16912:16914   */\n      0x20\n        /* \"#utility.yul\":16901:16910   */\n      dup6\n        /* \"#utility.yul\":16897:16915   */\n      add\n        /* \"#utility.yul\":16884:16915   */\n      swap5\n      pop\n        /* \"#utility.yul\":16758:16762   */\n      0x20\n        /* \"#utility.yul\":16755:16756   */\n      dup2\n        /* \"#utility.yul\":16751:16763   */\n      add\n        /* \"#utility.yul\":16746:16763   */\n      swap1\n      pop\n        /* \"#utility.yul\":16721:16929   */\n      jump(tag_568)\n    tag_570:\n        /* \"#utility.yul\":16957:16963   */\n      dup7\n        /* \"#utility.yul\":16948:16955   */\n      dup4\n        /* \"#utility.yul\":16945:16964   */\n      lt\n        /* \"#utility.yul\":16942:17121   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":17015:17024   */\n      dup5\n        /* \"#utility.yul\":17010:17013   */\n      dup10\n        /* \"#utility.yul\":17006:17025   */\n      add\n        /* \"#utility.yul\":17000:17026   */\n      mload\n        /* \"#utility.yul\":17058:17106   */\n      tag_572\n        /* \"#utility.yul\":17100:17104   */\n      0x1f\n        /* \"#utility.yul\":17092:17098   */\n      dup10\n        /* \"#utility.yul\":17088:17105   */\n      and\n        /* \"#utility.yul\":17077:17086   */\n      dup3\n        /* \"#utility.yul\":17058:17106   */\n      tag_360\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":17050:17056   */\n      dup4\n        /* \"#utility.yul\":17043:17107   */\n      sstore\n        /* \"#utility.yul\":16965:17121   */\n      pop\n        /* \"#utility.yul\":16942:17121   */\n    tag_571:\n        /* \"#utility.yul\":17167:17168   */\n      0x01\n        /* \"#utility.yul\":17163:17164   */\n      0x02\n        /* \"#utility.yul\":17155:17161   */\n      dup9\n        /* \"#utility.yul\":17151:17165   */\n      mul\n        /* \"#utility.yul\":17147:17169   */\n      add\n        /* \"#utility.yul\":17141:17145   */\n      dup9\n        /* \"#utility.yul\":17134:17170   */\n      sstore\n        /* \"#utility.yul\":16569:17180   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16532:17419   */\n    tag_563:\n      pop\n        /* \"#utility.yul\":16122:17425   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16030:17425   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17431:17589   */\n    tag_362:\n        /* \"#utility.yul\":17571:17581   */\n      0x4e6f74466f756e64000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17567:17568   */\n      0x00\n        /* \"#utility.yul\":17559:17565   */\n      dup3\n        /* \"#utility.yul\":17555:17569   */\n      add\n        /* \"#utility.yul\":17548:17582   */\n      mstore\n        /* \"#utility.yul\":17431:17589   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17595:17960   */\n    tag_363:\n        /* \"#utility.yul\":17737:17740   */\n      0x00\n        /* \"#utility.yul\":17758:17824   */\n      tag_575\n        /* \"#utility.yul\":17822:17823   */\n      0x08\n        /* \"#utility.yul\":17817:17820   */\n      dup4\n        /* \"#utility.yul\":17758:17824   */\n      tag_319\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":17751:17824   */\n      swap2\n      pop\n        /* \"#utility.yul\":17833:17926   */\n      tag_576\n        /* \"#utility.yul\":17922:17925   */\n      dup3\n        /* \"#utility.yul\":17833:17926   */\n      tag_362\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":17951:17953   */\n      0x20\n        /* \"#utility.yul\":17946:17949   */\n      dup3\n        /* \"#utility.yul\":17942:17954   */\n      add\n        /* \"#utility.yul\":17935:17954   */\n      swap1\n      pop\n        /* \"#utility.yul\":17595:17960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17966:18385   */\n    tag_173:\n        /* \"#utility.yul\":18132:18136   */\n      0x00\n        /* \"#utility.yul\":18170:18172   */\n      0x20\n        /* \"#utility.yul\":18159:18168   */\n      dup3\n        /* \"#utility.yul\":18155:18173   */\n      add\n        /* \"#utility.yul\":18147:18173   */\n      swap1\n      pop\n        /* \"#utility.yul\":18219:18228   */\n      dup2\n        /* \"#utility.yul\":18213:18217   */\n      dup2\n        /* \"#utility.yul\":18209:18229   */\n      sub\n        /* \"#utility.yul\":18205:18206   */\n      0x00\n        /* \"#utility.yul\":18194:18203   */\n      dup4\n        /* \"#utility.yul\":18190:18207   */\n      add\n        /* \"#utility.yul\":18183:18230   */\n      mstore\n        /* \"#utility.yul\":18247:18378   */\n      tag_578\n        /* \"#utility.yul\":18373:18377   */\n      dup2\n        /* \"#utility.yul\":18247:18378   */\n      tag_363\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":18239:18378   */\n      swap1\n      pop\n        /* \"#utility.yul\":17966:18385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18391:18489   */\n    tag_364:\n        /* \"#utility.yul\":18442:18448   */\n      0x00\n        /* \"#utility.yul\":18476:18481   */\n      dup2\n        /* \"#utility.yul\":18470:18482   */\n      mload\n        /* \"#utility.yul\":18460:18482   */\n      swap1\n      pop\n        /* \"#utility.yul\":18391:18489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18495:18663   */\n    tag_365:\n        /* \"#utility.yul\":18578:18589   */\n      0x00\n        /* \"#utility.yul\":18612:18618   */\n      dup3\n        /* \"#utility.yul\":18607:18610   */\n      dup3\n        /* \"#utility.yul\":18600:18619   */\n      mstore\n        /* \"#utility.yul\":18652:18656   */\n      0x20\n        /* \"#utility.yul\":18647:18650   */\n      dup3\n        /* \"#utility.yul\":18643:18657   */\n      add\n        /* \"#utility.yul\":18628:18657   */\n      swap1\n      pop\n        /* \"#utility.yul\":18495:18663   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18669:19042   */\n    tag_366:\n        /* \"#utility.yul\":18755:18758   */\n      0x00\n        /* \"#utility.yul\":18783:18821   */\n      tag_582\n        /* \"#utility.yul\":18815:18820   */\n      dup3\n        /* \"#utility.yul\":18783:18821   */\n      tag_364\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":18837:18907   */\n      tag_583\n        /* \"#utility.yul\":18900:18906   */\n      dup2\n        /* \"#utility.yul\":18895:18898   */\n      dup6\n        /* \"#utility.yul\":18837:18907   */\n      tag_365\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":18830:18907   */\n      swap4\n      pop\n        /* \"#utility.yul\":18916:18981   */\n      tag_584\n        /* \"#utility.yul\":18974:18980   */\n      dup2\n        /* \"#utility.yul\":18969:18972   */\n      dup6\n        /* \"#utility.yul\":18962:18966   */\n      0x20\n        /* \"#utility.yul\":18955:18960   */\n      dup7\n        /* \"#utility.yul\":18951:18967   */\n      add\n        /* \"#utility.yul\":18916:18981   */\n      tag_320\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":19006:19035   */\n      tag_585\n        /* \"#utility.yul\":19028:19034   */\n      dup2\n        /* \"#utility.yul\":19006:19035   */\n      tag_321\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":19001:19004   */\n      dup5\n        /* \"#utility.yul\":18997:19036   */\n      add\n        /* \"#utility.yul\":18990:19036   */\n      swap2\n      pop\n        /* \"#utility.yul\":18759:19042   */\n      pop\n        /* \"#utility.yul\":18669:19042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19048:19688   */\n    tag_262:\n        /* \"#utility.yul\":19243:19247   */\n      0x00\n        /* \"#utility.yul\":19281:19284   */\n      0x80\n        /* \"#utility.yul\":19270:19279   */\n      dup3\n        /* \"#utility.yul\":19266:19285   */\n      add\n        /* \"#utility.yul\":19258:19285   */\n      swap1\n      pop\n        /* \"#utility.yul\":19295:19366   */\n      tag_587\n        /* \"#utility.yul\":19363:19364   */\n      0x00\n        /* \"#utility.yul\":19352:19361   */\n      dup4\n        /* \"#utility.yul\":19348:19365   */\n      add\n        /* \"#utility.yul\":19339:19345   */\n      dup8\n        /* \"#utility.yul\":19295:19366   */\n      tag_328\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":19376:19448   */\n      tag_588\n        /* \"#utility.yul\":19444:19446   */\n      0x20\n        /* \"#utility.yul\":19433:19442   */\n      dup4\n        /* \"#utility.yul\":19429:19447   */\n      add\n        /* \"#utility.yul\":19420:19426   */\n      dup7\n        /* \"#utility.yul\":19376:19448   */\n      tag_328\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":19458:19530   */\n      tag_589\n        /* \"#utility.yul\":19526:19528   */\n      0x40\n        /* \"#utility.yul\":19515:19524   */\n      dup4\n        /* \"#utility.yul\":19511:19529   */\n      add\n        /* \"#utility.yul\":19502:19508   */\n      dup6\n        /* \"#utility.yul\":19458:19530   */\n      tag_331\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":19577:19586   */\n      dup2\n        /* \"#utility.yul\":19571:19575   */\n      dup2\n        /* \"#utility.yul\":19567:19587   */\n      sub\n        /* \"#utility.yul\":19562:19564   */\n      0x60\n        /* \"#utility.yul\":19551:19560   */\n      dup4\n        /* \"#utility.yul\":19547:19565   */\n      add\n        /* \"#utility.yul\":19540:19588   */\n      mstore\n        /* \"#utility.yul\":19605:19681   */\n      tag_590\n        /* \"#utility.yul\":19676:19680   */\n      dup2\n        /* \"#utility.yul\":19667:19673   */\n      dup5\n        /* \"#utility.yul\":19605:19681   */\n      tag_366\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":19597:19681   */\n      swap1\n      pop\n        /* \"#utility.yul\":19048:19688   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19694:19835   */\n    tag_367:\n        /* \"#utility.yul\":19750:19755   */\n      0x00\n        /* \"#utility.yul\":19781:19787   */\n      dup2\n        /* \"#utility.yul\":19775:19788   */\n      mload\n        /* \"#utility.yul\":19766:19788   */\n      swap1\n      pop\n        /* \"#utility.yul\":19797:19829   */\n      tag_592\n        /* \"#utility.yul\":19823:19828   */\n      dup2\n        /* \"#utility.yul\":19797:19829   */\n      tag_314\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":19694:19835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19841:20190   */\n    tag_265:\n        /* \"#utility.yul\":19910:19916   */\n      0x00\n        /* \"#utility.yul\":19959:19961   */\n      0x20\n        /* \"#utility.yul\":19947:19956   */\n      dup3\n        /* \"#utility.yul\":19938:19945   */\n      dup5\n        /* \"#utility.yul\":19934:19957   */\n      sub\n        /* \"#utility.yul\":19930:19962   */\n      slt\n        /* \"#utility.yul\":19927:20046   */\n      iszero\n      tag_594\n      jumpi\n        /* \"#utility.yul\":19965:20044   */\n      tag_595\n      tag_311\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":19927:20046   */\n    tag_594:\n        /* \"#utility.yul\":20085:20086   */\n      0x00\n        /* \"#utility.yul\":20110:20173   */\n      tag_596\n        /* \"#utility.yul\":20165:20172   */\n      dup5\n        /* \"#utility.yul\":20156:20162   */\n      dup3\n        /* \"#utility.yul\":20145:20154   */\n      dup6\n        /* \"#utility.yul\":20141:20163   */\n      add\n        /* \"#utility.yul\":20110:20173   */\n      tag_367\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":20100:20173   */\n      swap2\n      pop\n        /* \"#utility.yul\":20056:20183   */\n      pop\n        /* \"#utility.yul\":19841:20190   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20196:20528   */\n    tag_302:\n        /* \"#utility.yul\":20317:20321   */\n      0x00\n        /* \"#utility.yul\":20355:20357   */\n      0x40\n        /* \"#utility.yul\":20344:20353   */\n      dup3\n        /* \"#utility.yul\":20340:20358   */\n      add\n        /* \"#utility.yul\":20332:20358   */\n      swap1\n      pop\n        /* \"#utility.yul\":20368:20439   */\n      tag_598\n        /* \"#utility.yul\":20436:20437   */\n      0x00\n        /* \"#utility.yul\":20425:20434   */\n      dup4\n        /* \"#utility.yul\":20421:20438   */\n      add\n        /* \"#utility.yul\":20412:20418   */\n      dup6\n        /* \"#utility.yul\":20368:20439   */\n      tag_328\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":20449:20521   */\n      tag_599\n        /* \"#utility.yul\":20517:20519   */\n      0x20\n        /* \"#utility.yul\":20506:20515   */\n      dup4\n        /* \"#utility.yul\":20502:20520   */\n      add\n        /* \"#utility.yul\":20493:20499   */\n      dup5\n        /* \"#utility.yul\":20449:20521   */\n      tag_331\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":20196:20528   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220604836e18d0388ca716f66e590a12d0e67b32de16a41f84319f925ef8b28c78264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3257": {
									"entryPoint": null,
									"id": 3257,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_386": {
									"entryPoint": null,
									"id": 386,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 319,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_LocationProvider_$3204_fromMemory": {
									"entryPoint": 997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_contract$_LocationProvider_$3204_fromMemory": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1639,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_LocationProvider_$3204": {
									"entryPoint": 953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_LocationProvider_$3204": {
									"entryPoint": 972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1569,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10200:19",
										"nodeType": "YulBlock",
										"src": "0:10200:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "423:28:19",
													"nodeType": "YulBlock",
													"src": "423:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:19",
																		"nodeType": "YulLiteral",
																		"src": "440:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:19",
																		"nodeType": "YulLiteral",
																		"src": "443:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:19"
																},
																"nativeSrc": "433:12:19",
																"nodeType": "YulFunctionCall",
																"src": "433:12:19"
															},
															"nativeSrc": "433:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:19"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:19"
											},
											{
												"body": {
													"nativeSrc": "546:28:19",
													"nodeType": "YulBlock",
													"src": "546:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:19",
																		"nodeType": "YulLiteral",
																		"src": "563:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:19",
																		"nodeType": "YulLiteral",
																		"src": "566:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:19"
																},
																"nativeSrc": "556:12:19",
																"nodeType": "YulFunctionCall",
																"src": "556:12:19"
															},
															"nativeSrc": "556:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:19"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:19"
											},
											{
												"body": {
													"nativeSrc": "628:54:19",
													"nodeType": "YulBlock",
													"src": "628:54:19",
													"statements": [
														{
															"nativeSrc": "638:38:19",
															"nodeType": "YulAssignment",
															"src": "638:38:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:19",
																				"nodeType": "YulLiteral",
																				"src": "663:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:19"
																		},
																		"nativeSrc": "652:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:19",
																				"nodeType": "YulLiteral",
																				"src": "672:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:19"
																		},
																		"nativeSrc": "668:7:19",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:19"
																},
																"nativeSrc": "648:28:19",
																"nodeType": "YulFunctionCall",
																"src": "648:28:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:19"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:19",
														"nodeType": "YulTypedName",
														"src": "611:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:19",
														"nodeType": "YulTypedName",
														"src": "621:6:19",
														"type": ""
													}
												],
												"src": "580:102:19"
											},
											{
												"body": {
													"nativeSrc": "716:152:19",
													"nodeType": "YulBlock",
													"src": "716:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:19",
																		"nodeType": "YulLiteral",
																		"src": "733:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:19",
																		"nodeType": "YulLiteral",
																		"src": "736:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:19"
																},
																"nativeSrc": "726:88:19",
																"nodeType": "YulFunctionCall",
																"src": "726:88:19"
															},
															"nativeSrc": "726:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:19",
																		"nodeType": "YulLiteral",
																		"src": "830:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:19",
																		"nodeType": "YulLiteral",
																		"src": "833:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:19"
																},
																"nativeSrc": "823:15:19",
																"nodeType": "YulFunctionCall",
																"src": "823:15:19"
															},
															"nativeSrc": "823:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:19",
																		"nodeType": "YulLiteral",
																		"src": "854:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:19",
																		"nodeType": "YulLiteral",
																		"src": "857:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:19"
																},
																"nativeSrc": "847:15:19",
																"nodeType": "YulFunctionCall",
																"src": "847:15:19"
															},
															"nativeSrc": "847:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:19"
											},
											{
												"body": {
													"nativeSrc": "917:238:19",
													"nodeType": "YulBlock",
													"src": "917:238:19",
													"statements": [
														{
															"nativeSrc": "927:58:19",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:19"
																		},
																		"nativeSrc": "957:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:19"
																},
																"nativeSrc": "945:40:19",
																"nodeType": "YulFunctionCall",
																"src": "945:40:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:19",
																	"nodeType": "YulTypedName",
																	"src": "931:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:19",
																"nodeType": "YulBlock",
																"src": "1096:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:19"
																			},
																			"nativeSrc": "1098:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:19"
																		},
																		"nativeSrc": "1098:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:19",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:19"
																		},
																		"nativeSrc": "1036:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:19"
																		},
																		"nativeSrc": "1072:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:19"
																},
																"nativeSrc": "1033:62:19",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:19"
															},
															"nativeSrc": "1030:88:19",
															"nodeType": "YulIf",
															"src": "1030:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:19"
																},
																"nativeSrc": "1127:22:19",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:19"
															},
															"nativeSrc": "1127:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:19"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:19",
														"nodeType": "YulTypedName",
														"src": "903:6:19",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:19",
														"nodeType": "YulTypedName",
														"src": "911:4:19",
														"type": ""
													}
												],
												"src": "874:281:19"
											},
											{
												"body": {
													"nativeSrc": "1202:88:19",
													"nodeType": "YulBlock",
													"src": "1202:88:19",
													"statements": [
														{
															"nativeSrc": "1212:30:19",
															"nodeType": "YulAssignment",
															"src": "1212:30:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:19"
																},
																"nativeSrc": "1222:20:19",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:19"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:19"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:19",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:19"
																},
																"nativeSrc": "1251:33:19",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:19"
															},
															"nativeSrc": "1251:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:19"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:19",
														"nodeType": "YulTypedName",
														"src": "1186:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:19",
														"nodeType": "YulTypedName",
														"src": "1195:6:19",
														"type": ""
													}
												],
												"src": "1161:129:19"
											},
											{
												"body": {
													"nativeSrc": "1363:241:19",
													"nodeType": "YulBlock",
													"src": "1363:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:19",
																"nodeType": "YulBlock",
																"src": "1468:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:19"
																			},
																			"nativeSrc": "1470:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:19"
																		},
																		"nativeSrc": "1470:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:19",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:19"
																},
																"nativeSrc": "1437:30:19",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:19"
															},
															"nativeSrc": "1434:56:19",
															"nodeType": "YulIf",
															"src": "1434:56:19"
														},
														{
															"nativeSrc": "1500:37:19",
															"nodeType": "YulAssignment",
															"src": "1500:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:19"
																},
																"nativeSrc": "1508:29:19",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:19"
																}
															]
														},
														{
															"nativeSrc": "1574:23:19",
															"nodeType": "YulAssignment",
															"src": "1574:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:19"
																},
																"nativeSrc": "1582:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:19",
														"nodeType": "YulTypedName",
														"src": "1347:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:19",
														"nodeType": "YulTypedName",
														"src": "1358:4:19",
														"type": ""
													}
												],
												"src": "1296:308:19"
											},
											{
												"body": {
													"nativeSrc": "1672:184:19",
													"nodeType": "YulBlock",
													"src": "1672:184:19",
													"statements": [
														{
															"nativeSrc": "1682:10:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:19",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:19",
																"nodeType": "YulLiteral",
																"src": "1691:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:19",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:19",
																"nodeType": "YulBlock",
																"src": "1751:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:19"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:19"
																					},
																					"nativeSrc": "1772:11:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:19"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:19"
																							},
																							"nativeSrc": "1791:11:19",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:19"
																					},
																					"nativeSrc": "1785:18:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:19"
																			},
																			"nativeSrc": "1765:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:19"
																		},
																		"nativeSrc": "1765:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:19"
																},
																"nativeSrc": "1709:13:19",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:19"
															},
															"nativeSrc": "1701:113:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:19",
																"nodeType": "YulBlock",
																"src": "1723:19:19",
																"statements": [
																	{
																		"nativeSrc": "1725:15:19",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:19",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:19",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:19"
																			},
																			"nativeSrc": "1730:10:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:19",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:19",
																"nodeType": "YulBlock",
																"src": "1705:3:19",
																"statements": []
															},
															"src": "1701:113:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:19"
																		},
																		"nativeSrc": "1830:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:19"
																},
																"nativeSrc": "1823:27:19",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:19"
															},
															"nativeSrc": "1823:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:19",
														"nodeType": "YulTypedName",
														"src": "1654:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:19",
														"nodeType": "YulTypedName",
														"src": "1659:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:19",
														"nodeType": "YulTypedName",
														"src": "1664:6:19",
														"type": ""
													}
												],
												"src": "1610:246:19"
											},
											{
												"body": {
													"nativeSrc": "1957:339:19",
													"nodeType": "YulBlock",
													"src": "1957:339:19",
													"statements": [
														{
															"nativeSrc": "1967:75:19",
															"nodeType": "YulAssignment",
															"src": "1967:75:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:19",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:19"
																		},
																		"nativeSrc": "1992:49:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:19"
																},
																"nativeSrc": "1976:66:19",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:19"
																},
																"nativeSrc": "2051:21:19",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:19"
															},
															"nativeSrc": "2051:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:19"
														},
														{
															"nativeSrc": "2081:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:19",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:19"
																},
																"nativeSrc": "2092:16:19",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:19",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:19",
																"nodeType": "YulBlock",
																"src": "2146:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:19"
																			},
																			"nativeSrc": "2148:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:19"
																		},
																		"nativeSrc": "2148:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:19"
																		},
																		"nativeSrc": "2123:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:19"
																},
																"nativeSrc": "2120:25:19",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:19"
															},
															"nativeSrc": "2117:112:19",
															"nodeType": "YulIf",
															"src": "2117:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:19"
																},
																"nativeSrc": "2238:52:19",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:19"
															},
															"nativeSrc": "2238:52:19",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:19",
														"nodeType": "YulTypedName",
														"src": "1930:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:19",
														"nodeType": "YulTypedName",
														"src": "1935:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:19",
														"nodeType": "YulTypedName",
														"src": "1943:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:19",
														"nodeType": "YulTypedName",
														"src": "1951:5:19",
														"type": ""
													}
												],
												"src": "1862:434:19"
											},
											{
												"body": {
													"nativeSrc": "2389:282:19",
													"nodeType": "YulBlock",
													"src": "2389:282:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:19",
																"nodeType": "YulBlock",
																"src": "2438:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:19"
																			},
																			"nativeSrc": "2440:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:19"
																		},
																		"nativeSrc": "2440:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:19",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:19"
																				},
																				"nativeSrc": "2413:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:19"
																		},
																		"nativeSrc": "2409:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:19"
																},
																"nativeSrc": "2402:35:19",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:19"
															},
															"nativeSrc": "2399:122:19",
															"nodeType": "YulIf",
															"src": "2399:122:19"
														},
														{
															"nativeSrc": "2530:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:19"
																},
																"nativeSrc": "2544:13:19",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:19",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:19",
															"nodeType": "YulAssignment",
															"src": "2566:99:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:19",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:19"
																		},
																		"nativeSrc": "2634:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:19"
																},
																"nativeSrc": "2575:90:19",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:19",
														"nodeType": "YulTypedName",
														"src": "2367:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:19",
														"nodeType": "YulTypedName",
														"src": "2375:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:19",
														"nodeType": "YulTypedName",
														"src": "2383:5:19",
														"type": ""
													}
												],
												"src": "2316:355:19"
											},
											{
												"body": {
													"nativeSrc": "2722:81:19",
													"nodeType": "YulBlock",
													"src": "2722:81:19",
													"statements": [
														{
															"nativeSrc": "2732:65:19",
															"nodeType": "YulAssignment",
															"src": "2732:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2747:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2747:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2754:42:19",
																		"nodeType": "YulLiteral",
																		"src": "2754:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2743:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2743:3:19"
																},
																"nativeSrc": "2743:54:19",
																"nodeType": "YulFunctionCall",
																"src": "2743:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2732:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "2732:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2677:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2704:5:19",
														"nodeType": "YulTypedName",
														"src": "2704:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2714:7:19",
														"nodeType": "YulTypedName",
														"src": "2714:7:19",
														"type": ""
													}
												],
												"src": "2677:126:19"
											},
											{
												"body": {
													"nativeSrc": "2854:51:19",
													"nodeType": "YulBlock",
													"src": "2854:51:19",
													"statements": [
														{
															"nativeSrc": "2864:35:19",
															"nodeType": "YulAssignment",
															"src": "2864:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2893:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2893:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2875:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "2875:17:19"
																},
																"nativeSrc": "2875:24:19",
																"nodeType": "YulFunctionCall",
																"src": "2875:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2864:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "2864:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2809:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2836:5:19",
														"nodeType": "YulTypedName",
														"src": "2836:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2846:7:19",
														"nodeType": "YulTypedName",
														"src": "2846:7:19",
														"type": ""
													}
												],
												"src": "2809:96:19"
											},
											{
												"body": {
													"nativeSrc": "2981:51:19",
													"nodeType": "YulBlock",
													"src": "2981:51:19",
													"statements": [
														{
															"nativeSrc": "2991:35:19",
															"nodeType": "YulAssignment",
															"src": "2991:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3020:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3020:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "3002:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "3002:17:19"
																},
																"nativeSrc": "3002:24:19",
																"nodeType": "YulFunctionCall",
																"src": "3002:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2991:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "2991:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_LocationProvider_$3204",
												"nativeSrc": "2911:121:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2963:5:19",
														"nodeType": "YulTypedName",
														"src": "2963:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2973:7:19",
														"nodeType": "YulTypedName",
														"src": "2973:7:19",
														"type": ""
													}
												],
												"src": "2911:121:19"
											},
											{
												"body": {
													"nativeSrc": "3106:104:19",
													"nodeType": "YulBlock",
													"src": "3106:104:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3188:16:19",
																"nodeType": "YulBlock",
																"src": "3188:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3197:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3197:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3200:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3200:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3190:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3190:6:19"
																			},
																			"nativeSrc": "3190:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3190:12:19"
																		},
																		"nativeSrc": "3190:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3190:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3129:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3129:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3179:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "3179:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_LocationProvider_$3204",
																					"nativeSrc": "3136:42:19",
																					"nodeType": "YulIdentifier",
																					"src": "3136:42:19"
																				},
																				"nativeSrc": "3136:49:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3136:49:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3126:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "3126:2:19"
																		},
																		"nativeSrc": "3126:60:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3126:60:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3119:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3119:6:19"
																},
																"nativeSrc": "3119:68:19",
																"nodeType": "YulFunctionCall",
																"src": "3119:68:19"
															},
															"nativeSrc": "3116:88:19",
															"nodeType": "YulIf",
															"src": "3116:88:19"
														}
													]
												},
												"name": "validator_revert_t_contract$_LocationProvider_$3204",
												"nativeSrc": "3038:172:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3099:5:19",
														"nodeType": "YulTypedName",
														"src": "3099:5:19",
														"type": ""
													}
												],
												"src": "3038:172:19"
											},
											{
												"body": {
													"nativeSrc": "3304:105:19",
													"nodeType": "YulBlock",
													"src": "3304:105:19",
													"statements": [
														{
															"nativeSrc": "3314:22:19",
															"nodeType": "YulAssignment",
															"src": "3314:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3329:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3329:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3323:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "3323:5:19"
																},
																"nativeSrc": "3323:13:19",
																"nodeType": "YulFunctionCall",
																"src": "3323:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3314:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "3314:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3397:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3397:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_LocationProvider_$3204",
																	"nativeSrc": "3345:51:19",
																	"nodeType": "YulIdentifier",
																	"src": "3345:51:19"
																},
																"nativeSrc": "3345:58:19",
																"nodeType": "YulFunctionCall",
																"src": "3345:58:19"
															},
															"nativeSrc": "3345:58:19",
															"nodeType": "YulExpressionStatement",
															"src": "3345:58:19"
														}
													]
												},
												"name": "abi_decode_t_contract$_LocationProvider_$3204_fromMemory",
												"nativeSrc": "3216:193:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3282:6:19",
														"nodeType": "YulTypedName",
														"src": "3282:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3290:3:19",
														"nodeType": "YulTypedName",
														"src": "3290:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3298:5:19",
														"nodeType": "YulTypedName",
														"src": "3298:5:19",
														"type": ""
													}
												],
												"src": "3216:193:19"
											},
											{
												"body": {
													"nativeSrc": "3598:1206:19",
													"nodeType": "YulBlock",
													"src": "3598:1206:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3645:83:19",
																"nodeType": "YulBlock",
																"src": "3645:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3647:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "3647:77:19"
																			},
																			"nativeSrc": "3647:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3647:79:19"
																		},
																		"nativeSrc": "3647:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3647:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3619:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3619:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3628:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3628:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3615:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3615:3:19"
																		},
																		"nativeSrc": "3615:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3615:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3640:3:19",
																		"nodeType": "YulLiteral",
																		"src": "3640:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3611:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3611:3:19"
																},
																"nativeSrc": "3611:33:19",
																"nodeType": "YulFunctionCall",
																"src": "3611:33:19"
															},
															"nativeSrc": "3608:120:19",
															"nodeType": "YulIf",
															"src": "3608:120:19"
														},
														{
															"nativeSrc": "3738:291:19",
															"nodeType": "YulBlock",
															"src": "3738:291:19",
															"statements": [
																{
																	"nativeSrc": "3753:38:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3753:38:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3777:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "3777:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3788:1:19",
																						"nodeType": "YulLiteral",
																						"src": "3788:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3773:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3773:3:19"
																				},
																				"nativeSrc": "3773:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3773:17:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3767:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "3767:5:19"
																		},
																		"nativeSrc": "3767:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:24:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3757:6:19",
																			"nodeType": "YulTypedName",
																			"src": "3757:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3838:83:19",
																		"nodeType": "YulBlock",
																		"src": "3838:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3840:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "3840:77:19"
																					},
																					"nativeSrc": "3840:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "3840:79:19"
																				},
																				"nativeSrc": "3840:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "3840:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3810:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3810:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3818:18:19",
																				"nodeType": "YulLiteral",
																				"src": "3818:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3807:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "3807:2:19"
																		},
																		"nativeSrc": "3807:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:30:19"
																	},
																	"nativeSrc": "3804:117:19",
																	"nodeType": "YulIf",
																	"src": "3804:117:19"
																},
																{
																	"nativeSrc": "3935:84:19",
																	"nodeType": "YulAssignment",
																	"src": "3935:84:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3991:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "3991:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4002:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4002:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3987:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3987:3:19"
																				},
																				"nativeSrc": "3987:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3987:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4011:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4011:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3945:41:19",
																			"nodeType": "YulIdentifier",
																			"src": "3945:41:19"
																		},
																		"nativeSrc": "3945:74:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3945:74:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3935:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "3935:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4039:292:19",
															"nodeType": "YulBlock",
															"src": "4039:292:19",
															"statements": [
																{
																	"nativeSrc": "4054:39:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4054:39:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4078:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4078:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4089:2:19",
																						"nodeType": "YulLiteral",
																						"src": "4089:2:19",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4074:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4074:3:19"
																				},
																				"nativeSrc": "4074:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4074:18:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4068:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "4068:5:19"
																		},
																		"nativeSrc": "4068:25:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4068:25:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4058:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4058:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4140:83:19",
																		"nodeType": "YulBlock",
																		"src": "4140:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4142:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "4142:77:19"
																					},
																					"nativeSrc": "4142:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4142:79:19"
																				},
																				"nativeSrc": "4142:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "4142:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4112:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4112:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4120:18:19",
																				"nodeType": "YulLiteral",
																				"src": "4120:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4109:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "4109:2:19"
																		},
																		"nativeSrc": "4109:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4109:30:19"
																	},
																	"nativeSrc": "4106:117:19",
																	"nodeType": "YulIf",
																	"src": "4106:117:19"
																},
																{
																	"nativeSrc": "4237:84:19",
																	"nodeType": "YulAssignment",
																	"src": "4237:84:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4293:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4293:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4304:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4304:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4289:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4289:3:19"
																				},
																				"nativeSrc": "4289:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4289:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4313:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4313:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4247:41:19",
																			"nodeType": "YulIdentifier",
																			"src": "4247:41:19"
																		},
																		"nativeSrc": "4247:74:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4247:74:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4237:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4237:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4341:292:19",
															"nodeType": "YulBlock",
															"src": "4341:292:19",
															"statements": [
																{
																	"nativeSrc": "4356:39:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4356:39:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4380:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4380:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4391:2:19",
																						"nodeType": "YulLiteral",
																						"src": "4391:2:19",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4376:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4376:3:19"
																				},
																				"nativeSrc": "4376:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4376:18:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4370:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "4370:5:19"
																		},
																		"nativeSrc": "4370:25:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4370:25:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4360:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4360:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4442:83:19",
																		"nodeType": "YulBlock",
																		"src": "4442:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4444:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "4444:77:19"
																					},
																					"nativeSrc": "4444:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4444:79:19"
																				},
																				"nativeSrc": "4444:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "4444:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4414:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4414:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4422:18:19",
																				"nodeType": "YulLiteral",
																				"src": "4422:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4411:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "4411:2:19"
																		},
																		"nativeSrc": "4411:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4411:30:19"
																	},
																	"nativeSrc": "4408:117:19",
																	"nodeType": "YulIf",
																	"src": "4408:117:19"
																},
																{
																	"nativeSrc": "4539:84:19",
																	"nodeType": "YulAssignment",
																	"src": "4539:84:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4595:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4595:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4606:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4606:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4591:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4591:3:19"
																				},
																				"nativeSrc": "4591:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4591:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4615:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4615:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4549:41:19",
																			"nodeType": "YulIdentifier",
																			"src": "4549:41:19"
																		},
																		"nativeSrc": "4549:74:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4549:74:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4539:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4539:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4643:154:19",
															"nodeType": "YulBlock",
															"src": "4643:154:19",
															"statements": [
																{
																	"nativeSrc": "4658:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4658:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4672:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4672:2:19",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4662:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4662:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4688:99:19",
																	"nodeType": "YulAssignment",
																	"src": "4688:99:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4759:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4759:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4770:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4770:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4755:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4755:3:19"
																				},
																				"nativeSrc": "4755:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4755:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4779:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4779:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_LocationProvider_$3204_fromMemory",
																			"nativeSrc": "4698:56:19",
																			"nodeType": "YulIdentifier",
																			"src": "4698:56:19"
																		},
																		"nativeSrc": "4698:89:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4698:89:19"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4688:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4688:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_contract$_LocationProvider_$3204_fromMemory",
												"nativeSrc": "3415:1389:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3544:9:19",
														"nodeType": "YulTypedName",
														"src": "3544:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3555:7:19",
														"nodeType": "YulTypedName",
														"src": "3555:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3567:6:19",
														"nodeType": "YulTypedName",
														"src": "3567:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3575:6:19",
														"nodeType": "YulTypedName",
														"src": "3575:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3583:6:19",
														"nodeType": "YulTypedName",
														"src": "3583:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3591:6:19",
														"nodeType": "YulTypedName",
														"src": "3591:6:19",
														"type": ""
													}
												],
												"src": "3415:1389:19"
											},
											{
												"body": {
													"nativeSrc": "4869:40:19",
													"nodeType": "YulBlock",
													"src": "4869:40:19",
													"statements": [
														{
															"nativeSrc": "4880:22:19",
															"nodeType": "YulAssignment",
															"src": "4880:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4896:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4896:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4890:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "4890:5:19"
																},
																"nativeSrc": "4890:12:19",
																"nodeType": "YulFunctionCall",
																"src": "4890:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4880:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4880:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4810:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4852:5:19",
														"nodeType": "YulTypedName",
														"src": "4852:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4862:6:19",
														"nodeType": "YulTypedName",
														"src": "4862:6:19",
														"type": ""
													}
												],
												"src": "4810:99:19"
											},
											{
												"body": {
													"nativeSrc": "4943:152:19",
													"nodeType": "YulBlock",
													"src": "4943:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4960:1:19",
																		"nodeType": "YulLiteral",
																		"src": "4960:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4963:77:19",
																		"nodeType": "YulLiteral",
																		"src": "4963:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4953:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4953:6:19"
																},
																"nativeSrc": "4953:88:19",
																"nodeType": "YulFunctionCall",
																"src": "4953:88:19"
															},
															"nativeSrc": "4953:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "4953:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5057:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5057:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5060:4:19",
																		"nodeType": "YulLiteral",
																		"src": "5060:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5050:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5050:6:19"
																},
																"nativeSrc": "5050:15:19",
																"nodeType": "YulFunctionCall",
																"src": "5050:15:19"
															},
															"nativeSrc": "5050:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "5050:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5081:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5081:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5084:4:19",
																		"nodeType": "YulLiteral",
																		"src": "5084:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5074:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5074:6:19"
																},
																"nativeSrc": "5074:15:19",
																"nodeType": "YulFunctionCall",
																"src": "5074:15:19"
															},
															"nativeSrc": "5074:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "5074:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4915:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "4915:180:19"
											},
											{
												"body": {
													"nativeSrc": "5152:269:19",
													"nodeType": "YulBlock",
													"src": "5152:269:19",
													"statements": [
														{
															"nativeSrc": "5162:22:19",
															"nodeType": "YulAssignment",
															"src": "5162:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5176:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "5176:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5182:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5182:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5172:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5172:3:19"
																},
																"nativeSrc": "5172:12:19",
																"nodeType": "YulFunctionCall",
																"src": "5172:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5162:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5162:6:19"
																}
															]
														},
														{
															"nativeSrc": "5193:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5193:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5223:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "5223:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5229:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5229:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5219:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5219:3:19"
																},
																"nativeSrc": "5219:12:19",
																"nodeType": "YulFunctionCall",
																"src": "5219:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5197:18:19",
																	"nodeType": "YulTypedName",
																	"src": "5197:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5270:51:19",
																"nodeType": "YulBlock",
																"src": "5270:51:19",
																"statements": [
																	{
																		"nativeSrc": "5284:27:19",
																		"nodeType": "YulAssignment",
																		"src": "5284:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5298:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "5298:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5306:4:19",
																					"nodeType": "YulLiteral",
																					"src": "5306:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5294:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "5294:3:19"
																			},
																			"nativeSrc": "5294:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5294:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5284:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5284:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5250:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "5250:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5243:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5243:6:19"
																},
																"nativeSrc": "5243:26:19",
																"nodeType": "YulFunctionCall",
																"src": "5243:26:19"
															},
															"nativeSrc": "5240:81:19",
															"nodeType": "YulIf",
															"src": "5240:81:19"
														},
														{
															"body": {
																"nativeSrc": "5373:42:19",
																"nodeType": "YulBlock",
																"src": "5373:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5387:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "5387:16:19"
																			},
																			"nativeSrc": "5387:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5387:18:19"
																		},
																		"nativeSrc": "5387:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5387:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5337:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "5337:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5360:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5360:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5368:2:19",
																				"nodeType": "YulLiteral",
																				"src": "5368:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5357:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "5357:2:19"
																		},
																		"nativeSrc": "5357:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5334:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5334:2:19"
																},
																"nativeSrc": "5334:38:19",
																"nodeType": "YulFunctionCall",
																"src": "5334:38:19"
															},
															"nativeSrc": "5331:84:19",
															"nodeType": "YulIf",
															"src": "5331:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5101:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5136:4:19",
														"nodeType": "YulTypedName",
														"src": "5136:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5145:6:19",
														"nodeType": "YulTypedName",
														"src": "5145:6:19",
														"type": ""
													}
												],
												"src": "5101:320:19"
											},
											{
												"body": {
													"nativeSrc": "5481:87:19",
													"nodeType": "YulBlock",
													"src": "5481:87:19",
													"statements": [
														{
															"nativeSrc": "5491:11:19",
															"nodeType": "YulAssignment",
															"src": "5491:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "5499:3:19",
																"nodeType": "YulIdentifier",
																"src": "5499:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5491:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "5491:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5519:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5519:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5522:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "5522:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5512:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5512:6:19"
																},
																"nativeSrc": "5512:14:19",
																"nodeType": "YulFunctionCall",
																"src": "5512:14:19"
															},
															"nativeSrc": "5512:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "5512:14:19"
														},
														{
															"nativeSrc": "5535:26:19",
															"nodeType": "YulAssignment",
															"src": "5535:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5553:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5553:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5556:4:19",
																		"nodeType": "YulLiteral",
																		"src": "5556:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5543:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "5543:9:19"
																},
																"nativeSrc": "5543:18:19",
																"nodeType": "YulFunctionCall",
																"src": "5543:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5535:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "5535:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5427:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5468:3:19",
														"nodeType": "YulTypedName",
														"src": "5468:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5476:4:19",
														"nodeType": "YulTypedName",
														"src": "5476:4:19",
														"type": ""
													}
												],
												"src": "5427:141:19"
											},
											{
												"body": {
													"nativeSrc": "5618:49:19",
													"nodeType": "YulBlock",
													"src": "5618:49:19",
													"statements": [
														{
															"nativeSrc": "5628:33:19",
															"nodeType": "YulAssignment",
															"src": "5628:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5646:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5653:2:19",
																				"nodeType": "YulLiteral",
																				"src": "5653:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5642:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:19"
																		},
																		"nativeSrc": "5642:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:14:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5658:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5658:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5638:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5638:3:19"
																},
																"nativeSrc": "5638:23:19",
																"nodeType": "YulFunctionCall",
																"src": "5638:23:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5628:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5628:6:19"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5574:93:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5601:5:19",
														"nodeType": "YulTypedName",
														"src": "5601:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5611:6:19",
														"nodeType": "YulTypedName",
														"src": "5611:6:19",
														"type": ""
													}
												],
												"src": "5574:93:19"
											},
											{
												"body": {
													"nativeSrc": "5726:54:19",
													"nodeType": "YulBlock",
													"src": "5726:54:19",
													"statements": [
														{
															"nativeSrc": "5736:37:19",
															"nodeType": "YulAssignment",
															"src": "5736:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5761:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "5761:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5767:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "5767:5:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5757:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5757:3:19"
																},
																"nativeSrc": "5757:16:19",
																"nodeType": "YulFunctionCall",
																"src": "5757:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5736:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "5736:8:19"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5673:107:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5701:4:19",
														"nodeType": "YulTypedName",
														"src": "5701:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5707:5:19",
														"nodeType": "YulTypedName",
														"src": "5707:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5717:8:19",
														"nodeType": "YulTypedName",
														"src": "5717:8:19",
														"type": ""
													}
												],
												"src": "5673:107:19"
											},
											{
												"body": {
													"nativeSrc": "5862:317:19",
													"nodeType": "YulBlock",
													"src": "5862:317:19",
													"statements": [
														{
															"nativeSrc": "5872:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5872:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5893:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "5893:10:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5905:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5905:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5889:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5889:3:19"
																},
																"nativeSrc": "5889:18:19",
																"nodeType": "YulFunctionCall",
																"src": "5889:18:19"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5876:9:19",
																	"nodeType": "YulTypedName",
																	"src": "5876:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5916:109:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5916:109:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5947:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "5947:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5958:66:19",
																		"nodeType": "YulLiteral",
																		"src": "5958:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5928:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "5928:18:19"
																},
																"nativeSrc": "5928:97:19",
																"nodeType": "YulFunctionCall",
																"src": "5928:97:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5920:4:19",
																	"nodeType": "YulTypedName",
																	"src": "5920:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6034:51:19",
															"nodeType": "YulAssignment",
															"src": "6034:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6065:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6065:9:19"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "6076:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "6076:8:19"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6046:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "6046:18:19"
																},
																"nativeSrc": "6046:39:19",
																"nodeType": "YulFunctionCall",
																"src": "6046:39:19"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "6034:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "6034:8:19"
																}
															]
														},
														{
															"nativeSrc": "6094:30:19",
															"nodeType": "YulAssignment",
															"src": "6094:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6107:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6107:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "6118:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "6118:4:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6114:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6114:3:19"
																		},
																		"nativeSrc": "6114:9:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6114:9:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6103:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6103:3:19"
																},
																"nativeSrc": "6103:21:19",
																"nodeType": "YulFunctionCall",
																"src": "6103:21:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6094:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "6094:5:19"
																}
															]
														},
														{
															"nativeSrc": "6133:40:19",
															"nodeType": "YulAssignment",
															"src": "6133:40:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6146:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6146:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "6157:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "6157:8:19"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "6167:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "6167:4:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6153:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6153:3:19"
																		},
																		"nativeSrc": "6153:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6153:19:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6143:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "6143:2:19"
																},
																"nativeSrc": "6143:30:19",
																"nodeType": "YulFunctionCall",
																"src": "6143:30:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6133:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6133:6:19"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5786:393:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5823:5:19",
														"nodeType": "YulTypedName",
														"src": "5823:5:19",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5830:10:19",
														"nodeType": "YulTypedName",
														"src": "5830:10:19",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5842:8:19",
														"nodeType": "YulTypedName",
														"src": "5842:8:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5855:6:19",
														"nodeType": "YulTypedName",
														"src": "5855:6:19",
														"type": ""
													}
												],
												"src": "5786:393:19"
											},
											{
												"body": {
													"nativeSrc": "6230:32:19",
													"nodeType": "YulBlock",
													"src": "6230:32:19",
													"statements": [
														{
															"nativeSrc": "6240:16:19",
															"nodeType": "YulAssignment",
															"src": "6240:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "6251:5:19",
																"nodeType": "YulIdentifier",
																"src": "6251:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6240:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "6240:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "6185:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6212:5:19",
														"nodeType": "YulTypedName",
														"src": "6212:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6222:7:19",
														"nodeType": "YulTypedName",
														"src": "6222:7:19",
														"type": ""
													}
												],
												"src": "6185:77:19"
											},
											{
												"body": {
													"nativeSrc": "6300:28:19",
													"nodeType": "YulBlock",
													"src": "6300:28:19",
													"statements": [
														{
															"nativeSrc": "6310:12:19",
															"nodeType": "YulAssignment",
															"src": "6310:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "6317:5:19",
																"nodeType": "YulIdentifier",
																"src": "6317:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6310:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6310:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6268:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6286:5:19",
														"nodeType": "YulTypedName",
														"src": "6286:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6296:3:19",
														"nodeType": "YulTypedName",
														"src": "6296:3:19",
														"type": ""
													}
												],
												"src": "6268:60:19"
											},
											{
												"body": {
													"nativeSrc": "6394:82:19",
													"nodeType": "YulBlock",
													"src": "6394:82:19",
													"statements": [
														{
															"nativeSrc": "6404:66:19",
															"nodeType": "YulAssignment",
															"src": "6404:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6462:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "6462:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6444:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "6444:17:19"
																				},
																				"nativeSrc": "6444:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6444:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6435:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "6435:8:19"
																		},
																		"nativeSrc": "6435:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6435:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6417:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "6417:17:19"
																},
																"nativeSrc": "6417:53:19",
																"nodeType": "YulFunctionCall",
																"src": "6417:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6404:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "6404:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6334:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6374:5:19",
														"nodeType": "YulTypedName",
														"src": "6374:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6384:9:19",
														"nodeType": "YulTypedName",
														"src": "6384:9:19",
														"type": ""
													}
												],
												"src": "6334:142:19"
											},
											{
												"body": {
													"nativeSrc": "6529:28:19",
													"nodeType": "YulBlock",
													"src": "6529:28:19",
													"statements": [
														{
															"nativeSrc": "6539:12:19",
															"nodeType": "YulAssignment",
															"src": "6539:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "6546:5:19",
																"nodeType": "YulIdentifier",
																"src": "6546:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6539:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6539:3:19"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6482:75:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6515:5:19",
														"nodeType": "YulTypedName",
														"src": "6515:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6525:3:19",
														"nodeType": "YulTypedName",
														"src": "6525:3:19",
														"type": ""
													}
												],
												"src": "6482:75:19"
											},
											{
												"body": {
													"nativeSrc": "6639:193:19",
													"nodeType": "YulBlock",
													"src": "6639:193:19",
													"statements": [
														{
															"nativeSrc": "6649:63:19",
															"nodeType": "YulVariableDeclaration",
															"src": "6649:63:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6704:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "6704:7:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6673:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "6673:30:19"
																},
																"nativeSrc": "6673:39:19",
																"nodeType": "YulFunctionCall",
																"src": "6673:39:19"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6653:16:19",
																	"nodeType": "YulTypedName",
																	"src": "6653:16:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6728:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "6728:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6768:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "6768:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6762:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "6762:5:19"
																				},
																				"nativeSrc": "6762:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6762:11:19"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6775:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6775:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6807:16:19",
																						"nodeType": "YulIdentifier",
																						"src": "6807:16:19"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6783:23:19",
																					"nodeType": "YulIdentifier",
																					"src": "6783:23:19"
																				},
																				"nativeSrc": "6783:41:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6783:41:19"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6734:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "6734:27:19"
																		},
																		"nativeSrc": "6734:91:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6734:91:19"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6721:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6721:6:19"
																},
																"nativeSrc": "6721:105:19",
																"nodeType": "YulFunctionCall",
																"src": "6721:105:19"
															},
															"nativeSrc": "6721:105:19",
															"nodeType": "YulExpressionStatement",
															"src": "6721:105:19"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6563:269:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6616:4:19",
														"nodeType": "YulTypedName",
														"src": "6616:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6622:6:19",
														"nodeType": "YulTypedName",
														"src": "6622:6:19",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6630:7:19",
														"nodeType": "YulTypedName",
														"src": "6630:7:19",
														"type": ""
													}
												],
												"src": "6563:269:19"
											},
											{
												"body": {
													"nativeSrc": "6887:24:19",
													"nodeType": "YulBlock",
													"src": "6887:24:19",
													"statements": [
														{
															"nativeSrc": "6897:8:19",
															"nodeType": "YulAssignment",
															"src": "6897:8:19",
															"value": {
																"kind": "number",
																"nativeSrc": "6904:1:19",
																"nodeType": "YulLiteral",
																"src": "6904:1:19",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6897:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6897:3:19"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6838:73:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6883:3:19",
														"nodeType": "YulTypedName",
														"src": "6883:3:19",
														"type": ""
													}
												],
												"src": "6838:73:19"
											},
											{
												"body": {
													"nativeSrc": "6970:136:19",
													"nodeType": "YulBlock",
													"src": "6970:136:19",
													"statements": [
														{
															"nativeSrc": "6980:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "6980:46:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6994:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "6994:30:19"
																},
																"nativeSrc": "6994:32:19",
																"nodeType": "YulFunctionCall",
																"src": "6994:32:19"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6984:6:19",
																	"nodeType": "YulTypedName",
																	"src": "6984:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7079:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "7079:4:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "7085:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7085:6:19"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "7093:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7093:6:19"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "7035:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "7035:43:19"
																},
																"nativeSrc": "7035:65:19",
																"nodeType": "YulFunctionCall",
																"src": "7035:65:19"
															},
															"nativeSrc": "7035:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "7035:65:19"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6917:189:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6956:4:19",
														"nodeType": "YulTypedName",
														"src": "6956:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6962:6:19",
														"nodeType": "YulTypedName",
														"src": "6962:6:19",
														"type": ""
													}
												],
												"src": "6917:189:19"
											},
											{
												"body": {
													"nativeSrc": "7162:136:19",
													"nodeType": "YulBlock",
													"src": "7162:136:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7229:63:19",
																"nodeType": "YulBlock",
																"src": "7229:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7273:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "7273:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7280:1:19",
																					"nodeType": "YulLiteral",
																					"src": "7280:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "7243:29:19",
																				"nodeType": "YulIdentifier",
																				"src": "7243:29:19"
																			},
																			"nativeSrc": "7243:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7243:39:19"
																		},
																		"nativeSrc": "7243:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7243:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "7182:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "7182:5:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7189:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7189:3:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7179:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7179:2:19"
																},
																"nativeSrc": "7179:14:19",
																"nodeType": "YulFunctionCall",
																"src": "7179:14:19"
															},
															"nativeSrc": "7172:120:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7194:26:19",
																"nodeType": "YulBlock",
																"src": "7194:26:19",
																"statements": [
																	{
																		"nativeSrc": "7196:22:19",
																		"nodeType": "YulAssignment",
																		"src": "7196:22:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7209:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "7209:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7216:1:19",
																					"nodeType": "YulLiteral",
																					"src": "7216:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7205:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "7205:3:19"
																			},
																			"nativeSrc": "7205:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7205:13:19"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "7196:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "7196:5:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7176:2:19",
																"nodeType": "YulBlock",
																"src": "7176:2:19",
																"statements": []
															},
															"src": "7172:120:19"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "7112:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "7150:5:19",
														"nodeType": "YulTypedName",
														"src": "7150:5:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7157:3:19",
														"nodeType": "YulTypedName",
														"src": "7157:3:19",
														"type": ""
													}
												],
												"src": "7112:186:19"
											},
											{
												"body": {
													"nativeSrc": "7383:464:19",
													"nodeType": "YulBlock",
													"src": "7383:464:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7409:431:19",
																"nodeType": "YulBlock",
																"src": "7409:431:19",
																"statements": [
																	{
																		"nativeSrc": "7423:54:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7423:54:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7471:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "7471:5:19"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7439:31:19",
																				"nodeType": "YulIdentifier",
																				"src": "7439:31:19"
																			},
																			"nativeSrc": "7439:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7439:38:19"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7427:8:19",
																				"nodeType": "YulTypedName",
																				"src": "7427:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7490:63:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7490:63:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7513:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "7513:8:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7541:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "7541:10:19"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7523:17:19",
																						"nodeType": "YulIdentifier",
																						"src": "7523:17:19"
																					},
																					"nativeSrc": "7523:29:19",
																					"nodeType": "YulFunctionCall",
																					"src": "7523:29:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7509:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "7509:3:19"
																			},
																			"nativeSrc": "7509:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7509:44:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7494:11:19",
																				"nodeType": "YulTypedName",
																				"src": "7494:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7710:27:19",
																			"nodeType": "YulBlock",
																			"src": "7710:27:19",
																			"statements": [
																				{
																					"nativeSrc": "7712:23:19",
																					"nodeType": "YulAssignment",
																					"src": "7712:23:19",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7727:8:19",
																						"nodeType": "YulIdentifier",
																						"src": "7727:8:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7712:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "7712:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7694:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "7694:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7706:2:19",
																					"nodeType": "YulLiteral",
																					"src": "7706:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7691:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "7691:2:19"
																			},
																			"nativeSrc": "7691:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7691:18:19"
																		},
																		"nativeSrc": "7688:49:19",
																		"nodeType": "YulIf",
																		"src": "7688:49:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7779:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "7779:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7796:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "7796:8:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7824:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "7824:3:19"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7806:17:19",
																								"nodeType": "YulIdentifier",
																								"src": "7806:17:19"
																							},
																							"nativeSrc": "7806:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "7806:22:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7792:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "7792:3:19"
																					},
																					"nativeSrc": "7792:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "7792:37:19"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7750:28:19",
																				"nodeType": "YulIdentifier",
																				"src": "7750:28:19"
																			},
																			"nativeSrc": "7750:80:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7750:80:19"
																		},
																		"nativeSrc": "7750:80:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7750:80:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7400:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7400:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7405:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7405:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7397:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7397:2:19"
																},
																"nativeSrc": "7397:11:19",
																"nodeType": "YulFunctionCall",
																"src": "7397:11:19"
															},
															"nativeSrc": "7394:446:19",
															"nodeType": "YulIf",
															"src": "7394:446:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7304:543:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7359:5:19",
														"nodeType": "YulTypedName",
														"src": "7359:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7366:3:19",
														"nodeType": "YulTypedName",
														"src": "7366:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7371:10:19",
														"nodeType": "YulTypedName",
														"src": "7371:10:19",
														"type": ""
													}
												],
												"src": "7304:543:19"
											},
											{
												"body": {
													"nativeSrc": "7916:54:19",
													"nodeType": "YulBlock",
													"src": "7916:54:19",
													"statements": [
														{
															"nativeSrc": "7926:37:19",
															"nodeType": "YulAssignment",
															"src": "7926:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7951:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "7951:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7957:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "7957:5:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7947:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7947:3:19"
																},
																"nativeSrc": "7947:16:19",
																"nodeType": "YulFunctionCall",
																"src": "7947:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7926:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "7926:8:19"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7853:117:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7891:4:19",
														"nodeType": "YulTypedName",
														"src": "7891:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7897:5:19",
														"nodeType": "YulTypedName",
														"src": "7897:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7907:8:19",
														"nodeType": "YulTypedName",
														"src": "7907:8:19",
														"type": ""
													}
												],
												"src": "7853:117:19"
											},
											{
												"body": {
													"nativeSrc": "8027:118:19",
													"nodeType": "YulBlock",
													"src": "8027:118:19",
													"statements": [
														{
															"nativeSrc": "8037:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8037:68:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8086:1:19",
																						"nodeType": "YulLiteral",
																						"src": "8086:1:19",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "8089:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "8089:5:19"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8082:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8082:3:19"
																				},
																				"nativeSrc": "8082:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8082:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8101:1:19",
																						"nodeType": "YulLiteral",
																						"src": "8101:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8097:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8097:3:19"
																				},
																				"nativeSrc": "8097:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8097:6:19"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "8053:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "8053:28:19"
																		},
																		"nativeSrc": "8053:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8053:51:19"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "8049:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8049:3:19"
																},
																"nativeSrc": "8049:56:19",
																"nodeType": "YulFunctionCall",
																"src": "8049:56:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "8041:4:19",
																	"nodeType": "YulTypedName",
																	"src": "8041:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8114:25:19",
															"nodeType": "YulAssignment",
															"src": "8114:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8128:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "8128:4:19"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "8134:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "8134:4:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8124:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8124:3:19"
																},
																"nativeSrc": "8124:15:19",
																"nodeType": "YulFunctionCall",
																"src": "8124:15:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8114:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8114:6:19"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7976:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8004:4:19",
														"nodeType": "YulTypedName",
														"src": "8004:4:19",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "8010:5:19",
														"nodeType": "YulTypedName",
														"src": "8010:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "8020:6:19",
														"nodeType": "YulTypedName",
														"src": "8020:6:19",
														"type": ""
													}
												],
												"src": "7976:169:19"
											},
											{
												"body": {
													"nativeSrc": "8231:214:19",
													"nodeType": "YulBlock",
													"src": "8231:214:19",
													"statements": [
														{
															"nativeSrc": "8364:37:19",
															"nodeType": "YulAssignment",
															"src": "8364:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8391:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "8391:4:19"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8397:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8397:3:19"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8372:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "8372:18:19"
																},
																"nativeSrc": "8372:29:19",
																"nodeType": "YulFunctionCall",
																"src": "8372:29:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8364:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8364:4:19"
																}
															]
														},
														{
															"nativeSrc": "8410:29:19",
															"nodeType": "YulAssignment",
															"src": "8410:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8421:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "8421:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8431:1:19",
																				"nodeType": "YulLiteral",
																				"src": "8431:1:19",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8434:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8434:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8427:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8427:3:19"
																		},
																		"nativeSrc": "8427:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8427:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8418:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "8418:2:19"
																},
																"nativeSrc": "8418:21:19",
																"nodeType": "YulFunctionCall",
																"src": "8418:21:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8410:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8410:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "8150:295:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8212:4:19",
														"nodeType": "YulTypedName",
														"src": "8212:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8218:3:19",
														"nodeType": "YulTypedName",
														"src": "8218:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "8226:4:19",
														"nodeType": "YulTypedName",
														"src": "8226:4:19",
														"type": ""
													}
												],
												"src": "8150:295:19"
											},
											{
												"body": {
													"nativeSrc": "8542:1303:19",
													"nodeType": "YulBlock",
													"src": "8542:1303:19",
													"statements": [
														{
															"nativeSrc": "8553:51:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8553:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8600:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8600:3:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8567:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "8567:32:19"
																},
																"nativeSrc": "8567:37:19",
																"nodeType": "YulFunctionCall",
																"src": "8567:37:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8557:6:19",
																	"nodeType": "YulTypedName",
																	"src": "8557:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8689:22:19",
																"nodeType": "YulBlock",
																"src": "8689:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8691:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "8691:16:19"
																			},
																			"nativeSrc": "8691:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8691:18:19"
																		},
																		"nativeSrc": "8691:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8691:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8661:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8661:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8669:18:19",
																		"nodeType": "YulLiteral",
																		"src": "8669:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8658:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "8658:2:19"
																},
																"nativeSrc": "8658:30:19",
																"nodeType": "YulFunctionCall",
																"src": "8658:30:19"
															},
															"nativeSrc": "8655:56:19",
															"nodeType": "YulIf",
															"src": "8655:56:19"
														},
														{
															"nativeSrc": "8721:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8721:52:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8767:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "8767:4:19"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8761:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "8761:5:19"
																		},
																		"nativeSrc": "8761:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8761:11:19"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8735:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "8735:25:19"
																},
																"nativeSrc": "8735:38:19",
																"nodeType": "YulFunctionCall",
																"src": "8735:38:19"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8725:6:19",
																	"nodeType": "YulTypedName",
																	"src": "8725:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8866:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "8866:4:19"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8872:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8872:6:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8880:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8880:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8820:45:19",
																	"nodeType": "YulIdentifier",
																	"src": "8820:45:19"
																},
																"nativeSrc": "8820:67:19",
																"nodeType": "YulFunctionCall",
																"src": "8820:67:19"
															},
															"nativeSrc": "8820:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "8820:67:19"
														},
														{
															"nativeSrc": "8897:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8897:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "8914:1:19",
																"nodeType": "YulLiteral",
																"src": "8914:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8901:9:19",
																	"nodeType": "YulTypedName",
																	"src": "8901:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8925:17:19",
															"nodeType": "YulAssignment",
															"src": "8925:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "8938:4:19",
																"nodeType": "YulLiteral",
																"src": "8938:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8925:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "8925:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8989:611:19",
																		"nodeType": "YulBlock",
																		"src": "8989:611:19",
																		"statements": [
																			{
																				"nativeSrc": "9003:37:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9003:37:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "9022:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "9022:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "9034:4:19",
																									"nodeType": "YulLiteral",
																									"src": "9034:4:19",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "9030:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "9030:3:19"
																							},
																							"nativeSrc": "9030:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "9030:9:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "9018:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "9018:3:19"
																					},
																					"nativeSrc": "9018:22:19",
																					"nodeType": "YulFunctionCall",
																					"src": "9018:22:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "9007:7:19",
																						"nodeType": "YulTypedName",
																						"src": "9007:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9054:51:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9054:51:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9100:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "9100:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "9068:31:19",
																						"nodeType": "YulIdentifier",
																						"src": "9068:31:19"
																					},
																					"nativeSrc": "9068:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "9068:37:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "9058:6:19",
																						"nodeType": "YulTypedName",
																						"src": "9058:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9118:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9118:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9127:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9127:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "9122:1:19",
																						"nodeType": "YulTypedName",
																						"src": "9122:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9186:163:19",
																					"nodeType": "YulBlock",
																					"src": "9186:163:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9211:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "9211:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9229:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "9229:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9234:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "9234:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9225:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "9225:3:19"
																												},
																												"nativeSrc": "9225:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "9225:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9219:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "9219:5:19"
																										},
																										"nativeSrc": "9219:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "9219:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9204:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "9204:6:19"
																								},
																								"nativeSrc": "9204:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "9204:42:19"
																							},
																							"nativeSrc": "9204:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "9204:42:19"
																						},
																						{
																							"nativeSrc": "9263:24:19",
																							"nodeType": "YulAssignment",
																							"src": "9263:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9277:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "9277:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9285:1:19",
																										"nodeType": "YulLiteral",
																										"src": "9285:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9273:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "9273:3:19"
																								},
																								"nativeSrc": "9273:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "9273:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9263:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "9263:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9304:31:19",
																							"nodeType": "YulAssignment",
																							"src": "9304:31:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9321:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "9321:9:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9332:2:19",
																										"nodeType": "YulLiteral",
																										"src": "9332:2:19",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9317:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "9317:3:19"
																								},
																								"nativeSrc": "9317:18:19",
																								"nodeType": "YulFunctionCall",
																								"src": "9317:18:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9304:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "9304:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "9152:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "9152:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9155:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "9155:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9149:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "9149:2:19"
																					},
																					"nativeSrc": "9149:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "9149:14:19"
																				},
																				"nativeSrc": "9141:208:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9164:21:19",
																					"nodeType": "YulBlock",
																					"src": "9164:21:19",
																					"statements": [
																						{
																							"nativeSrc": "9166:17:19",
																							"nodeType": "YulAssignment",
																							"src": "9166:17:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9175:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "9175:1:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9178:4:19",
																										"nodeType": "YulLiteral",
																										"src": "9178:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9171:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "9171:3:19"
																								},
																								"nativeSrc": "9171:12:19",
																								"nodeType": "YulFunctionCall",
																								"src": "9171:12:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "9166:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "9166:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9145:3:19",
																					"nodeType": "YulBlock",
																					"src": "9145:3:19",
																					"statements": []
																				},
																				"src": "9141:208:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "9385:156:19",
																					"nodeType": "YulBlock",
																					"src": "9385:156:19",
																					"statements": [
																						{
																							"nativeSrc": "9403:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9403:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9430:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "9430:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9435:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "9435:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9426:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "9426:3:19"
																										},
																										"nativeSrc": "9426:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "9426:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9420:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "9420:5:19"
																								},
																								"nativeSrc": "9420:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "9420:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9407:9:19",
																									"nodeType": "YulTypedName",
																									"src": "9407:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9470:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "9470:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9497:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "9497:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9512:6:19",
																														"nodeType": "YulIdentifier",
																														"src": "9512:6:19"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9520:4:19",
																														"nodeType": "YulLiteral",
																														"src": "9520:4:19",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9508:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "9508:3:19"
																												},
																												"nativeSrc": "9508:17:19",
																												"nodeType": "YulFunctionCall",
																												"src": "9508:17:19"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9478:18:19",
																											"nodeType": "YulIdentifier",
																											"src": "9478:18:19"
																										},
																										"nativeSrc": "9478:48:19",
																										"nodeType": "YulFunctionCall",
																										"src": "9478:48:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9463:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "9463:6:19"
																								},
																								"nativeSrc": "9463:64:19",
																								"nodeType": "YulFunctionCall",
																								"src": "9463:64:19"
																							},
																							"nativeSrc": "9463:64:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "9463:64:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9368:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "9368:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9377:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "9377:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9365:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "9365:2:19"
																					},
																					"nativeSrc": "9365:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "9365:19:19"
																				},
																				"nativeSrc": "9362:179:19",
																				"nodeType": "YulIf",
																				"src": "9362:179:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9561:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "9561:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9575:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "9575:6:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9583:1:19",
																											"nodeType": "YulLiteral",
																											"src": "9583:1:19",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9571:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "9571:3:19"
																									},
																									"nativeSrc": "9571:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "9571:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9587:1:19",
																									"nodeType": "YulLiteral",
																									"src": "9587:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9567:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "9567:3:19"
																							},
																							"nativeSrc": "9567:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "9567:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9554:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9554:6:19"
																					},
																					"nativeSrc": "9554:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "9554:36:19"
																				},
																				"nativeSrc": "9554:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "9554:36:19"
																			}
																		]
																	},
																	"nativeSrc": "8982:618:19",
																	"nodeType": "YulCase",
																	"src": "8982:618:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8987:1:19",
																		"nodeType": "YulLiteral",
																		"src": "8987:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9617:222:19",
																		"nodeType": "YulBlock",
																		"src": "9617:222:19",
																		"statements": [
																			{
																				"nativeSrc": "9631:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9631:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9644:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9644:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9635:5:19",
																						"nodeType": "YulTypedName",
																						"src": "9635:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9668:67:19",
																					"nodeType": "YulBlock",
																					"src": "9668:67:19",
																					"statements": [
																						{
																							"nativeSrc": "9686:35:19",
																							"nodeType": "YulAssignment",
																							"src": "9686:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9705:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "9705:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9710:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "9710:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9701:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "9701:3:19"
																										},
																										"nativeSrc": "9701:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "9701:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9695:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "9695:5:19"
																								},
																								"nativeSrc": "9695:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "9695:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9686:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "9686:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9661:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "9661:6:19"
																				},
																				"nativeSrc": "9658:77:19",
																				"nodeType": "YulIf",
																				"src": "9658:77:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9755:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "9755:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9814:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "9814:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9821:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "9821:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9761:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "9761:52:19"
																							},
																							"nativeSrc": "9761:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "9761:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9748:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9748:6:19"
																					},
																					"nativeSrc": "9748:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "9748:81:19"
																				},
																				"nativeSrc": "9748:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "9748:81:19"
																			}
																		]
																	},
																	"nativeSrc": "9609:230:19",
																	"nodeType": "YulCase",
																	"src": "9609:230:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8962:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8962:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8970:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8970:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8959:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "8959:2:19"
																},
																"nativeSrc": "8959:14:19",
																"nodeType": "YulFunctionCall",
																"src": "8959:14:19"
															},
															"nativeSrc": "8952:887:19",
															"nodeType": "YulSwitch",
															"src": "8952:887:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8450:1395:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8531:4:19",
														"nodeType": "YulTypedName",
														"src": "8531:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8537:3:19",
														"nodeType": "YulTypedName",
														"src": "8537:3:19",
														"type": ""
													}
												],
												"src": "8450:1395:19"
											},
											{
												"body": {
													"nativeSrc": "9916:53:19",
													"nodeType": "YulBlock",
													"src": "9916:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9933:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "9933:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9956:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "9956:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9938:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "9938:17:19"
																		},
																		"nativeSrc": "9938:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9938:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9926:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9926:6:19"
																},
																"nativeSrc": "9926:37:19",
																"nodeType": "YulFunctionCall",
																"src": "9926:37:19"
															},
															"nativeSrc": "9926:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "9926:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9851:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9904:5:19",
														"nodeType": "YulTypedName",
														"src": "9904:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9911:3:19",
														"nodeType": "YulTypedName",
														"src": "9911:3:19",
														"type": ""
													}
												],
												"src": "9851:118:19"
											},
											{
												"body": {
													"nativeSrc": "10073:124:19",
													"nodeType": "YulBlock",
													"src": "10073:124:19",
													"statements": [
														{
															"nativeSrc": "10083:26:19",
															"nodeType": "YulAssignment",
															"src": "10083:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10095:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "10095:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10106:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10106:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10091:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10091:3:19"
																},
																"nativeSrc": "10091:18:19",
																"nodeType": "YulFunctionCall",
																"src": "10091:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10083:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10083:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10163:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10163:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10176:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10176:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10187:1:19",
																				"nodeType": "YulLiteral",
																				"src": "10187:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10172:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10172:3:19"
																		},
																		"nativeSrc": "10172:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10172:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10119:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "10119:43:19"
																},
																"nativeSrc": "10119:71:19",
																"nodeType": "YulFunctionCall",
																"src": "10119:71:19"
															},
															"nativeSrc": "10119:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "10119:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9975:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10045:9:19",
														"nodeType": "YulTypedName",
														"src": "10045:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10057:6:19",
														"nodeType": "YulTypedName",
														"src": "10057:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10068:4:19",
														"nodeType": "YulTypedName",
														"src": "10068:4:19",
														"type": ""
													}
												],
												"src": "9975:222:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_LocationProvider_$3204(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_LocationProvider_$3204(value) {\n        if iszero(eq(value, cleanup_t_contract$_LocationProvider_$3204(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_LocationProvider_$3204_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_LocationProvider_$3204(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_contract$_LocationProvider_$3204_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_contract$_LocationProvider_$3204_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162002cb138038062002cb18339818101604052810190620000369190620003fb565b338484815f9081620000499190620006fe565b5080600190816200005b9190620006fe565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d1575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000c89190620007f3565b60405180910390fd5b620000e2816200013f60201b60201c565b508160089081620000f49190620006fe565b5080600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200080e565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b62000263826200021b565b810181811067ffffffffffffffff821117156200028557620002846200022b565b5b80604052505050565b5f6200029962000202565b9050620002a7828262000258565b919050565b5f67ffffffffffffffff821115620002c957620002c86200022b565b5b620002d4826200021b565b9050602081019050919050565b5f5b8381101562000300578082015181840152602081019050620002e3565b5f8484015250505050565b5f620003216200031b84620002ac565b6200028e565b90508281526020810184848401111562000340576200033f62000217565b5b6200034d848285620002e1565b509392505050565b5f82601f8301126200036c576200036b62000213565b5b81516200037e8482602086016200030b565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620003b28262000387565b9050919050565b5f620003c582620003a6565b9050919050565b620003d781620003b9565b8114620003e2575f80fd5b50565b5f81519050620003f581620003cc565b92915050565b5f805f80608085870312156200041657620004156200020b565b5b5f85015167ffffffffffffffff8111156200043657620004356200020f565b5b620004448782880162000355565b945050602085015167ffffffffffffffff8111156200046857620004676200020f565b5b620004768782880162000355565b935050604085015167ffffffffffffffff8111156200049a57620004996200020f565b5b620004a88782880162000355565b9250506060620004bb87828801620003e5565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200051657607f821691505b6020821081036200052c576200052b620004d1565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620005907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000553565b6200059c868362000553565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620005e6620005e0620005da84620005b4565b620005bd565b620005b4565b9050919050565b5f819050919050565b6200060183620005c6565b620006196200061082620005ed565b8484546200055f565b825550505050565b5f90565b6200062f62000621565b6200063c818484620005f6565b505050565b5b818110156200066357620006575f8262000625565b60018101905062000642565b5050565b601f821115620006b2576200067c8162000532565b620006878462000544565b8101602085101562000697578190505b620006af620006a68562000544565b83018262000641565b50505b505050565b5f82821c905092915050565b5f620006d45f1984600802620006b7565b1980831691505092915050565b5f620006ee8383620006c3565b9150826002028217905092915050565b6200070982620004c7565b67ffffffffffffffff8111156200072557620007246200022b565b5b620007318254620004fe565b6200073e82828562000667565b5f60209050601f83116001811462000774575f84156200075f578287015190505b6200076b8582620006e1565b865550620007da565b601f198416620007848662000532565b5f5b82811015620007ad5784890151825560018201915060208501945060208101905062000786565b86831015620007cd5784890151620007c9601f891682620006c3565b8355505b6001600288020188555050505b505050505050565b620007ed81620003a6565b82525050565b5f602082019050620008085f830184620007e2565b92915050565b612495806200081c5f395ff3fe60806040526004361061011e575f3560e01c806370a082311161009f578063b88d4fde11610063578063b88d4fde146103c6578063c87b56dd146103ee578063d9e0dc591461042a578063e985e9c514610466578063f2fde38b146104a25761011e565b806370a08231146102f8578063715018a6146103345780638da5cb5b1461034a57806395d89b4114610374578063a22cb4651461039e5761011e565b806340d097c3116100e657806340d097c31461021457806342842e0e1461024457806342966c681461026c57806347baf0e9146102945780636352211e146102bc5761011e565b806301ffc9a71461012257806306fdde031461015e578063081812fc14610188578063095ea7b3146101c457806323b872dd146101ec575b5f80fd5b34801561012d575f80fd5b50610148600480360381019061014391906119f7565b6104ca565b6040516101559190611a3c565b60405180910390f35b348015610169575f80fd5b506101726104db565b60405161017f9190611adf565b60405180910390f35b348015610193575f80fd5b506101ae60048036038101906101a99190611b32565b61056a565b6040516101bb9190611b9c565b60405180910390f35b3480156101cf575f80fd5b506101ea60048036038101906101e59190611bdf565b610585565b005b3480156101f7575f80fd5b50610212600480360381019061020d9190611c1d565b61059b565b005b61022e60048036038101906102299190611c6d565b61069a565b60405161023b9190611ca7565b60405180910390f35b34801561024f575f80fd5b5061026a60048036038101906102659190611c1d565b610775565b005b348015610277575f80fd5b50610292600480360381019061028d9190611b32565b610794565b005b34801561029f575f80fd5b506102ba60048036038101906102b59190611b32565b6107aa565b005b3480156102c7575f80fd5b506102e260048036038101906102dd9190611b32565b6108e2565b6040516102ef9190611b9c565b60405180910390f35b348015610303575f80fd5b5061031e60048036038101906103199190611c6d565b6108f3565b60405161032b9190611ca7565b60405180910390f35b34801561033f575f80fd5b506103486109a9565b005b348015610355575f80fd5b5061035e6109bc565b60405161036b9190611b9c565b60405180910390f35b34801561037f575f80fd5b506103886109e4565b6040516103959190611adf565b60405180910390f35b3480156103a9575f80fd5b506103c460048036038101906103bf9190611cea565b610a74565b005b3480156103d1575f80fd5b506103ec60048036038101906103e79190611e54565b610a8a565b005b3480156103f9575f80fd5b50610414600480360381019061040f9190611b32565b610aa7565b6040516104219190611adf565b60405180910390f35b348015610435575f80fd5b50610450600480360381019061044b9190611c6d565b610b4d565b60405161045d9190611adf565b60405180910390f35b348015610471575f80fd5b5061048c60048036038101906104879190611ed4565b610bf2565b6040516104999190611a3c565b60405180910390f35b3480156104ad575f80fd5b506104c860048036038101906104c39190611c6d565b610c80565b005b5f6104d482610d04565b9050919050565b60605f80546104e990611f3f565b80601f016020809104026020016040519081016040528092919081815260200182805461051590611f3f565b80156105605780601f1061053757610100808354040283529160200191610560565b820191905f5260205f20905b81548152906001019060200180831161054357829003601f168201915b5050505050905090565b5f61057482610d64565b5061057e82610dea565b9050919050565b6105978282610592610e23565b610e2a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060b575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106029190611b9c565b60405180910390fd5b5f61061e8383610619610e23565b610e3c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610694578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161068b93929190611f6f565b60405180910390fd5b50505050565b5f6106a56009611047565b5f6106b0600961105b565b9050600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9e0dc59846040518263ffffffff1660e01b815260040161070c9190611b9c565b5f60405180830381865afa158015610726573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019061074e9190612042565b600a5f8381526020019081526020015f20908161076b9190612226565b5080915050919050565b61078f83838360405180602001604052805f815250610a8a565b505050565b6107a65f826107a1610e23565b610e3c565b5050565b3373ffffffffffffffffffffffffffffffffffffffff166107ca826108e2565b73ffffffffffffffffffffffffffffffffffffffff1614610820576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108179061233f565b60405180910390fd5b5f600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9e0dc59336040518263ffffffff1660e01b815260040161087b9190611b9c565b5f60405180830381865afa158015610895573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906108bd9190612042565b905080600a5f8481526020019081526020015f2090816108dd9190612226565b505050565b5f6108ec82610d64565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610964575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161095b9190611b9c565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109b1611067565b6109ba5f6110ee565b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546109f390611f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1f90611f3f565b8015610a6a5780601f10610a4157610100808354040283529160200191610a6a565b820191905f5260205f20905b815481529060010190602001808311610a4d57829003601f168201915b5050505050905090565b610a86610a7f610e23565b83836111b1565b5050565b610a9584848461059b565b610aa18484848461131a565b50505050565b60605f600a5f8481526020019081526020015f208054610ac690611f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054610af290611f3f565b8015610b3d5780601f10610b1457610100808354040283529160200191610b3d565b820191905f5260205f20905b815481529060010190602001808311610b2057829003601f168201915b5050505050905080915050919050565b6060600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9e0dc59836040518263ffffffff1660e01b8152600401610ba99190611b9c565b5f60405180830381865afa158015610bc3573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190610beb9190612042565b9050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610c88611067565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cf8575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610cef9190611b9c565b60405180910390fd5b610d01816110ee565b50565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610d5d5750610d5c826114cc565b5b9050919050565b5f80610d6f836115ad565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610de157826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610dd89190611ca7565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610e3783838360016115e6565b505050565b5f80610e47846115ad565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610e8857610e878184866117a5565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f1357610ec75f855f806115e6565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610f9257600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b61106f610e23565b73ffffffffffffffffffffffffffffffffffffffff1661108d6109bc565b73ffffffffffffffffffffffffffffffffffffffff16146110ec576110b0610e23565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110e39190611b9c565b60405180910390fd5b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361122157816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016112189190611b9c565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161130d9190611a3c565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156114c6578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261135d610e23565b8685856040518563ffffffff1660e01b815260040161137f94939291906123af565b6020604051808303815f875af19250505080156113ba57506040513d601f19601f820116820180604052508101906113b7919061240d565b60015b61143b573d805f81146113e8576040519150601f19603f3d011682016040523d82523d5f602084013e6113ed565b606091505b505f81510361143357836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161142a9190611b9c565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146114c457836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016114bb9190611b9c565b60405180910390fd5b505b50505050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061159657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806115a657506115a582611868565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061161e57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611750575f61162d84610d64565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561169757508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156116aa57506116a88184610bf2565b155b156116ec57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016116e39190611b9c565b60405180910390fd5b811561174e57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6117b08383836118d1565b611863575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361182457806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161181b9190611ca7565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161185a929190612438565b60405180910390fd5b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561198857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061194957506119488484610bf2565b5b8061198757508273ffffffffffffffffffffffffffffffffffffffff1661196f83610dea565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119d6816119a2565b81146119e0575f80fd5b50565b5f813590506119f1816119cd565b92915050565b5f60208284031215611a0c57611a0b61199a565b5b5f611a19848285016119e3565b91505092915050565b5f8115159050919050565b611a3681611a22565b82525050565b5f602082019050611a4f5f830184611a2d565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611a8c578082015181840152602081019050611a71565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611ab182611a55565b611abb8185611a5f565b9350611acb818560208601611a6f565b611ad481611a97565b840191505092915050565b5f6020820190508181035f830152611af78184611aa7565b905092915050565b5f819050919050565b611b1181611aff565b8114611b1b575f80fd5b50565b5f81359050611b2c81611b08565b92915050565b5f60208284031215611b4757611b4661199a565b5b5f611b5484828501611b1e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b8682611b5d565b9050919050565b611b9681611b7c565b82525050565b5f602082019050611baf5f830184611b8d565b92915050565b611bbe81611b7c565b8114611bc8575f80fd5b50565b5f81359050611bd981611bb5565b92915050565b5f8060408385031215611bf557611bf461199a565b5b5f611c0285828601611bcb565b9250506020611c1385828601611b1e565b9150509250929050565b5f805f60608486031215611c3457611c3361199a565b5b5f611c4186828701611bcb565b9350506020611c5286828701611bcb565b9250506040611c6386828701611b1e565b9150509250925092565b5f60208284031215611c8257611c8161199a565b5b5f611c8f84828501611bcb565b91505092915050565b611ca181611aff565b82525050565b5f602082019050611cba5f830184611c98565b92915050565b611cc981611a22565b8114611cd3575f80fd5b50565b5f81359050611ce481611cc0565b92915050565b5f8060408385031215611d0057611cff61199a565b5b5f611d0d85828601611bcb565b9250506020611d1e85828601611cd6565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611d6682611a97565b810181811067ffffffffffffffff82111715611d8557611d84611d30565b5b80604052505050565b5f611d97611991565b9050611da38282611d5d565b919050565b5f67ffffffffffffffff821115611dc257611dc1611d30565b5b611dcb82611a97565b9050602081019050919050565b828183375f83830152505050565b5f611df8611df384611da8565b611d8e565b905082815260208101848484011115611e1457611e13611d2c565b5b611e1f848285611dd8565b509392505050565b5f82601f830112611e3b57611e3a611d28565b5b8135611e4b848260208601611de6565b91505092915050565b5f805f8060808587031215611e6c57611e6b61199a565b5b5f611e7987828801611bcb565b9450506020611e8a87828801611bcb565b9350506040611e9b87828801611b1e565b925050606085013567ffffffffffffffff811115611ebc57611ebb61199e565b5b611ec887828801611e27565b91505092959194509250565b5f8060408385031215611eea57611ee961199a565b5b5f611ef785828601611bcb565b9250506020611f0885828601611bcb565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f5657607f821691505b602082108103611f6957611f68611f12565b5b50919050565b5f606082019050611f825f830186611b8d565b611f8f6020830185611c98565b611f9c6040830184611b8d565b949350505050565b5f67ffffffffffffffff821115611fbe57611fbd611d30565b5b611fc782611a97565b9050602081019050919050565b5f611fe6611fe184611fa4565b611d8e565b90508281526020810184848401111561200257612001611d2c565b5b61200d848285611a6f565b509392505050565b5f82601f83011261202957612028611d28565b5b8151612039848260208601611fd4565b91505092915050565b5f602082840312156120575761205661199a565b5b5f82015167ffffffffffffffff8111156120745761207361199e565b5b61208084828501612015565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026120e57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826120aa565b6120ef86836120aa565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61212a61212561212084611aff565b612107565b611aff565b9050919050565b5f819050919050565b61214383612110565b61215761214f82612131565b8484546120b6565b825550505050565b5f90565b61216b61215f565b61217681848461213a565b505050565b5b818110156121995761218e5f82612163565b60018101905061217c565b5050565b601f8211156121de576121af81612089565b6121b88461209b565b810160208510156121c7578190505b6121db6121d38561209b565b83018261217b565b50505b505050565b5f82821c905092915050565b5f6121fe5f19846008026121e3565b1980831691505092915050565b5f61221683836121ef565b9150826002028217905092915050565b61222f82611a55565b67ffffffffffffffff81111561224857612247611d30565b5b6122528254611f3f565b61225d82828561219d565b5f60209050601f83116001811461228e575f841561227c578287015190505b612286858261220b565b8655506122ed565b601f19841661229c86612089565b5f5b828110156122c35784890151825560018201915060208501945060208101905061229e565b868310156122e057848901516122dc601f8916826121ef565b8355505b6001600288020188555050505b505050505050565b7f4e6f74466f756e640000000000000000000000000000000000000000000000005f82015250565b5f612329600883611a5f565b9150612334826122f5565b602082019050919050565b5f6020820190508181035f8301526123568161231d565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6123818261235d565b61238b8185612367565b935061239b818560208601611a6f565b6123a481611a97565b840191505092915050565b5f6080820190506123c25f830187611b8d565b6123cf6020830186611b8d565b6123dc6040830185611c98565b81810360608301526123ee8184612377565b905095945050505050565b5f81519050612407816119cd565b92915050565b5f602082840312156124225761242161199a565b5b5f61242f848285016123f9565b91505092915050565b5f60408201905061244b5f830185611b8d565b6124586020830184611c98565b939250505056fea2646970667358221220604836e18d0388ca716f66e590a12d0e67b32de16a41f84319f925ef8b28c78264736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2CB1 CODESIZE SUB DUP1 PUSH3 0x2CB1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x3FB JUMP JUMPDEST CALLER DUP5 DUP5 DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x49 SWAP2 SWAP1 PUSH3 0x6FE JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5B SWAP2 SWAP1 PUSH3 0x6FE JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC8 SWAP2 SWAP1 PUSH3 0x7F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xE2 DUP2 PUSH3 0x13F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x8 SWAP1 DUP2 PUSH3 0xF4 SWAP2 SWAP1 PUSH3 0x6FE JUMP JUMPDEST POP DUP1 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x80E JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x263 DUP3 PUSH3 0x21B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x285 JUMPI PUSH3 0x284 PUSH3 0x22B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x299 PUSH3 0x202 JUMP JUMPDEST SWAP1 POP PUSH3 0x2A7 DUP3 DUP3 PUSH3 0x258 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2C9 JUMPI PUSH3 0x2C8 PUSH3 0x22B JUMP JUMPDEST JUMPDEST PUSH3 0x2D4 DUP3 PUSH3 0x21B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x300 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2E3 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x321 PUSH3 0x31B DUP5 PUSH3 0x2AC JUMP JUMPDEST PUSH3 0x28E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x340 JUMPI PUSH3 0x33F PUSH3 0x217 JUMP JUMPDEST JUMPDEST PUSH3 0x34D DUP5 DUP3 DUP6 PUSH3 0x2E1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x36C JUMPI PUSH3 0x36B PUSH3 0x213 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x37E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x30B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x3B2 DUP3 PUSH3 0x387 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x3C5 DUP3 PUSH3 0x3A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3D7 DUP2 PUSH3 0x3B9 JUMP JUMPDEST DUP2 EQ PUSH3 0x3E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x3F5 DUP2 PUSH3 0x3CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x416 JUMPI PUSH3 0x415 PUSH3 0x20B JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x436 JUMPI PUSH3 0x435 PUSH3 0x20F JUMP JUMPDEST JUMPDEST PUSH3 0x444 DUP8 DUP3 DUP9 ADD PUSH3 0x355 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x468 JUMPI PUSH3 0x467 PUSH3 0x20F JUMP JUMPDEST JUMPDEST PUSH3 0x476 DUP8 DUP3 DUP9 ADD PUSH3 0x355 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x49A JUMPI PUSH3 0x499 PUSH3 0x20F JUMP JUMPDEST JUMPDEST PUSH3 0x4A8 DUP8 DUP3 DUP9 ADD PUSH3 0x355 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x4BB DUP8 DUP3 DUP9 ADD PUSH3 0x3E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x516 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x52C JUMPI PUSH3 0x52B PUSH3 0x4D1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x590 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x553 JUMP JUMPDEST PUSH3 0x59C DUP7 DUP4 PUSH3 0x553 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x5E6 PUSH3 0x5E0 PUSH3 0x5DA DUP5 PUSH3 0x5B4 JUMP JUMPDEST PUSH3 0x5BD JUMP JUMPDEST PUSH3 0x5B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x601 DUP4 PUSH3 0x5C6 JUMP JUMPDEST PUSH3 0x619 PUSH3 0x610 DUP3 PUSH3 0x5ED JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x55F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x62F PUSH3 0x621 JUMP JUMPDEST PUSH3 0x63C DUP2 DUP5 DUP5 PUSH3 0x5F6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x663 JUMPI PUSH3 0x657 PUSH0 DUP3 PUSH3 0x625 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x642 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x6B2 JUMPI PUSH3 0x67C DUP2 PUSH3 0x532 JUMP JUMPDEST PUSH3 0x687 DUP5 PUSH3 0x544 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x697 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6AF PUSH3 0x6A6 DUP6 PUSH3 0x544 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x641 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x6D4 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x6B7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x6EE DUP4 DUP4 PUSH3 0x6C3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x709 DUP3 PUSH3 0x4C7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x725 JUMPI PUSH3 0x724 PUSH3 0x22B JUMP JUMPDEST JUMPDEST PUSH3 0x731 DUP3 SLOAD PUSH3 0x4FE JUMP JUMPDEST PUSH3 0x73E DUP3 DUP3 DUP6 PUSH3 0x667 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x774 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x75F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x76B DUP6 DUP3 PUSH3 0x6E1 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x7DA JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x784 DUP7 PUSH3 0x532 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x7AD JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x786 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x7CD JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x7C9 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x6C3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x7ED DUP2 PUSH3 0x3A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x808 PUSH0 DUP4 ADD DUP5 PUSH3 0x7E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2495 DUP1 PUSH3 0x81C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xD9E0DC59 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A2 JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x39E JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH4 0x40D097C3 GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x47BAF0E9 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2BC JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1EC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1BDF JUMP JUMPDEST PUSH2 0x585 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x348 PUSH2 0x9A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0xA74 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1E54 JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x450 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x1A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x4D4 DUP3 PUSH2 0xD04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4E9 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x515 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x560 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x537 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x560 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x543 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x574 DUP3 PUSH2 0xD64 JUMP JUMPDEST POP PUSH2 0x57E DUP3 PUSH2 0xDEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x597 DUP3 DUP3 PUSH2 0x592 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0xE2A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x61E DUP4 DUP4 PUSH2 0x619 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0xE3C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x694 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6A5 PUSH1 0x9 PUSH2 0x1047 JUMP JUMPDEST PUSH0 PUSH2 0x6B0 PUSH1 0x9 PUSH2 0x105B JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD9E0DC59 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70C SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x726 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74E SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x2226 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x78F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA8A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7A6 PUSH0 DUP3 PUSH2 0x7A1 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0xE3C JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7CA DUP3 PUSH2 0x8E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x817 SWAP1 PUSH2 0x233F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD9E0DC59 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x895 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BD SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x2226 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8EC DUP3 PUSH2 0xD64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x964 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95B SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0x1067 JUMP JUMPDEST PUSH2 0x9BA PUSH0 PUSH2 0x10EE JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x9F3 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA1F SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA6A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA41 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA6A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA4D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA86 PUSH2 0xA7F PUSH2 0xE23 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x11B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA95 DUP5 DUP5 DUP5 PUSH2 0x59B JUMP JUMPDEST PUSH2 0xAA1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x131A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xAC6 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAF2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB14 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD9E0DC59 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA9 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBEB SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC88 PUSH2 0x1067 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCF8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD01 DUP2 PUSH2 0x10EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xD5D JUMPI POP PUSH2 0xD5C DUP3 PUSH2 0x14CC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD6F DUP4 PUSH2 0x15AD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE1 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD8 SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE37 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x15E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE47 DUP5 PUSH2 0x15AD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE88 JUMPI PUSH2 0xE87 DUP2 DUP5 DUP7 PUSH2 0x17A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF13 JUMPI PUSH2 0xEC7 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF92 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106F PUSH2 0xE23 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x108D PUSH2 0x9BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10EC JUMPI PUSH2 0x10B0 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E3 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1221 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1218 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x130D SWAP2 SWAP1 PUSH2 0x1A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x14C6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x135D PUSH2 0xE23 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13BA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B7 SWAP2 SWAP1 PUSH2 0x240D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x143B JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x13E8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1433 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142A SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x14C4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BB SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1596 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x15A6 JUMPI POP PUSH2 0x15A5 DUP3 PUSH2 0x1868 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x161E JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1750 JUMPI PUSH0 PUSH2 0x162D DUP5 PUSH2 0xD64 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1697 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x16AA JUMPI POP PUSH2 0x16A8 DUP2 DUP5 PUSH2 0xBF2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x16EC JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E3 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x174E JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x17B0 DUP4 DUP4 DUP4 PUSH2 0x18D1 JUMP JUMPDEST PUSH2 0x1863 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1824 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181B SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185A SWAP3 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1988 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1949 JUMPI POP PUSH2 0x1948 DUP5 DUP5 PUSH2 0xBF2 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1987 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x196F DUP4 PUSH2 0xDEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19D6 DUP2 PUSH2 0x19A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x19E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F1 DUP2 PUSH2 0x19CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A0C JUMPI PUSH2 0x1A0B PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A19 DUP5 DUP3 DUP6 ADD PUSH2 0x19E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A36 DUP2 PUSH2 0x1A22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4F PUSH0 DUP4 ADD DUP5 PUSH2 0x1A2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A8C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A71 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB1 DUP3 PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x1ABB DUP2 DUP6 PUSH2 0x1A5F JUMP JUMPDEST SWAP4 POP PUSH2 0x1ACB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x1AD4 DUP2 PUSH2 0x1A97 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AF7 DUP2 DUP5 PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B11 DUP2 PUSH2 0x1AFF JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2C DUP2 PUSH2 0x1B08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B47 JUMPI PUSH2 0x1B46 PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B54 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B86 DUP3 PUSH2 0x1B5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B96 DUP2 PUSH2 0x1B7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BAF PUSH0 DUP4 ADD DUP5 PUSH2 0x1B8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BBE DUP2 PUSH2 0x1B7C JUMP JUMPDEST DUP2 EQ PUSH2 0x1BC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BD9 DUP2 PUSH2 0x1BB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BF5 JUMPI PUSH2 0x1BF4 PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C02 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C13 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C34 JUMPI PUSH2 0x1C33 PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C41 DUP7 DUP3 DUP8 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C52 DUP7 DUP3 DUP8 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C63 DUP7 DUP3 DUP8 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C82 JUMPI PUSH2 0x1C81 PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C8F DUP5 DUP3 DUP6 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CA1 DUP2 PUSH2 0x1AFF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CBA PUSH0 DUP4 ADD DUP5 PUSH2 0x1C98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CC9 DUP2 PUSH2 0x1A22 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CD3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CE4 DUP2 PUSH2 0x1CC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D00 JUMPI PUSH2 0x1CFF PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D0D DUP6 DUP3 DUP7 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D1E DUP6 DUP3 DUP7 ADD PUSH2 0x1CD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D66 DUP3 PUSH2 0x1A97 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D85 JUMPI PUSH2 0x1D84 PUSH2 0x1D30 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D97 PUSH2 0x1991 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DA3 DUP3 DUP3 PUSH2 0x1D5D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DC2 JUMPI PUSH2 0x1DC1 PUSH2 0x1D30 JUMP JUMPDEST JUMPDEST PUSH2 0x1DCB DUP3 PUSH2 0x1A97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF8 PUSH2 0x1DF3 DUP5 PUSH2 0x1DA8 JUMP JUMPDEST PUSH2 0x1D8E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E14 JUMPI PUSH2 0x1E13 PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST PUSH2 0x1E1F DUP5 DUP3 DUP6 PUSH2 0x1DD8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E3B JUMPI PUSH2 0x1E3A PUSH2 0x1D28 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E4B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E6C JUMPI PUSH2 0x1E6B PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E79 DUP8 DUP3 DUP9 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1E8A DUP8 DUP3 DUP9 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1E9B DUP8 DUP3 DUP9 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EBC JUMPI PUSH2 0x1EBB PUSH2 0x199E JUMP JUMPDEST JUMPDEST PUSH2 0x1EC8 DUP8 DUP3 DUP9 ADD PUSH2 0x1E27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EEA JUMPI PUSH2 0x1EE9 PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EF7 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F08 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F56 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F69 JUMPI PUSH2 0x1F68 PUSH2 0x1F12 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F82 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x1F8F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C98 JUMP JUMPDEST PUSH2 0x1F9C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B8D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FBE JUMPI PUSH2 0x1FBD PUSH2 0x1D30 JUMP JUMPDEST JUMPDEST PUSH2 0x1FC7 DUP3 PUSH2 0x1A97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE6 PUSH2 0x1FE1 DUP5 PUSH2 0x1FA4 JUMP JUMPDEST PUSH2 0x1D8E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2002 JUMPI PUSH2 0x2001 PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST PUSH2 0x200D DUP5 DUP3 DUP6 PUSH2 0x1A6F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2029 JUMPI PUSH2 0x2028 PUSH2 0x1D28 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x2039 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2057 JUMPI PUSH2 0x2056 PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2074 JUMPI PUSH2 0x2073 PUSH2 0x199E JUMP JUMPDEST JUMPDEST PUSH2 0x2080 DUP5 DUP3 DUP6 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x20E5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x20AA JUMP JUMPDEST PUSH2 0x20EF DUP7 DUP4 PUSH2 0x20AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x212A PUSH2 0x2125 PUSH2 0x2120 DUP5 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0x2107 JUMP JUMPDEST PUSH2 0x1AFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2143 DUP4 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x2157 PUSH2 0x214F DUP3 PUSH2 0x2131 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x20B6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x216B PUSH2 0x215F JUMP JUMPDEST PUSH2 0x2176 DUP2 DUP5 DUP5 PUSH2 0x213A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2199 JUMPI PUSH2 0x218E PUSH0 DUP3 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x217C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x21DE JUMPI PUSH2 0x21AF DUP2 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x21B8 DUP5 PUSH2 0x209B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x21C7 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x21DB PUSH2 0x21D3 DUP6 PUSH2 0x209B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x217B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21FE PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x21E3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2216 DUP4 DUP4 PUSH2 0x21EF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x222F DUP3 PUSH2 0x1A55 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2248 JUMPI PUSH2 0x2247 PUSH2 0x1D30 JUMP JUMPDEST JUMPDEST PUSH2 0x2252 DUP3 SLOAD PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x225D DUP3 DUP3 DUP6 PUSH2 0x219D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x228E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x227C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2286 DUP6 DUP3 PUSH2 0x220B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x229C DUP7 PUSH2 0x2089 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x22C3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x229E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x22E0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x22DC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x21EF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F74466F756E64000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2329 PUSH1 0x8 DUP4 PUSH2 0x1A5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2334 DUP3 PUSH2 0x22F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2356 DUP2 PUSH2 0x231D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2381 DUP3 PUSH2 0x235D JUMP JUMPDEST PUSH2 0x238B DUP2 DUP6 PUSH2 0x2367 JUMP JUMPDEST SWAP4 POP PUSH2 0x239B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x23A4 DUP2 PUSH2 0x1A97 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x23C2 PUSH0 DUP4 ADD DUP8 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x23CF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x23DC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C98 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x23EE DUP2 DUP5 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2407 DUP2 PUSH2 0x19CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2422 JUMPI PUSH2 0x2421 PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x242F DUP5 DUP3 DUP6 ADD PUSH2 0x23F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x244B PUSH0 DUP4 ADD DUP6 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x2458 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C98 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x48 CALLDATASIZE 0xE1 DUP14 SUB DUP9 0xCA PUSH18 0x6F66E590A12D0E67B32DE16A41F84319F925 0xEF DUP12 0x28 0xC7 DUP3 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "490:1677:18:-:0;;;785:220;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;928:10;906:4;912:6;1455:5:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;952:4:18::2;946:3;:10;;;;;;:::i;:::-;;981:17;962:16;;:36;;;;;;;;;;;;;;;;;;785:220:::0;;;;490:1677;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:19:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:126::-;2714:7;2754:42;2747:5;2743:54;2732:65;;2677:126;;;:::o;2809:96::-;2846:7;2875:24;2893:5;2875:24;:::i;:::-;2864:35;;2809:96;;;:::o;2911:121::-;2973:7;3002:24;3020:5;3002:24;:::i;:::-;2991:35;;2911:121;;;:::o;3038:172::-;3136:49;3179:5;3136:49;:::i;:::-;3129:5;3126:60;3116:88;;3200:1;3197;3190:12;3116:88;3038:172;:::o;3216:193::-;3298:5;3329:6;3323:13;3314:22;;3345:58;3397:5;3345:58;:::i;:::-;3216:193;;;;:::o;3415:1389::-;3567:6;3575;3583;3591;3640:3;3628:9;3619:7;3615:23;3611:33;3608:120;;;3647:79;;:::i;:::-;3608:120;3788:1;3777:9;3773:17;3767:24;3818:18;3810:6;3807:30;3804:117;;;3840:79;;:::i;:::-;3804:117;3945:74;4011:7;4002:6;3991:9;3987:22;3945:74;:::i;:::-;3935:84;;3738:291;4089:2;4078:9;4074:18;4068:25;4120:18;4112:6;4109:30;4106:117;;;4142:79;;:::i;:::-;4106:117;4247:74;4313:7;4304:6;4293:9;4289:22;4247:74;:::i;:::-;4237:84;;4039:292;4391:2;4380:9;4376:18;4370:25;4422:18;4414:6;4411:30;4408:117;;;4444:79;;:::i;:::-;4408:117;4549:74;4615:7;4606:6;4595:9;4591:22;4549:74;:::i;:::-;4539:84;;4341:292;4672:2;4698:89;4779:7;4770:6;4759:9;4755:22;4698:89;:::i;:::-;4688:99;;4643:154;3415:1389;;;;;;;:::o;4810:99::-;4862:6;4896:5;4890:12;4880:22;;4810:99;;;:::o;4915:180::-;4963:77;4960:1;4953:88;5060:4;5057:1;5050:15;5084:4;5081:1;5074:15;5101:320;5145:6;5182:1;5176:4;5172:12;5162:22;;5229:1;5223:4;5219:12;5250:18;5240:81;;5306:4;5298:6;5294:17;5284:27;;5240:81;5368:2;5360:6;5357:14;5337:18;5334:38;5331:84;;5387:18;;:::i;:::-;5331:84;5152:269;5101:320;;;:::o;5427:141::-;5476:4;5499:3;5491:11;;5522:3;5519:1;5512:14;5556:4;5553:1;5543:18;5535:26;;5427:141;;;:::o;5574:93::-;5611:6;5658:2;5653;5646:5;5642:14;5638:23;5628:33;;5574:93;;;:::o;5673:107::-;5717:8;5767:5;5761:4;5757:16;5736:37;;5673:107;;;;:::o;5786:393::-;5855:6;5905:1;5893:10;5889:18;5928:97;5958:66;5947:9;5928:97;:::i;:::-;6046:39;6076:8;6065:9;6046:39;:::i;:::-;6034:51;;6118:4;6114:9;6107:5;6103:21;6094:30;;6167:4;6157:8;6153:19;6146:5;6143:30;6133:40;;5862:317;;5786:393;;;;;:::o;6185:77::-;6222:7;6251:5;6240:16;;6185:77;;;:::o;6268:60::-;6296:3;6317:5;6310:12;;6268:60;;;:::o;6334:142::-;6384:9;6417:53;6435:34;6444:24;6462:5;6444:24;:::i;:::-;6435:34;:::i;:::-;6417:53;:::i;:::-;6404:66;;6334:142;;;:::o;6482:75::-;6525:3;6546:5;6539:12;;6482:75;;;:::o;6563:269::-;6673:39;6704:7;6673:39;:::i;:::-;6734:91;6783:41;6807:16;6783:41;:::i;:::-;6775:6;6768:4;6762:11;6734:91;:::i;:::-;6728:4;6721:105;6639:193;6563:269;;;:::o;6838:73::-;6883:3;6838:73;:::o;6917:189::-;6994:32;;:::i;:::-;7035:65;7093:6;7085;7079:4;7035:65;:::i;:::-;6970:136;6917:189;;:::o;7112:186::-;7172:120;7189:3;7182:5;7179:14;7172:120;;;7243:39;7280:1;7273:5;7243:39;:::i;:::-;7216:1;7209:5;7205:13;7196:22;;7172:120;;;7112:186;;:::o;7304:543::-;7405:2;7400:3;7397:11;7394:446;;;7439:38;7471:5;7439:38;:::i;:::-;7523:29;7541:10;7523:29;:::i;:::-;7513:8;7509:44;7706:2;7694:10;7691:18;7688:49;;;7727:8;7712:23;;7688:49;7750:80;7806:22;7824:3;7806:22;:::i;:::-;7796:8;7792:37;7779:11;7750:80;:::i;:::-;7409:431;;7394:446;7304:543;;;:::o;7853:117::-;7907:8;7957:5;7951:4;7947:16;7926:37;;7853:117;;;;:::o;7976:169::-;8020:6;8053:51;8101:1;8097:6;8089:5;8086:1;8082:13;8053:51;:::i;:::-;8049:56;8134:4;8128;8124:15;8114:25;;8027:118;7976:169;;;;:::o;8150:295::-;8226:4;8372:29;8397:3;8391:4;8372:29;:::i;:::-;8364:37;;8434:3;8431:1;8427:11;8421:4;8418:21;8410:29;;8150:295;;;;:::o;8450:1395::-;8567:37;8600:3;8567:37;:::i;:::-;8669:18;8661:6;8658:30;8655:56;;;8691:18;;:::i;:::-;8655:56;8735:38;8767:4;8761:11;8735:38;:::i;:::-;8820:67;8880:6;8872;8866:4;8820:67;:::i;:::-;8914:1;8938:4;8925:17;;8970:2;8962:6;8959:14;8987:1;8982:618;;;;9644:1;9661:6;9658:77;;;9710:9;9705:3;9701:19;9695:26;9686:35;;9658:77;9761:67;9821:6;9814:5;9761:67;:::i;:::-;9755:4;9748:81;9617:222;8952:887;;8982:618;9034:4;9030:9;9022:6;9018:22;9068:37;9100:4;9068:37;:::i;:::-;9127:1;9141:208;9155:7;9152:1;9149:14;9141:208;;;9234:9;9229:3;9225:19;9219:26;9211:6;9204:42;9285:1;9277:6;9273:14;9263:24;;9332:2;9321:9;9317:18;9304:31;;9178:4;9175:1;9171:12;9166:17;;9141:208;;;9377:6;9368:7;9365:19;9362:179;;;9435:9;9430:3;9426:19;9420:26;9478:48;9520:4;9512:6;9508:17;9497:9;9478:48;:::i;:::-;9470:6;9463:64;9385:156;9362:179;9587:1;9583;9575:6;9571:14;9567:22;9561:4;9554:36;8989:611;;;8952:887;;8542:1303;;;8450:1395;;:::o;9851:118::-;9938:24;9956:5;9938:24;:::i;:::-;9933:3;9926:37;9851:118;;:::o;9975:222::-;10068:4;10106:2;10095:9;10091:18;10083:26;;10119:71;10187:1;10176:9;10172:17;10163:6;10119:71;:::i;:::-;9975:222;;;;:::o;490:1677:18:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1128": {
									"entryPoint": 3626,
									"id": 1128,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1194": {
									"entryPoint": 5606,
									"id": 1194,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkAuthorized_776": {
									"entryPoint": 6053,
									"id": 776,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1324": {
									"entryPoint": 4890,
									"id": 1324,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4199,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_703": {
									"entryPoint": 3562,
									"id": 703,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_739": {
									"entryPoint": 6353,
									"id": 739,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSender_1655": {
									"entryPoint": 3619,
									"id": 1655,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_690": {
									"entryPoint": 5549,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1260": {
									"entryPoint": 3428,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1231": {
									"entryPoint": 4529,
									"id": 1231,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4334,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_882": {
									"entryPoint": 3644,
									"id": 882,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_537": {
									"entryPoint": 1413,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_445": {
									"entryPoint": 2291,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1488": {
									"entryPoint": 1940,
									"id": 1488,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_1683": {
									"entryPoint": 4187,
									"id": 1683,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_554": {
									"entryPoint": 1386,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getLocation_3358": {
									"entryPoint": 2893,
									"id": 3358,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1697": {
									"entryPoint": 4167,
									"id": 1697,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_587": {
									"entryPoint": 3058,
									"id": 587,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_467": {
									"entryPoint": 1243,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_458": {
									"entryPoint": 2274,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2492,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2473,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_3287": {
									"entryPoint": 1690,
									"id": 3287,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_651": {
									"entryPoint": 1909,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_677": {
									"entryPoint": 2698,
									"id": 677,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_570": {
									"entryPoint": 2676,
									"id": 570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1538": {
									"entryPoint": 3332,
									"id": 1538,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2017": {
									"entryPoint": 6248,
									"id": 2017,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3374": {
									"entryPoint": 1226,
									"id": 3374,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_417": {
									"entryPoint": 5324,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_476": {
									"entryPoint": 2532,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_3315": {
									"entryPoint": 2727,
									"id": 3315,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_633": {
									"entryPoint": 1435,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3200,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateLocation_3345": {
									"entryPoint": 1962,
									"id": 3345,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7654,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 8148,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 8213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 8258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a896e77af5e233b52f3d565f8bd98eec0ddb0e671485cda84d2cd93d51849a53_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9135,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9272,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8047,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a896e77af5e233b52f3d565f8bd98eec0ddb0e671485cda84d2cd93d51849a53__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6545,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8605,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7640,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6767,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 7954,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7472,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7464,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7468,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6558,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6554,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_a896e77af5e233b52f3d565f8bd98eec0ddb0e671485cda84d2cd93d51849a53": {
									"entryPoint": 8949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8374,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8506,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8543,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20531:19",
										"nodeType": "YulBlock",
										"src": "0:20531:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "378:105:19",
													"nodeType": "YulBlock",
													"src": "378:105:19",
													"statements": [
														{
															"nativeSrc": "388:89:19",
															"nodeType": "YulAssignment",
															"src": "388:89:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:19",
																		"nodeType": "YulLiteral",
																		"src": "410:66:19",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:19"
																},
																"nativeSrc": "399:78:19",
																"nodeType": "YulFunctionCall",
																"src": "399:78:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:19",
														"nodeType": "YulTypedName",
														"src": "360:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:19",
														"nodeType": "YulTypedName",
														"src": "370:7:19",
														"type": ""
													}
												],
												"src": "334:149:19"
											},
											{
												"body": {
													"nativeSrc": "531:78:19",
													"nodeType": "YulBlock",
													"src": "531:78:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:19",
																"nodeType": "YulBlock",
																"src": "587:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:19",
																					"nodeType": "YulLiteral",
																					"src": "596:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:19",
																					"nodeType": "YulLiteral",
																					"src": "599:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:19"
																			},
																			"nativeSrc": "589:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:19"
																		},
																		"nativeSrc": "589:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:19",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:19"
																				},
																				"nativeSrc": "561:23:19",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:19"
																		},
																		"nativeSrc": "551:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:19"
																},
																"nativeSrc": "544:42:19",
																"nodeType": "YulFunctionCall",
																"src": "544:42:19"
															},
															"nativeSrc": "541:62:19",
															"nodeType": "YulIf",
															"src": "541:62:19"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:19",
														"nodeType": "YulTypedName",
														"src": "524:5:19",
														"type": ""
													}
												],
												"src": "489:120:19"
											},
											{
												"body": {
													"nativeSrc": "666:86:19",
													"nodeType": "YulBlock",
													"src": "666:86:19",
													"statements": [
														{
															"nativeSrc": "676:29:19",
															"nodeType": "YulAssignment",
															"src": "676:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:19"
																},
																"nativeSrc": "685:20:19",
																"nodeType": "YulFunctionCall",
																"src": "685:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:19"
																},
																"nativeSrc": "714:32:19",
																"nodeType": "YulFunctionCall",
																"src": "714:32:19"
															},
															"nativeSrc": "714:32:19",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:19"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:19",
														"nodeType": "YulTypedName",
														"src": "644:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:19",
														"nodeType": "YulTypedName",
														"src": "652:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:19",
														"nodeType": "YulTypedName",
														"src": "660:5:19",
														"type": ""
													}
												],
												"src": "615:137:19"
											},
											{
												"body": {
													"nativeSrc": "823:262:19",
													"nodeType": "YulBlock",
													"src": "823:262:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:19",
																"nodeType": "YulBlock",
																"src": "869:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:19"
																			},
																			"nativeSrc": "871:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:19"
																		},
																		"nativeSrc": "871:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:19"
																		},
																		"nativeSrc": "840:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:19",
																		"nodeType": "YulLiteral",
																		"src": "865:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:19"
																},
																"nativeSrc": "836:32:19",
																"nodeType": "YulFunctionCall",
																"src": "836:32:19"
															},
															"nativeSrc": "833:119:19",
															"nodeType": "YulIf",
															"src": "833:119:19"
														},
														{
															"nativeSrc": "962:116:19",
															"nodeType": "YulBlock",
															"src": "962:116:19",
															"statements": [
																{
																	"nativeSrc": "977:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:19",
																		"nodeType": "YulLiteral",
																		"src": "991:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:19",
																			"nodeType": "YulTypedName",
																			"src": "981:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:19",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:19"
																				},
																				"nativeSrc": "1036:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:19",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:19"
																		},
																		"nativeSrc": "1016:52:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:19",
														"nodeType": "YulTypedName",
														"src": "793:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:19",
														"nodeType": "YulTypedName",
														"src": "804:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:19",
														"nodeType": "YulTypedName",
														"src": "816:6:19",
														"type": ""
													}
												],
												"src": "758:327:19"
											},
											{
												"body": {
													"nativeSrc": "1133:48:19",
													"nodeType": "YulBlock",
													"src": "1133:48:19",
													"statements": [
														{
															"nativeSrc": "1143:32:19",
															"nodeType": "YulAssignment",
															"src": "1143:32:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:19"
																		},
																		"nativeSrc": "1161:13:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:19"
																},
																"nativeSrc": "1154:21:19",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:19",
														"nodeType": "YulTypedName",
														"src": "1115:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:19",
														"nodeType": "YulTypedName",
														"src": "1125:7:19",
														"type": ""
													}
												],
												"src": "1091:90:19"
											},
											{
												"body": {
													"nativeSrc": "1246:50:19",
													"nodeType": "YulBlock",
													"src": "1246:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:19",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:19"
																		},
																		"nativeSrc": "1268:21:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:19"
																},
																"nativeSrc": "1256:34:19",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:19"
															},
															"nativeSrc": "1256:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:19"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:19",
														"nodeType": "YulTypedName",
														"src": "1234:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:19",
														"nodeType": "YulTypedName",
														"src": "1241:3:19",
														"type": ""
													}
												],
												"src": "1187:109:19"
											},
											{
												"body": {
													"nativeSrc": "1394:118:19",
													"nodeType": "YulBlock",
													"src": "1394:118:19",
													"statements": [
														{
															"nativeSrc": "1404:26:19",
															"nodeType": "YulAssignment",
															"src": "1404:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:19"
																},
																"nativeSrc": "1412:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:19",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:19"
																		},
																		"nativeSrc": "1487:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:19"
																},
																"nativeSrc": "1440:65:19",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:19"
															},
															"nativeSrc": "1440:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:19",
														"nodeType": "YulTypedName",
														"src": "1366:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:19",
														"nodeType": "YulTypedName",
														"src": "1378:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:19",
														"nodeType": "YulTypedName",
														"src": "1389:4:19",
														"type": ""
													}
												],
												"src": "1302:210:19"
											},
											{
												"body": {
													"nativeSrc": "1577:40:19",
													"nodeType": "YulBlock",
													"src": "1577:40:19",
													"statements": [
														{
															"nativeSrc": "1588:22:19",
															"nodeType": "YulAssignment",
															"src": "1588:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:19"
																},
																"nativeSrc": "1598:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:19",
														"nodeType": "YulTypedName",
														"src": "1560:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:19",
														"nodeType": "YulTypedName",
														"src": "1570:6:19",
														"type": ""
													}
												],
												"src": "1518:99:19"
											},
											{
												"body": {
													"nativeSrc": "1719:73:19",
													"nodeType": "YulBlock",
													"src": "1719:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:19"
																},
																"nativeSrc": "1729:19:19",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:19"
															},
															"nativeSrc": "1729:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:19"
														},
														{
															"nativeSrc": "1757:29:19",
															"nodeType": "YulAssignment",
															"src": "1757:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:19"
																},
																"nativeSrc": "1772:14:19",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:19",
														"nodeType": "YulTypedName",
														"src": "1691:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:19",
														"nodeType": "YulTypedName",
														"src": "1696:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:19",
														"nodeType": "YulTypedName",
														"src": "1707:11:19",
														"type": ""
													}
												],
												"src": "1623:169:19"
											},
											{
												"body": {
													"nativeSrc": "1860:184:19",
													"nodeType": "YulBlock",
													"src": "1860:184:19",
													"statements": [
														{
															"nativeSrc": "1870:10:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:19",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:19",
																"nodeType": "YulLiteral",
																"src": "1879:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:19",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:19",
																"nodeType": "YulBlock",
																"src": "1939:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:19"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:19"
																					},
																					"nativeSrc": "1960:11:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:19"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:19"
																							},
																							"nativeSrc": "1979:11:19",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:19"
																					},
																					"nativeSrc": "1973:18:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:19"
																			},
																			"nativeSrc": "1953:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:19"
																		},
																		"nativeSrc": "1953:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:19"
																},
																"nativeSrc": "1897:13:19",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:19"
															},
															"nativeSrc": "1889:113:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:19",
																"nodeType": "YulBlock",
																"src": "1911:19:19",
																"statements": [
																	{
																		"nativeSrc": "1913:15:19",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:19",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:19",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:19"
																			},
																			"nativeSrc": "1918:10:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:19",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:19",
																"nodeType": "YulBlock",
																"src": "1893:3:19",
																"statements": []
															},
															"src": "1889:113:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:19"
																		},
																		"nativeSrc": "2018:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:19"
																},
																"nativeSrc": "2011:27:19",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:19"
															},
															"nativeSrc": "2011:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:19",
														"nodeType": "YulTypedName",
														"src": "1842:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:19",
														"nodeType": "YulTypedName",
														"src": "1847:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:19",
														"nodeType": "YulTypedName",
														"src": "1852:6:19",
														"type": ""
													}
												],
												"src": "1798:246:19"
											},
											{
												"body": {
													"nativeSrc": "2098:54:19",
													"nodeType": "YulBlock",
													"src": "2098:54:19",
													"statements": [
														{
															"nativeSrc": "2108:38:19",
															"nodeType": "YulAssignment",
															"src": "2108:38:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:19"
																		},
																		"nativeSrc": "2122:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:19"
																		},
																		"nativeSrc": "2138:7:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:19"
																},
																"nativeSrc": "2118:28:19",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:19"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:19",
														"nodeType": "YulTypedName",
														"src": "2081:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:19",
														"nodeType": "YulTypedName",
														"src": "2091:6:19",
														"type": ""
													}
												],
												"src": "2050:102:19"
											},
											{
												"body": {
													"nativeSrc": "2250:285:19",
													"nodeType": "YulBlock",
													"src": "2250:285:19",
													"statements": [
														{
															"nativeSrc": "2260:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:19"
																},
																"nativeSrc": "2274:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:19",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:19",
															"nodeType": "YulAssignment",
															"src": "2322:78:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:19"
																},
																"nativeSrc": "2329:71:19",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:19",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:19"
																		},
																		"nativeSrc": "2444:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:19"
																},
																"nativeSrc": "2409:65:19",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:19"
															},
															"nativeSrc": "2409:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:19"
														},
														{
															"nativeSrc": "2483:46:19",
															"nodeType": "YulAssignment",
															"src": "2483:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:19"
																		},
																		"nativeSrc": "2499:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:19"
																},
																"nativeSrc": "2490:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:19",
														"nodeType": "YulTypedName",
														"src": "2231:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:19",
														"nodeType": "YulTypedName",
														"src": "2238:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:19",
														"nodeType": "YulTypedName",
														"src": "2246:3:19",
														"type": ""
													}
												],
												"src": "2158:377:19"
											},
											{
												"body": {
													"nativeSrc": "2659:195:19",
													"nodeType": "YulBlock",
													"src": "2659:195:19",
													"statements": [
														{
															"nativeSrc": "2669:26:19",
															"nodeType": "YulAssignment",
															"src": "2669:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:19"
																},
																"nativeSrc": "2677:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:19",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:19"
																		},
																		"nativeSrc": "2712:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:19"
																		},
																		"nativeSrc": "2731:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:19"
																},
																"nativeSrc": "2705:47:19",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:19"
															},
															"nativeSrc": "2705:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:19"
														},
														{
															"nativeSrc": "2761:86:19",
															"nodeType": "YulAssignment",
															"src": "2761:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:19",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:19"
																},
																"nativeSrc": "2769:78:19",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:19",
														"nodeType": "YulTypedName",
														"src": "2631:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:19",
														"nodeType": "YulTypedName",
														"src": "2643:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:19",
														"nodeType": "YulTypedName",
														"src": "2654:4:19",
														"type": ""
													}
												],
												"src": "2541:313:19"
											},
											{
												"body": {
													"nativeSrc": "2905:32:19",
													"nodeType": "YulBlock",
													"src": "2905:32:19",
													"statements": [
														{
															"nativeSrc": "2915:16:19",
															"nodeType": "YulAssignment",
															"src": "2915:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:19",
																"nodeType": "YulIdentifier",
																"src": "2926:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:19",
														"nodeType": "YulTypedName",
														"src": "2887:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:19",
														"nodeType": "YulTypedName",
														"src": "2897:7:19",
														"type": ""
													}
												],
												"src": "2860:77:19"
											},
											{
												"body": {
													"nativeSrc": "2986:79:19",
													"nodeType": "YulBlock",
													"src": "2986:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:19",
																"nodeType": "YulBlock",
																"src": "3043:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:19"
																			},
																			"nativeSrc": "3045:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:19"
																		},
																		"nativeSrc": "3045:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:19"
																				},
																				"nativeSrc": "3016:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:19"
																		},
																		"nativeSrc": "3006:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:19"
																},
																"nativeSrc": "2999:43:19",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:19"
															},
															"nativeSrc": "2996:63:19",
															"nodeType": "YulIf",
															"src": "2996:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:19",
														"nodeType": "YulTypedName",
														"src": "2979:5:19",
														"type": ""
													}
												],
												"src": "2943:122:19"
											},
											{
												"body": {
													"nativeSrc": "3123:87:19",
													"nodeType": "YulBlock",
													"src": "3123:87:19",
													"statements": [
														{
															"nativeSrc": "3133:29:19",
															"nodeType": "YulAssignment",
															"src": "3133:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:19"
																},
																"nativeSrc": "3142:20:19",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:19"
																},
																"nativeSrc": "3171:33:19",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:19"
															},
															"nativeSrc": "3171:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:19",
														"nodeType": "YulTypedName",
														"src": "3101:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:19",
														"nodeType": "YulTypedName",
														"src": "3109:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:19",
														"nodeType": "YulTypedName",
														"src": "3117:5:19",
														"type": ""
													}
												],
												"src": "3071:139:19"
											},
											{
												"body": {
													"nativeSrc": "3282:263:19",
													"nodeType": "YulBlock",
													"src": "3282:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:19",
																"nodeType": "YulBlock",
																"src": "3328:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:19"
																			},
																			"nativeSrc": "3330:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:19"
																		},
																		"nativeSrc": "3330:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:19"
																		},
																		"nativeSrc": "3299:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:19"
																},
																"nativeSrc": "3295:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:19"
															},
															"nativeSrc": "3292:119:19",
															"nodeType": "YulIf",
															"src": "3292:119:19"
														},
														{
															"nativeSrc": "3421:117:19",
															"nodeType": "YulBlock",
															"src": "3421:117:19",
															"statements": [
																{
																	"nativeSrc": "3436:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:19",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:19",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:19",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:19"
																				},
																				"nativeSrc": "3496:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:19"
																		},
																		"nativeSrc": "3475:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:19",
														"nodeType": "YulTypedName",
														"src": "3252:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:19",
														"nodeType": "YulTypedName",
														"src": "3263:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:19",
														"nodeType": "YulTypedName",
														"src": "3275:6:19",
														"type": ""
													}
												],
												"src": "3216:329:19"
											},
											{
												"body": {
													"nativeSrc": "3596:81:19",
													"nodeType": "YulBlock",
													"src": "3596:81:19",
													"statements": [
														{
															"nativeSrc": "3606:65:19",
															"nodeType": "YulAssignment",
															"src": "3606:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:19",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:19"
																},
																"nativeSrc": "3617:54:19",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:19",
														"nodeType": "YulTypedName",
														"src": "3578:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:19",
														"nodeType": "YulTypedName",
														"src": "3588:7:19",
														"type": ""
													}
												],
												"src": "3551:126:19"
											},
											{
												"body": {
													"nativeSrc": "3728:51:19",
													"nodeType": "YulBlock",
													"src": "3728:51:19",
													"statements": [
														{
															"nativeSrc": "3738:35:19",
															"nodeType": "YulAssignment",
															"src": "3738:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:19"
																},
																"nativeSrc": "3749:24:19",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:19",
														"nodeType": "YulTypedName",
														"src": "3710:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:19",
														"nodeType": "YulTypedName",
														"src": "3720:7:19",
														"type": ""
													}
												],
												"src": "3683:96:19"
											},
											{
												"body": {
													"nativeSrc": "3850:53:19",
													"nodeType": "YulBlock",
													"src": "3850:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:19"
																		},
																		"nativeSrc": "3872:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:19"
																},
																"nativeSrc": "3860:37:19",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:19"
															},
															"nativeSrc": "3860:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:19",
														"nodeType": "YulTypedName",
														"src": "3838:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:19",
														"nodeType": "YulTypedName",
														"src": "3845:3:19",
														"type": ""
													}
												],
												"src": "3785:118:19"
											},
											{
												"body": {
													"nativeSrc": "4007:124:19",
													"nodeType": "YulBlock",
													"src": "4007:124:19",
													"statements": [
														{
															"nativeSrc": "4017:26:19",
															"nodeType": "YulAssignment",
															"src": "4017:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:19"
																},
																"nativeSrc": "4025:18:19",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:19",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:19"
																		},
																		"nativeSrc": "4106:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:19"
																},
																"nativeSrc": "4053:71:19",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:19"
															},
															"nativeSrc": "4053:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:19",
														"nodeType": "YulTypedName",
														"src": "3979:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:19",
														"nodeType": "YulTypedName",
														"src": "3991:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:19",
														"nodeType": "YulTypedName",
														"src": "4002:4:19",
														"type": ""
													}
												],
												"src": "3909:222:19"
											},
											{
												"body": {
													"nativeSrc": "4180:79:19",
													"nodeType": "YulBlock",
													"src": "4180:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:19",
																"nodeType": "YulBlock",
																"src": "4237:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:19"
																			},
																			"nativeSrc": "4239:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:19"
																		},
																		"nativeSrc": "4239:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:19"
																				},
																				"nativeSrc": "4210:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:19"
																		},
																		"nativeSrc": "4200:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:19"
																},
																"nativeSrc": "4193:43:19",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:19"
															},
															"nativeSrc": "4190:63:19",
															"nodeType": "YulIf",
															"src": "4190:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:19",
														"nodeType": "YulTypedName",
														"src": "4173:5:19",
														"type": ""
													}
												],
												"src": "4137:122:19"
											},
											{
												"body": {
													"nativeSrc": "4317:87:19",
													"nodeType": "YulBlock",
													"src": "4317:87:19",
													"statements": [
														{
															"nativeSrc": "4327:29:19",
															"nodeType": "YulAssignment",
															"src": "4327:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:19"
																},
																"nativeSrc": "4336:20:19",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:19"
																},
																"nativeSrc": "4365:33:19",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:19"
															},
															"nativeSrc": "4365:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:19",
														"nodeType": "YulTypedName",
														"src": "4295:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:19",
														"nodeType": "YulTypedName",
														"src": "4303:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:19",
														"nodeType": "YulTypedName",
														"src": "4311:5:19",
														"type": ""
													}
												],
												"src": "4265:139:19"
											},
											{
												"body": {
													"nativeSrc": "4493:391:19",
													"nodeType": "YulBlock",
													"src": "4493:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:19",
																"nodeType": "YulBlock",
																"src": "4539:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:19"
																			},
																			"nativeSrc": "4541:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:19"
																		},
																		"nativeSrc": "4541:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:19"
																		},
																		"nativeSrc": "4510:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:19"
																},
																"nativeSrc": "4506:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:19"
															},
															"nativeSrc": "4503:119:19",
															"nodeType": "YulIf",
															"src": "4503:119:19"
														},
														{
															"nativeSrc": "4632:117:19",
															"nodeType": "YulBlock",
															"src": "4632:117:19",
															"statements": [
																{
																	"nativeSrc": "4647:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:19",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:19",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:19"
																				},
																				"nativeSrc": "4707:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:19"
																		},
																		"nativeSrc": "4686:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:19",
															"nodeType": "YulBlock",
															"src": "4759:118:19",
															"statements": [
																{
																	"nativeSrc": "4774:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:19",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:19"
																				},
																				"nativeSrc": "4835:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:19"
																		},
																		"nativeSrc": "4814:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:19",
														"nodeType": "YulTypedName",
														"src": "4455:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:19",
														"nodeType": "YulTypedName",
														"src": "4466:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:19",
														"nodeType": "YulTypedName",
														"src": "4478:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:19",
														"nodeType": "YulTypedName",
														"src": "4486:6:19",
														"type": ""
													}
												],
												"src": "4410:474:19"
											},
											{
												"body": {
													"nativeSrc": "4990:519:19",
													"nodeType": "YulBlock",
													"src": "4990:519:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:19",
																"nodeType": "YulBlock",
																"src": "5036:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:19"
																			},
																			"nativeSrc": "5038:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:19"
																		},
																		"nativeSrc": "5038:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:19"
																		},
																		"nativeSrc": "5007:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:19"
																},
																"nativeSrc": "5003:32:19",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:19"
															},
															"nativeSrc": "5000:119:19",
															"nodeType": "YulIf",
															"src": "5000:119:19"
														},
														{
															"nativeSrc": "5129:117:19",
															"nodeType": "YulBlock",
															"src": "5129:117:19",
															"statements": [
																{
																	"nativeSrc": "5144:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:19"
																				},
																				"nativeSrc": "5204:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:19"
																		},
																		"nativeSrc": "5183:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:19",
															"nodeType": "YulBlock",
															"src": "5256:118:19",
															"statements": [
																{
																	"nativeSrc": "5271:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:19"
																				},
																				"nativeSrc": "5332:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:19"
																		},
																		"nativeSrc": "5311:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:19",
															"nodeType": "YulBlock",
															"src": "5384:118:19",
															"statements": [
																{
																	"nativeSrc": "5399:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:19"
																				},
																				"nativeSrc": "5460:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:19"
																		},
																		"nativeSrc": "5439:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:19",
														"nodeType": "YulTypedName",
														"src": "4944:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:19",
														"nodeType": "YulTypedName",
														"src": "4955:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:19",
														"nodeType": "YulTypedName",
														"src": "4967:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:19",
														"nodeType": "YulTypedName",
														"src": "4975:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:19",
														"nodeType": "YulTypedName",
														"src": "4983:6:19",
														"type": ""
													}
												],
												"src": "4890:619:19"
											},
											{
												"body": {
													"nativeSrc": "5581:263:19",
													"nodeType": "YulBlock",
													"src": "5581:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "5627:83:19",
																"nodeType": "YulBlock",
																"src": "5627:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5629:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:19"
																			},
																			"nativeSrc": "5629:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:19"
																		},
																		"nativeSrc": "5629:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5602:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5611:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5598:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:19"
																		},
																		"nativeSrc": "5598:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5594:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:19"
																},
																"nativeSrc": "5594:32:19",
																"nodeType": "YulFunctionCall",
																"src": "5594:32:19"
															},
															"nativeSrc": "5591:119:19",
															"nodeType": "YulIf",
															"src": "5591:119:19"
														},
														{
															"nativeSrc": "5720:117:19",
															"nodeType": "YulBlock",
															"src": "5720:117:19",
															"statements": [
																{
																	"nativeSrc": "5735:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5749:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5739:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5764:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5764:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5799:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5810:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5795:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:19"
																				},
																				"nativeSrc": "5795:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5819:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5774:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:19"
																		},
																		"nativeSrc": "5774:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5764:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5515:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5551:9:19",
														"nodeType": "YulTypedName",
														"src": "5551:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5562:7:19",
														"nodeType": "YulTypedName",
														"src": "5562:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5574:6:19",
														"nodeType": "YulTypedName",
														"src": "5574:6:19",
														"type": ""
													}
												],
												"src": "5515:329:19"
											},
											{
												"body": {
													"nativeSrc": "5915:53:19",
													"nodeType": "YulBlock",
													"src": "5915:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5932:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5955:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5937:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:19"
																		},
																		"nativeSrc": "5937:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5925:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:19"
																},
																"nativeSrc": "5925:37:19",
																"nodeType": "YulFunctionCall",
																"src": "5925:37:19"
															},
															"nativeSrc": "5925:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5850:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5903:5:19",
														"nodeType": "YulTypedName",
														"src": "5903:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5910:3:19",
														"nodeType": "YulTypedName",
														"src": "5910:3:19",
														"type": ""
													}
												],
												"src": "5850:118:19"
											},
											{
												"body": {
													"nativeSrc": "6072:124:19",
													"nodeType": "YulBlock",
													"src": "6072:124:19",
													"statements": [
														{
															"nativeSrc": "6082:26:19",
															"nodeType": "YulAssignment",
															"src": "6082:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6094:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6090:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:19"
																},
																"nativeSrc": "6090:18:19",
																"nodeType": "YulFunctionCall",
																"src": "6090:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6082:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6162:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6175:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6186:1:19",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6171:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:19"
																		},
																		"nativeSrc": "6171:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6118:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:19"
																},
																"nativeSrc": "6118:71:19",
																"nodeType": "YulFunctionCall",
																"src": "6118:71:19"
															},
															"nativeSrc": "6118:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5974:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6044:9:19",
														"nodeType": "YulTypedName",
														"src": "6044:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6056:6:19",
														"nodeType": "YulTypedName",
														"src": "6056:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6067:4:19",
														"nodeType": "YulTypedName",
														"src": "6067:4:19",
														"type": ""
													}
												],
												"src": "5974:222:19"
											},
											{
												"body": {
													"nativeSrc": "6242:76:19",
													"nodeType": "YulBlock",
													"src": "6242:76:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6296:16:19",
																"nodeType": "YulBlock",
																"src": "6296:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6305:1:19",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6308:1:19",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6298:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:19"
																			},
																			"nativeSrc": "6298:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:19"
																		},
																		"nativeSrc": "6298:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6265:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6287:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6272:14:19",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:19"
																				},
																				"nativeSrc": "6272:21:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6262:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:19"
																		},
																		"nativeSrc": "6262:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6255:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:19"
																},
																"nativeSrc": "6255:40:19",
																"nodeType": "YulFunctionCall",
																"src": "6255:40:19"
															},
															"nativeSrc": "6252:60:19",
															"nodeType": "YulIf",
															"src": "6252:60:19"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6202:116:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:19",
														"nodeType": "YulTypedName",
														"src": "6235:5:19",
														"type": ""
													}
												],
												"src": "6202:116:19"
											},
											{
												"body": {
													"nativeSrc": "6373:84:19",
													"nodeType": "YulBlock",
													"src": "6373:84:19",
													"statements": [
														{
															"nativeSrc": "6383:29:19",
															"nodeType": "YulAssignment",
															"src": "6383:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6405:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6392:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:19"
																},
																"nativeSrc": "6392:20:19",
																"nodeType": "YulFunctionCall",
																"src": "6392:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6383:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6445:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6421:23:19",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:19"
																},
																"nativeSrc": "6421:30:19",
																"nodeType": "YulFunctionCall",
																"src": "6421:30:19"
															},
															"nativeSrc": "6421:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:19"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6324:133:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6351:6:19",
														"nodeType": "YulTypedName",
														"src": "6351:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6359:3:19",
														"nodeType": "YulTypedName",
														"src": "6359:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6367:5:19",
														"nodeType": "YulTypedName",
														"src": "6367:5:19",
														"type": ""
													}
												],
												"src": "6324:133:19"
											},
											{
												"body": {
													"nativeSrc": "6543:388:19",
													"nodeType": "YulBlock",
													"src": "6543:388:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6589:83:19",
																"nodeType": "YulBlock",
																"src": "6589:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6591:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:19"
																			},
																			"nativeSrc": "6591:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:19"
																		},
																		"nativeSrc": "6591:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6564:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6573:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6560:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:19"
																		},
																		"nativeSrc": "6560:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6556:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:19"
																},
																"nativeSrc": "6556:32:19",
																"nodeType": "YulFunctionCall",
																"src": "6556:32:19"
															},
															"nativeSrc": "6553:119:19",
															"nodeType": "YulIf",
															"src": "6553:119:19"
														},
														{
															"nativeSrc": "6682:117:19",
															"nodeType": "YulBlock",
															"src": "6682:117:19",
															"statements": [
																{
																	"nativeSrc": "6697:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6711:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6701:6:19",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6726:63:19",
																	"nodeType": "YulAssignment",
																	"src": "6726:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6761:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6772:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6757:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:19"
																				},
																				"nativeSrc": "6757:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6781:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6736:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:19"
																		},
																		"nativeSrc": "6736:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6726:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6809:115:19",
															"nodeType": "YulBlock",
															"src": "6809:115:19",
															"statements": [
																{
																	"nativeSrc": "6824:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6838:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6828:6:19",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6854:60:19",
																	"nodeType": "YulAssignment",
																	"src": "6854:60:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6886:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6897:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6882:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:19"
																				},
																				"nativeSrc": "6882:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6906:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6864:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:19"
																		},
																		"nativeSrc": "6864:50:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6854:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6463:468:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6505:9:19",
														"nodeType": "YulTypedName",
														"src": "6505:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6516:7:19",
														"nodeType": "YulTypedName",
														"src": "6516:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6528:6:19",
														"nodeType": "YulTypedName",
														"src": "6528:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6536:6:19",
														"nodeType": "YulTypedName",
														"src": "6536:6:19",
														"type": ""
													}
												],
												"src": "6463:468:19"
											},
											{
												"body": {
													"nativeSrc": "7026:28:19",
													"nodeType": "YulBlock",
													"src": "7026:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7043:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7046:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7036:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:19"
																},
																"nativeSrc": "7036:12:19",
																"nodeType": "YulFunctionCall",
																"src": "7036:12:19"
															},
															"nativeSrc": "7036:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:19"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6937:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:19"
											},
											{
												"body": {
													"nativeSrc": "7149:28:19",
													"nodeType": "YulBlock",
													"src": "7149:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7166:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7169:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7159:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:19"
																},
																"nativeSrc": "7159:12:19",
																"nodeType": "YulFunctionCall",
																"src": "7159:12:19"
															},
															"nativeSrc": "7159:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:19"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7060:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:19"
											},
											{
												"body": {
													"nativeSrc": "7211:152:19",
													"nodeType": "YulBlock",
													"src": "7211:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7228:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7231:77:19",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7221:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:19"
																},
																"nativeSrc": "7221:88:19",
																"nodeType": "YulFunctionCall",
																"src": "7221:88:19"
															},
															"nativeSrc": "7221:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7325:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7328:4:19",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7318:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:19"
																},
																"nativeSrc": "7318:15:19",
																"nodeType": "YulFunctionCall",
																"src": "7318:15:19"
															},
															"nativeSrc": "7318:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7349:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7352:4:19",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7342:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:19"
																},
																"nativeSrc": "7342:15:19",
																"nodeType": "YulFunctionCall",
																"src": "7342:15:19"
															},
															"nativeSrc": "7342:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7183:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:19"
											},
											{
												"body": {
													"nativeSrc": "7412:238:19",
													"nodeType": "YulBlock",
													"src": "7412:238:19",
													"statements": [
														{
															"nativeSrc": "7422:58:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7444:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7474:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7452:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:19"
																		},
																		"nativeSrc": "7452:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7440:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:19"
																},
																"nativeSrc": "7440:40:19",
																"nodeType": "YulFunctionCall",
																"src": "7440:40:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7426:10:19",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7591:22:19",
																"nodeType": "YulBlock",
																"src": "7591:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7593:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:19"
																			},
																			"nativeSrc": "7593:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:19"
																		},
																		"nativeSrc": "7593:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7534:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7546:18:19",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7531:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:19"
																		},
																		"nativeSrc": "7531:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7570:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7582:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7567:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:19"
																		},
																		"nativeSrc": "7567:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7528:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:19"
																},
																"nativeSrc": "7528:62:19",
																"nodeType": "YulFunctionCall",
																"src": "7528:62:19"
															},
															"nativeSrc": "7525:88:19",
															"nodeType": "YulIf",
															"src": "7525:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7629:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7633:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7622:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:19"
																},
																"nativeSrc": "7622:22:19",
																"nodeType": "YulFunctionCall",
																"src": "7622:22:19"
															},
															"nativeSrc": "7622:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:19"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7369:281:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7398:6:19",
														"nodeType": "YulTypedName",
														"src": "7398:6:19",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7406:4:19",
														"nodeType": "YulTypedName",
														"src": "7406:4:19",
														"type": ""
													}
												],
												"src": "7369:281:19"
											},
											{
												"body": {
													"nativeSrc": "7697:88:19",
													"nodeType": "YulBlock",
													"src": "7697:88:19",
													"statements": [
														{
															"nativeSrc": "7707:30:19",
															"nodeType": "YulAssignment",
															"src": "7707:30:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7717:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:19"
																},
																"nativeSrc": "7717:20:19",
																"nodeType": "YulFunctionCall",
																"src": "7717:20:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7707:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7766:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:19"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7774:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:19"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7746:19:19",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:19"
																},
																"nativeSrc": "7746:33:19",
																"nodeType": "YulFunctionCall",
																"src": "7746:33:19"
															},
															"nativeSrc": "7746:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:19"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7656:129:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7681:4:19",
														"nodeType": "YulTypedName",
														"src": "7681:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7690:6:19",
														"nodeType": "YulTypedName",
														"src": "7690:6:19",
														"type": ""
													}
												],
												"src": "7656:129:19"
											},
											{
												"body": {
													"nativeSrc": "7857:241:19",
													"nodeType": "YulBlock",
													"src": "7857:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7962:22:19",
																"nodeType": "YulBlock",
																"src": "7962:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7964:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:19"
																			},
																			"nativeSrc": "7964:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:19"
																		},
																		"nativeSrc": "7964:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7934:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7942:18:19",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7931:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:19"
																},
																"nativeSrc": "7931:30:19",
																"nodeType": "YulFunctionCall",
																"src": "7931:30:19"
															},
															"nativeSrc": "7928:56:19",
															"nodeType": "YulIf",
															"src": "7928:56:19"
														},
														{
															"nativeSrc": "7994:37:19",
															"nodeType": "YulAssignment",
															"src": "7994:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8024:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8002:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:19"
																},
																"nativeSrc": "8002:29:19",
																"nodeType": "YulFunctionCall",
																"src": "8002:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7994:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:19"
																}
															]
														},
														{
															"nativeSrc": "8068:23:19",
															"nodeType": "YulAssignment",
															"src": "8068:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8080:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8086:4:19",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8076:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:19"
																},
																"nativeSrc": "8076:15:19",
																"nodeType": "YulFunctionCall",
																"src": "8076:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8068:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7791:307:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7841:6:19",
														"nodeType": "YulTypedName",
														"src": "7841:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7852:4:19",
														"nodeType": "YulTypedName",
														"src": "7852:4:19",
														"type": ""
													}
												],
												"src": "7791:307:19"
											},
											{
												"body": {
													"nativeSrc": "8168:82:19",
													"nodeType": "YulBlock",
													"src": "8168:82:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8191:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8196:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8201:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8178:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:19"
																},
																"nativeSrc": "8178:30:19",
																"nodeType": "YulFunctionCall",
																"src": "8178:30:19"
															},
															"nativeSrc": "8178:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8228:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8233:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8224:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:19"
																		},
																		"nativeSrc": "8224:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8242:1:19",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:19"
																},
																"nativeSrc": "8217:27:19",
																"nodeType": "YulFunctionCall",
																"src": "8217:27:19"
															},
															"nativeSrc": "8217:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:19"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8104:146:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8150:3:19",
														"nodeType": "YulTypedName",
														"src": "8150:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8155:3:19",
														"nodeType": "YulTypedName",
														"src": "8155:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8160:6:19",
														"nodeType": "YulTypedName",
														"src": "8160:6:19",
														"type": ""
													}
												],
												"src": "8104:146:19"
											},
											{
												"body": {
													"nativeSrc": "8339:340:19",
													"nodeType": "YulBlock",
													"src": "8339:340:19",
													"statements": [
														{
															"nativeSrc": "8349:74:19",
															"nodeType": "YulAssignment",
															"src": "8349:74:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8415:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8374:40:19",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:19"
																		},
																		"nativeSrc": "8374:48:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8358:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:19"
																},
																"nativeSrc": "8358:65:19",
																"nodeType": "YulFunctionCall",
																"src": "8358:65:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8349:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8439:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8446:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8432:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:19"
																},
																"nativeSrc": "8432:21:19",
																"nodeType": "YulFunctionCall",
																"src": "8432:21:19"
															},
															"nativeSrc": "8432:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:19"
														},
														{
															"nativeSrc": "8462:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8477:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8484:4:19",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8473:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:19"
																},
																"nativeSrc": "8473:16:19",
																"nodeType": "YulFunctionCall",
																"src": "8473:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8466:3:19",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8527:83:19",
																"nodeType": "YulBlock",
																"src": "8527:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8529:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:19"
																			},
																			"nativeSrc": "8529:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:19"
																		},
																		"nativeSrc": "8529:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8508:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8513:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8504:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:19"
																		},
																		"nativeSrc": "8504:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8522:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8501:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:19"
																},
																"nativeSrc": "8501:25:19",
																"nodeType": "YulFunctionCall",
																"src": "8501:25:19"
															},
															"nativeSrc": "8498:112:19",
															"nodeType": "YulIf",
															"src": "8498:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8656:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8661:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8666:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8619:36:19",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:19"
																},
																"nativeSrc": "8619:54:19",
																"nodeType": "YulFunctionCall",
																"src": "8619:54:19"
															},
															"nativeSrc": "8619:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8256:423:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8312:3:19",
														"nodeType": "YulTypedName",
														"src": "8312:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8317:6:19",
														"nodeType": "YulTypedName",
														"src": "8317:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8325:3:19",
														"nodeType": "YulTypedName",
														"src": "8325:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8333:5:19",
														"nodeType": "YulTypedName",
														"src": "8333:5:19",
														"type": ""
													}
												],
												"src": "8256:423:19"
											},
											{
												"body": {
													"nativeSrc": "8759:277:19",
													"nodeType": "YulBlock",
													"src": "8759:277:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "8808:83:19",
																"nodeType": "YulBlock",
																"src": "8808:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8810:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:19"
																			},
																			"nativeSrc": "8810:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:19"
																		},
																		"nativeSrc": "8810:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8787:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8795:4:19",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8783:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:19"
																				},
																				"nativeSrc": "8783:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8802:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8779:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:19"
																		},
																		"nativeSrc": "8779:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8772:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:19"
																},
																"nativeSrc": "8772:35:19",
																"nodeType": "YulFunctionCall",
																"src": "8772:35:19"
															},
															"nativeSrc": "8769:122:19",
															"nodeType": "YulIf",
															"src": "8769:122:19"
														},
														{
															"nativeSrc": "8900:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8927:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8914:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:19"
																},
																"nativeSrc": "8914:20:19",
																"nodeType": "YulFunctionCall",
																"src": "8914:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8904:6:19",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8943:87:19",
															"nodeType": "YulAssignment",
															"src": "8943:87:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9003:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9011:4:19",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8999:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:19"
																		},
																		"nativeSrc": "8999:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9018:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9026:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8952:46:19",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:19"
																},
																"nativeSrc": "8952:78:19",
																"nodeType": "YulFunctionCall",
																"src": "8952:78:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8943:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8698:338:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8737:6:19",
														"nodeType": "YulTypedName",
														"src": "8737:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8745:3:19",
														"nodeType": "YulTypedName",
														"src": "8745:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8753:5:19",
														"nodeType": "YulTypedName",
														"src": "8753:5:19",
														"type": ""
													}
												],
												"src": "8698:338:19"
											},
											{
												"body": {
													"nativeSrc": "9168:817:19",
													"nodeType": "YulBlock",
													"src": "9168:817:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "9215:83:19",
																"nodeType": "YulBlock",
																"src": "9215:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9217:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:19"
																			},
																			"nativeSrc": "9217:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:19"
																		},
																		"nativeSrc": "9217:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9189:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9198:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9185:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:19"
																		},
																		"nativeSrc": "9185:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9210:3:19",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9181:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:19"
																},
																"nativeSrc": "9181:33:19",
																"nodeType": "YulFunctionCall",
																"src": "9181:33:19"
															},
															"nativeSrc": "9178:120:19",
															"nodeType": "YulIf",
															"src": "9178:120:19"
														},
														{
															"nativeSrc": "9308:117:19",
															"nodeType": "YulBlock",
															"src": "9308:117:19",
															"statements": [
																{
																	"nativeSrc": "9323:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9337:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9327:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9352:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9352:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9387:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9398:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9383:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:19"
																				},
																				"nativeSrc": "9383:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9407:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9362:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:19"
																		},
																		"nativeSrc": "9362:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9352:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9435:118:19",
															"nodeType": "YulBlock",
															"src": "9435:118:19",
															"statements": [
																{
																	"nativeSrc": "9450:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9464:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9454:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9480:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9480:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9515:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9526:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9511:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:19"
																				},
																				"nativeSrc": "9511:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9535:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9490:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:19"
																		},
																		"nativeSrc": "9490:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9480:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9563:118:19",
															"nodeType": "YulBlock",
															"src": "9563:118:19",
															"statements": [
																{
																	"nativeSrc": "9578:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9592:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9582:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9608:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9608:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9643:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9654:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9639:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:19"
																				},
																				"nativeSrc": "9639:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9663:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9618:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:19"
																		},
																		"nativeSrc": "9618:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9608:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9691:287:19",
															"nodeType": "YulBlock",
															"src": "9691:287:19",
															"statements": [
																{
																	"nativeSrc": "9706:46:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9737:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9748:2:19",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:19",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9733:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:19"
																				},
																				"nativeSrc": "9733:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9720:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:19"
																		},
																		"nativeSrc": "9720:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9710:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9799:83:19",
																		"nodeType": "YulBlock",
																		"src": "9799:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9801:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:19"
																					},
																					"nativeSrc": "9801:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:19"
																				},
																				"nativeSrc": "9801:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9771:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9779:18:19",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9768:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:19"
																		},
																		"nativeSrc": "9768:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:19"
																	},
																	"nativeSrc": "9765:117:19",
																	"nodeType": "YulIf",
																	"src": "9765:117:19"
																},
																{
																	"nativeSrc": "9896:72:19",
																	"nodeType": "YulAssignment",
																	"src": "9896:72:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9940:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9951:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9936:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:19"
																				},
																				"nativeSrc": "9936:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9960:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9906:29:19",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:19"
																		},
																		"nativeSrc": "9906:62:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:19"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9896:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9042:943:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9114:9:19",
														"nodeType": "YulTypedName",
														"src": "9114:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9125:7:19",
														"nodeType": "YulTypedName",
														"src": "9125:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9137:6:19",
														"nodeType": "YulTypedName",
														"src": "9137:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9145:6:19",
														"nodeType": "YulTypedName",
														"src": "9145:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9153:6:19",
														"nodeType": "YulTypedName",
														"src": "9153:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9161:6:19",
														"nodeType": "YulTypedName",
														"src": "9161:6:19",
														"type": ""
													}
												],
												"src": "9042:943:19"
											},
											{
												"body": {
													"nativeSrc": "10074:391:19",
													"nodeType": "YulBlock",
													"src": "10074:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "10120:83:19",
																"nodeType": "YulBlock",
																"src": "10120:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10122:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:19"
																			},
																			"nativeSrc": "10122:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:19"
																		},
																		"nativeSrc": "10122:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10095:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10104:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10091:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:19"
																		},
																		"nativeSrc": "10091:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10116:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10087:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:19"
																},
																"nativeSrc": "10087:32:19",
																"nodeType": "YulFunctionCall",
																"src": "10087:32:19"
															},
															"nativeSrc": "10084:119:19",
															"nodeType": "YulIf",
															"src": "10084:119:19"
														},
														{
															"nativeSrc": "10213:117:19",
															"nodeType": "YulBlock",
															"src": "10213:117:19",
															"statements": [
																{
																	"nativeSrc": "10228:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10242:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10232:6:19",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10257:63:19",
																	"nodeType": "YulAssignment",
																	"src": "10257:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10292:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10303:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10288:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:19"
																				},
																				"nativeSrc": "10288:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10312:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10267:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:19"
																		},
																		"nativeSrc": "10267:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10257:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10340:118:19",
															"nodeType": "YulBlock",
															"src": "10340:118:19",
															"statements": [
																{
																	"nativeSrc": "10355:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10369:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10359:6:19",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10385:63:19",
																	"nodeType": "YulAssignment",
																	"src": "10385:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10420:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10431:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10416:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:19"
																				},
																				"nativeSrc": "10416:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10440:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10395:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:19"
																		},
																		"nativeSrc": "10395:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10385:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9991:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10036:9:19",
														"nodeType": "YulTypedName",
														"src": "10036:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10047:7:19",
														"nodeType": "YulTypedName",
														"src": "10047:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10059:6:19",
														"nodeType": "YulTypedName",
														"src": "10059:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10067:6:19",
														"nodeType": "YulTypedName",
														"src": "10067:6:19",
														"type": ""
													}
												],
												"src": "9991:474:19"
											},
											{
												"body": {
													"nativeSrc": "10499:152:19",
													"nodeType": "YulBlock",
													"src": "10499:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10516:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10519:77:19",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10509:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:19"
																},
																"nativeSrc": "10509:88:19",
																"nodeType": "YulFunctionCall",
																"src": "10509:88:19"
															},
															"nativeSrc": "10509:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10613:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10616:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10606:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:19"
																},
																"nativeSrc": "10606:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10606:15:19"
															},
															"nativeSrc": "10606:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10637:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10640:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10630:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:19"
																},
																"nativeSrc": "10630:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10630:15:19"
															},
															"nativeSrc": "10630:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10471:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:19"
											},
											{
												"body": {
													"nativeSrc": "10708:269:19",
													"nodeType": "YulBlock",
													"src": "10708:269:19",
													"statements": [
														{
															"nativeSrc": "10718:22:19",
															"nodeType": "YulAssignment",
															"src": "10718:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10732:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10738:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10728:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:19"
																},
																"nativeSrc": "10728:12:19",
																"nodeType": "YulFunctionCall",
																"src": "10728:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10718:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:19"
																}
															]
														},
														{
															"nativeSrc": "10749:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10779:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10785:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10775:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:19"
																},
																"nativeSrc": "10775:12:19",
																"nodeType": "YulFunctionCall",
																"src": "10775:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10753:18:19",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10826:51:19",
																"nodeType": "YulBlock",
																"src": "10826:51:19",
																"statements": [
																	{
																		"nativeSrc": "10840:27:19",
																		"nodeType": "YulAssignment",
																		"src": "10840:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10854:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10862:4:19",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10850:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:19"
																			},
																			"nativeSrc": "10850:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10840:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10806:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10799:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:19"
																},
																"nativeSrc": "10799:26:19",
																"nodeType": "YulFunctionCall",
																"src": "10799:26:19"
															},
															"nativeSrc": "10796:81:19",
															"nodeType": "YulIf",
															"src": "10796:81:19"
														},
														{
															"body": {
																"nativeSrc": "10929:42:19",
																"nodeType": "YulBlock",
																"src": "10929:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10943:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:19"
																			},
																			"nativeSrc": "10943:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:19"
																		},
																		"nativeSrc": "10943:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10893:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10916:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10924:2:19",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10913:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:19"
																		},
																		"nativeSrc": "10913:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10890:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:19"
																},
																"nativeSrc": "10890:38:19",
																"nodeType": "YulFunctionCall",
																"src": "10890:38:19"
															},
															"nativeSrc": "10887:84:19",
															"nodeType": "YulIf",
															"src": "10887:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10657:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10692:4:19",
														"nodeType": "YulTypedName",
														"src": "10692:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10701:6:19",
														"nodeType": "YulTypedName",
														"src": "10701:6:19",
														"type": ""
													}
												],
												"src": "10657:320:19"
											},
											{
												"body": {
													"nativeSrc": "11137:288:19",
													"nodeType": "YulBlock",
													"src": "11137:288:19",
													"statements": [
														{
															"nativeSrc": "11147:26:19",
															"nodeType": "YulAssignment",
															"src": "11147:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11159:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "11159:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11170:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11170:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11155:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11155:3:19"
																},
																"nativeSrc": "11155:18:19",
																"nodeType": "YulFunctionCall",
																"src": "11155:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11147:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11147:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11227:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11227:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11240:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11240:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11251:1:19",
																				"nodeType": "YulLiteral",
																				"src": "11251:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11236:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11236:3:19"
																		},
																		"nativeSrc": "11236:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11236:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11183:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "11183:43:19"
																},
																"nativeSrc": "11183:71:19",
																"nodeType": "YulFunctionCall",
																"src": "11183:71:19"
															},
															"nativeSrc": "11183:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "11183:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11308:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11308:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11321:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11321:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11332:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11332:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11317:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11317:3:19"
																		},
																		"nativeSrc": "11317:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11317:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11264:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "11264:43:19"
																},
																"nativeSrc": "11264:72:19",
																"nodeType": "YulFunctionCall",
																"src": "11264:72:19"
															},
															"nativeSrc": "11264:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "11264:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11390:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11390:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11403:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11403:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11414:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11414:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11399:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11399:3:19"
																		},
																		"nativeSrc": "11399:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11399:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11346:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "11346:43:19"
																},
																"nativeSrc": "11346:72:19",
																"nodeType": "YulFunctionCall",
																"src": "11346:72:19"
															},
															"nativeSrc": "11346:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "11346:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "10983:442:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11093:9:19",
														"nodeType": "YulTypedName",
														"src": "11093:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11105:6:19",
														"nodeType": "YulTypedName",
														"src": "11105:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11113:6:19",
														"nodeType": "YulTypedName",
														"src": "11113:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11121:6:19",
														"nodeType": "YulTypedName",
														"src": "11121:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11132:4:19",
														"nodeType": "YulTypedName",
														"src": "11132:4:19",
														"type": ""
													}
												],
												"src": "10983:442:19"
											},
											{
												"body": {
													"nativeSrc": "11498:241:19",
													"nodeType": "YulBlock",
													"src": "11498:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "11603:22:19",
																"nodeType": "YulBlock",
																"src": "11603:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "11605:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "11605:16:19"
																			},
																			"nativeSrc": "11605:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11605:18:19"
																		},
																		"nativeSrc": "11605:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11605:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11575:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11575:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11583:18:19",
																		"nodeType": "YulLiteral",
																		"src": "11583:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11572:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "11572:2:19"
																},
																"nativeSrc": "11572:30:19",
																"nodeType": "YulFunctionCall",
																"src": "11572:30:19"
															},
															"nativeSrc": "11569:56:19",
															"nodeType": "YulIf",
															"src": "11569:56:19"
														},
														{
															"nativeSrc": "11635:37:19",
															"nodeType": "YulAssignment",
															"src": "11635:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11665:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11665:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "11643:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "11643:21:19"
																},
																"nativeSrc": "11643:29:19",
																"nodeType": "YulFunctionCall",
																"src": "11643:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11635:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11635:4:19"
																}
															]
														},
														{
															"nativeSrc": "11709:23:19",
															"nodeType": "YulAssignment",
															"src": "11709:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "11721:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "11721:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11727:4:19",
																		"nodeType": "YulLiteral",
																		"src": "11727:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11717:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11717:3:19"
																},
																"nativeSrc": "11717:15:19",
																"nodeType": "YulFunctionCall",
																"src": "11717:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11709:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11709:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "11431:308:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "11482:6:19",
														"nodeType": "YulTypedName",
														"src": "11482:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "11493:4:19",
														"nodeType": "YulTypedName",
														"src": "11493:4:19",
														"type": ""
													}
												],
												"src": "11431:308:19"
											},
											{
												"body": {
													"nativeSrc": "11840:339:19",
													"nodeType": "YulBlock",
													"src": "11840:339:19",
													"statements": [
														{
															"nativeSrc": "11850:75:19",
															"nodeType": "YulAssignment",
															"src": "11850:75:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11917:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11917:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "11875:41:19",
																			"nodeType": "YulIdentifier",
																			"src": "11875:41:19"
																		},
																		"nativeSrc": "11875:49:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11875:49:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11859:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "11859:15:19"
																},
																"nativeSrc": "11859:66:19",
																"nodeType": "YulFunctionCall",
																"src": "11859:66:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11850:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "11850:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11941:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "11941:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11948:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11948:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11934:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11934:6:19"
																},
																"nativeSrc": "11934:21:19",
																"nodeType": "YulFunctionCall",
																"src": "11934:21:19"
															},
															"nativeSrc": "11934:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "11934:21:19"
														},
														{
															"nativeSrc": "11964:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "11964:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11979:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "11979:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11986:4:19",
																		"nodeType": "YulLiteral",
																		"src": "11986:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11975:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11975:3:19"
																},
																"nativeSrc": "11975:16:19",
																"nodeType": "YulFunctionCall",
																"src": "11975:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11968:3:19",
																	"nodeType": "YulTypedName",
																	"src": "11968:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12029:83:19",
																"nodeType": "YulBlock",
																"src": "12029:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "12031:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "12031:77:19"
																			},
																			"nativeSrc": "12031:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12031:79:19"
																		},
																		"nativeSrc": "12031:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "12031:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "12010:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "12010:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12015:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "12015:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12006:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12006:3:19"
																		},
																		"nativeSrc": "12006:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12006:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12024:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "12024:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12003:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "12003:2:19"
																},
																"nativeSrc": "12003:25:19",
																"nodeType": "YulFunctionCall",
																"src": "12003:25:19"
															},
															"nativeSrc": "12000:112:19",
															"nodeType": "YulIf",
															"src": "12000:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12156:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "12156:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "12161:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "12161:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12166:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "12166:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12121:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "12121:34:19"
																},
																"nativeSrc": "12121:52:19",
																"nodeType": "YulFunctionCall",
																"src": "12121:52:19"
															},
															"nativeSrc": "12121:52:19",
															"nodeType": "YulExpressionStatement",
															"src": "12121:52:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "11745:434:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "11813:3:19",
														"nodeType": "YulTypedName",
														"src": "11813:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11818:6:19",
														"nodeType": "YulTypedName",
														"src": "11818:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11826:3:19",
														"nodeType": "YulTypedName",
														"src": "11826:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11834:5:19",
														"nodeType": "YulTypedName",
														"src": "11834:5:19",
														"type": ""
													}
												],
												"src": "11745:434:19"
											},
											{
												"body": {
													"nativeSrc": "12272:282:19",
													"nodeType": "YulBlock",
													"src": "12272:282:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "12321:83:19",
																"nodeType": "YulBlock",
																"src": "12321:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "12323:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "12323:77:19"
																			},
																			"nativeSrc": "12323:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12323:79:19"
																		},
																		"nativeSrc": "12323:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "12323:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12300:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12300:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12308:4:19",
																						"nodeType": "YulLiteral",
																						"src": "12308:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12296:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12296:3:19"
																				},
																				"nativeSrc": "12296:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12296:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12315:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "12315:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12292:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12292:3:19"
																		},
																		"nativeSrc": "12292:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12292:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12285:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12285:6:19"
																},
																"nativeSrc": "12285:35:19",
																"nodeType": "YulFunctionCall",
																"src": "12285:35:19"
															},
															"nativeSrc": "12282:122:19",
															"nodeType": "YulIf",
															"src": "12282:122:19"
														},
														{
															"nativeSrc": "12413:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "12413:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12433:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "12433:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12427:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "12427:5:19"
																},
																"nativeSrc": "12427:13:19",
																"nodeType": "YulFunctionCall",
																"src": "12427:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12417:6:19",
																	"nodeType": "YulTypedName",
																	"src": "12417:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12449:99:19",
															"nodeType": "YulAssignment",
															"src": "12449:99:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12521:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "12521:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12529:4:19",
																				"nodeType": "YulLiteral",
																				"src": "12529:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12517:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12517:3:19"
																		},
																		"nativeSrc": "12517:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12517:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12536:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "12536:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12544:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "12544:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "12458:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "12458:58:19"
																},
																"nativeSrc": "12458:90:19",
																"nodeType": "YulFunctionCall",
																"src": "12458:90:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12449:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "12449:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "12199:355:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12250:6:19",
														"nodeType": "YulTypedName",
														"src": "12250:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12258:3:19",
														"nodeType": "YulTypedName",
														"src": "12258:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12266:5:19",
														"nodeType": "YulTypedName",
														"src": "12266:5:19",
														"type": ""
													}
												],
												"src": "12199:355:19"
											},
											{
												"body": {
													"nativeSrc": "12647:437:19",
													"nodeType": "YulBlock",
													"src": "12647:437:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "12693:83:19",
																"nodeType": "YulBlock",
																"src": "12693:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12695:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "12695:77:19"
																			},
																			"nativeSrc": "12695:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12695:79:19"
																		},
																		"nativeSrc": "12695:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "12695:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12668:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12668:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12677:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12677:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12664:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12664:3:19"
																		},
																		"nativeSrc": "12664:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12664:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12689:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12689:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12660:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12660:3:19"
																},
																"nativeSrc": "12660:32:19",
																"nodeType": "YulFunctionCall",
																"src": "12660:32:19"
															},
															"nativeSrc": "12657:119:19",
															"nodeType": "YulIf",
															"src": "12657:119:19"
														},
														{
															"nativeSrc": "12786:291:19",
															"nodeType": "YulBlock",
															"src": "12786:291:19",
															"statements": [
																{
																	"nativeSrc": "12801:38:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12801:38:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12825:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12825:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12836:1:19",
																						"nodeType": "YulLiteral",
																						"src": "12836:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12821:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12821:3:19"
																				},
																				"nativeSrc": "12821:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12821:17:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12815:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "12815:5:19"
																		},
																		"nativeSrc": "12815:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12815:24:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12805:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12805:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12886:83:19",
																		"nodeType": "YulBlock",
																		"src": "12886:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12888:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "12888:77:19"
																					},
																					"nativeSrc": "12888:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "12888:79:19"
																				},
																				"nativeSrc": "12888:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "12888:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12858:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "12858:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12866:18:19",
																				"nodeType": "YulLiteral",
																				"src": "12866:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12855:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "12855:2:19"
																		},
																		"nativeSrc": "12855:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12855:30:19"
																	},
																	"nativeSrc": "12852:117:19",
																	"nodeType": "YulIf",
																	"src": "12852:117:19"
																},
																{
																	"nativeSrc": "12983:84:19",
																	"nodeType": "YulAssignment",
																	"src": "12983:84:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13039:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "13039:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13050:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "13050:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13035:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "13035:3:19"
																				},
																				"nativeSrc": "13035:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "13035:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13059:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "13059:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "12993:41:19",
																			"nodeType": "YulIdentifier",
																			"src": "12993:41:19"
																		},
																		"nativeSrc": "12993:74:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12993:74:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12983:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12983:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nativeSrc": "12560:524:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12617:9:19",
														"nodeType": "YulTypedName",
														"src": "12617:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12628:7:19",
														"nodeType": "YulTypedName",
														"src": "12628:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12640:6:19",
														"nodeType": "YulTypedName",
														"src": "12640:6:19",
														"type": ""
													}
												],
												"src": "12560:524:19"
											},
											{
												"body": {
													"nativeSrc": "13144:87:19",
													"nodeType": "YulBlock",
													"src": "13144:87:19",
													"statements": [
														{
															"nativeSrc": "13154:11:19",
															"nodeType": "YulAssignment",
															"src": "13154:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "13162:3:19",
																"nodeType": "YulIdentifier",
																"src": "13162:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13154:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "13154:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13182:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13182:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "13185:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "13185:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13175:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13175:6:19"
																},
																"nativeSrc": "13175:14:19",
																"nodeType": "YulFunctionCall",
																"src": "13175:14:19"
															},
															"nativeSrc": "13175:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "13175:14:19"
														},
														{
															"nativeSrc": "13198:26:19",
															"nodeType": "YulAssignment",
															"src": "13198:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13216:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13216:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13219:4:19",
																		"nodeType": "YulLiteral",
																		"src": "13219:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "13206:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "13206:9:19"
																},
																"nativeSrc": "13206:18:19",
																"nodeType": "YulFunctionCall",
																"src": "13206:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13198:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "13198:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "13090:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13131:3:19",
														"nodeType": "YulTypedName",
														"src": "13131:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13139:4:19",
														"nodeType": "YulTypedName",
														"src": "13139:4:19",
														"type": ""
													}
												],
												"src": "13090:141:19"
											},
											{
												"body": {
													"nativeSrc": "13281:49:19",
													"nodeType": "YulBlock",
													"src": "13281:49:19",
													"statements": [
														{
															"nativeSrc": "13291:33:19",
															"nodeType": "YulAssignment",
															"src": "13291:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13309:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "13309:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13316:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13316:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13305:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13305:3:19"
																		},
																		"nativeSrc": "13305:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13305:14:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13321:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13321:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13301:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13301:3:19"
																},
																"nativeSrc": "13301:23:19",
																"nodeType": "YulFunctionCall",
																"src": "13301:23:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "13291:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13291:6:19"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "13237:93:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13264:5:19",
														"nodeType": "YulTypedName",
														"src": "13264:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13274:6:19",
														"nodeType": "YulTypedName",
														"src": "13274:6:19",
														"type": ""
													}
												],
												"src": "13237:93:19"
											},
											{
												"body": {
													"nativeSrc": "13389:54:19",
													"nodeType": "YulBlock",
													"src": "13389:54:19",
													"statements": [
														{
															"nativeSrc": "13399:37:19",
															"nodeType": "YulAssignment",
															"src": "13399:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "13424:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "13424:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13430:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "13430:5:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "13420:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13420:3:19"
																},
																"nativeSrc": "13420:16:19",
																"nodeType": "YulFunctionCall",
																"src": "13420:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13399:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "13399:8:19"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "13336:107:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "13364:4:19",
														"nodeType": "YulTypedName",
														"src": "13364:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "13370:5:19",
														"nodeType": "YulTypedName",
														"src": "13370:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13380:8:19",
														"nodeType": "YulTypedName",
														"src": "13380:8:19",
														"type": ""
													}
												],
												"src": "13336:107:19"
											},
											{
												"body": {
													"nativeSrc": "13525:317:19",
													"nodeType": "YulBlock",
													"src": "13525:317:19",
													"statements": [
														{
															"nativeSrc": "13535:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "13535:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "13556:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "13556:10:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13568:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13568:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13552:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13552:3:19"
																},
																"nativeSrc": "13552:18:19",
																"nodeType": "YulFunctionCall",
																"src": "13552:18:19"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "13539:9:19",
																	"nodeType": "YulTypedName",
																	"src": "13539:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13579:109:19",
															"nodeType": "YulVariableDeclaration",
															"src": "13579:109:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "13610:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "13610:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13621:66:19",
																		"nodeType": "YulLiteral",
																		"src": "13621:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "13591:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "13591:18:19"
																},
																"nativeSrc": "13591:97:19",
																"nodeType": "YulFunctionCall",
																"src": "13591:97:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "13583:4:19",
																	"nodeType": "YulTypedName",
																	"src": "13583:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13697:51:19",
															"nodeType": "YulAssignment",
															"src": "13697:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "13728:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "13728:9:19"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "13739:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "13739:8:19"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "13709:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "13709:18:19"
																},
																"nativeSrc": "13709:39:19",
																"nodeType": "YulFunctionCall",
																"src": "13709:39:19"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "13697:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "13697:8:19"
																}
															]
														},
														{
															"nativeSrc": "13757:30:19",
															"nodeType": "YulAssignment",
															"src": "13757:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13770:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "13770:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "13781:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "13781:4:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "13777:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13777:3:19"
																		},
																		"nativeSrc": "13777:9:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13777:9:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13766:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13766:3:19"
																},
																"nativeSrc": "13766:21:19",
																"nodeType": "YulFunctionCall",
																"src": "13766:21:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13757:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "13757:5:19"
																}
															]
														},
														{
															"nativeSrc": "13796:40:19",
															"nodeType": "YulAssignment",
															"src": "13796:40:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13809:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "13809:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "13820:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "13820:8:19"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "13830:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "13830:4:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13816:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13816:3:19"
																		},
																		"nativeSrc": "13816:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13816:19:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "13806:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "13806:2:19"
																},
																"nativeSrc": "13806:30:19",
																"nodeType": "YulFunctionCall",
																"src": "13806:30:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "13796:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13796:6:19"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "13449:393:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13486:5:19",
														"nodeType": "YulTypedName",
														"src": "13486:5:19",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "13493:10:19",
														"nodeType": "YulTypedName",
														"src": "13493:10:19",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "13505:8:19",
														"nodeType": "YulTypedName",
														"src": "13505:8:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13518:6:19",
														"nodeType": "YulTypedName",
														"src": "13518:6:19",
														"type": ""
													}
												],
												"src": "13449:393:19"
											},
											{
												"body": {
													"nativeSrc": "13880:28:19",
													"nodeType": "YulBlock",
													"src": "13880:28:19",
													"statements": [
														{
															"nativeSrc": "13890:12:19",
															"nodeType": "YulAssignment",
															"src": "13890:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "13897:5:19",
																"nodeType": "YulIdentifier",
																"src": "13897:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13890:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13890:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "13848:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13866:5:19",
														"nodeType": "YulTypedName",
														"src": "13866:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13876:3:19",
														"nodeType": "YulTypedName",
														"src": "13876:3:19",
														"type": ""
													}
												],
												"src": "13848:60:19"
											},
											{
												"body": {
													"nativeSrc": "13974:82:19",
													"nodeType": "YulBlock",
													"src": "13974:82:19",
													"statements": [
														{
															"nativeSrc": "13984:66:19",
															"nodeType": "YulAssignment",
															"src": "13984:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14042:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "14042:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "14024:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "14024:17:19"
																				},
																				"nativeSrc": "14024:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "14024:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "14015:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "14015:8:19"
																		},
																		"nativeSrc": "14015:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14015:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13997:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "13997:17:19"
																},
																"nativeSrc": "13997:53:19",
																"nodeType": "YulFunctionCall",
																"src": "13997:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13984:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "13984:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "13914:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13954:5:19",
														"nodeType": "YulTypedName",
														"src": "13954:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "13964:9:19",
														"nodeType": "YulTypedName",
														"src": "13964:9:19",
														"type": ""
													}
												],
												"src": "13914:142:19"
											},
											{
												"body": {
													"nativeSrc": "14109:28:19",
													"nodeType": "YulBlock",
													"src": "14109:28:19",
													"statements": [
														{
															"nativeSrc": "14119:12:19",
															"nodeType": "YulAssignment",
															"src": "14119:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "14126:5:19",
																"nodeType": "YulIdentifier",
																"src": "14126:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14119:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14119:3:19"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "14062:75:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14095:5:19",
														"nodeType": "YulTypedName",
														"src": "14095:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14105:3:19",
														"nodeType": "YulTypedName",
														"src": "14105:3:19",
														"type": ""
													}
												],
												"src": "14062:75:19"
											},
											{
												"body": {
													"nativeSrc": "14219:193:19",
													"nodeType": "YulBlock",
													"src": "14219:193:19",
													"statements": [
														{
															"nativeSrc": "14229:63:19",
															"nodeType": "YulVariableDeclaration",
															"src": "14229:63:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "14284:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "14284:7:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "14253:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "14253:30:19"
																},
																"nativeSrc": "14253:39:19",
																"nodeType": "YulFunctionCall",
																"src": "14253:39:19"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "14233:16:19",
																	"nodeType": "YulTypedName",
																	"src": "14233:16:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14308:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "14308:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "14348:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "14348:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "14342:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "14342:5:19"
																				},
																				"nativeSrc": "14342:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "14342:11:19"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "14355:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "14355:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "14387:16:19",
																						"nodeType": "YulIdentifier",
																						"src": "14387:16:19"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "14363:23:19",
																					"nodeType": "YulIdentifier",
																					"src": "14363:23:19"
																				},
																				"nativeSrc": "14363:41:19",
																				"nodeType": "YulFunctionCall",
																				"src": "14363:41:19"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "14314:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "14314:27:19"
																		},
																		"nativeSrc": "14314:91:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14314:91:19"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "14301:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14301:6:19"
																},
																"nativeSrc": "14301:105:19",
																"nodeType": "YulFunctionCall",
																"src": "14301:105:19"
															},
															"nativeSrc": "14301:105:19",
															"nodeType": "YulExpressionStatement",
															"src": "14301:105:19"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "14143:269:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14196:4:19",
														"nodeType": "YulTypedName",
														"src": "14196:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "14202:6:19",
														"nodeType": "YulTypedName",
														"src": "14202:6:19",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "14210:7:19",
														"nodeType": "YulTypedName",
														"src": "14210:7:19",
														"type": ""
													}
												],
												"src": "14143:269:19"
											},
											{
												"body": {
													"nativeSrc": "14467:24:19",
													"nodeType": "YulBlock",
													"src": "14467:24:19",
													"statements": [
														{
															"nativeSrc": "14477:8:19",
															"nodeType": "YulAssignment",
															"src": "14477:8:19",
															"value": {
																"kind": "number",
																"nativeSrc": "14484:1:19",
																"nodeType": "YulLiteral",
																"src": "14484:1:19",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14477:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14477:3:19"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "14418:73:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14463:3:19",
														"nodeType": "YulTypedName",
														"src": "14463:3:19",
														"type": ""
													}
												],
												"src": "14418:73:19"
											},
											{
												"body": {
													"nativeSrc": "14550:136:19",
													"nodeType": "YulBlock",
													"src": "14550:136:19",
													"statements": [
														{
															"nativeSrc": "14560:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "14560:46:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "14574:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "14574:30:19"
																},
																"nativeSrc": "14574:32:19",
																"nodeType": "YulFunctionCall",
																"src": "14574:32:19"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "14564:6:19",
																	"nodeType": "YulTypedName",
																	"src": "14564:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14659:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "14659:4:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "14665:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14665:6:19"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "14673:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14673:6:19"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "14615:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14615:43:19"
																},
																"nativeSrc": "14615:65:19",
																"nodeType": "YulFunctionCall",
																"src": "14615:65:19"
															},
															"nativeSrc": "14615:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "14615:65:19"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "14497:189:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14536:4:19",
														"nodeType": "YulTypedName",
														"src": "14536:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "14542:6:19",
														"nodeType": "YulTypedName",
														"src": "14542:6:19",
														"type": ""
													}
												],
												"src": "14497:189:19"
											},
											{
												"body": {
													"nativeSrc": "14742:136:19",
													"nodeType": "YulBlock",
													"src": "14742:136:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "14809:63:19",
																"nodeType": "YulBlock",
																"src": "14809:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "14853:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "14853:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14860:1:19",
																					"nodeType": "YulLiteral",
																					"src": "14860:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "14823:29:19",
																				"nodeType": "YulIdentifier",
																				"src": "14823:29:19"
																			},
																			"nativeSrc": "14823:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "14823:39:19"
																		},
																		"nativeSrc": "14823:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "14823:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "14762:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "14762:5:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "14769:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14769:3:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "14759:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "14759:2:19"
																},
																"nativeSrc": "14759:14:19",
																"nodeType": "YulFunctionCall",
																"src": "14759:14:19"
															},
															"nativeSrc": "14752:120:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "14774:26:19",
																"nodeType": "YulBlock",
																"src": "14774:26:19",
																"statements": [
																	{
																		"nativeSrc": "14776:22:19",
																		"nodeType": "YulAssignment",
																		"src": "14776:22:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "14789:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "14789:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14796:1:19",
																					"nodeType": "YulLiteral",
																					"src": "14796:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14785:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "14785:3:19"
																			},
																			"nativeSrc": "14785:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "14785:13:19"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "14776:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "14776:5:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "14756:2:19",
																"nodeType": "YulBlock",
																"src": "14756:2:19",
																"statements": []
															},
															"src": "14752:120:19"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "14692:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "14730:5:19",
														"nodeType": "YulTypedName",
														"src": "14730:5:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14737:3:19",
														"nodeType": "YulTypedName",
														"src": "14737:3:19",
														"type": ""
													}
												],
												"src": "14692:186:19"
											},
											{
												"body": {
													"nativeSrc": "14963:464:19",
													"nodeType": "YulBlock",
													"src": "14963:464:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "14989:431:19",
																"nodeType": "YulBlock",
																"src": "14989:431:19",
																"statements": [
																	{
																		"nativeSrc": "15003:54:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15003:54:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "15051:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "15051:5:19"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "15019:31:19",
																				"nodeType": "YulIdentifier",
																				"src": "15019:31:19"
																			},
																			"nativeSrc": "15019:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "15019:38:19"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "15007:8:19",
																				"nodeType": "YulTypedName",
																				"src": "15007:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15070:63:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15070:63:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "15093:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "15093:8:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "15121:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "15121:10:19"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "15103:17:19",
																						"nodeType": "YulIdentifier",
																						"src": "15103:17:19"
																					},
																					"nativeSrc": "15103:29:19",
																					"nodeType": "YulFunctionCall",
																					"src": "15103:29:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15089:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "15089:3:19"
																			},
																			"nativeSrc": "15089:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "15089:44:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "15074:11:19",
																				"nodeType": "YulTypedName",
																				"src": "15074:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15290:27:19",
																			"nodeType": "YulBlock",
																			"src": "15290:27:19",
																			"statements": [
																				{
																					"nativeSrc": "15292:23:19",
																					"nodeType": "YulAssignment",
																					"src": "15292:23:19",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "15307:8:19",
																						"nodeType": "YulIdentifier",
																						"src": "15307:8:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "15292:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "15292:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "15274:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "15274:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15286:2:19",
																					"nodeType": "YulLiteral",
																					"src": "15286:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "15271:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "15271:2:19"
																			},
																			"nativeSrc": "15271:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "15271:18:19"
																		},
																		"nativeSrc": "15268:49:19",
																		"nodeType": "YulIf",
																		"src": "15268:49:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "15359:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "15359:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "15376:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "15376:8:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "15404:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "15404:3:19"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "15386:17:19",
																								"nodeType": "YulIdentifier",
																								"src": "15386:17:19"
																							},
																							"nativeSrc": "15386:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "15386:22:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "15372:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "15372:3:19"
																					},
																					"nativeSrc": "15372:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "15372:37:19"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "15330:28:19",
																				"nodeType": "YulIdentifier",
																				"src": "15330:28:19"
																			},
																			"nativeSrc": "15330:80:19",
																			"nodeType": "YulFunctionCall",
																			"src": "15330:80:19"
																		},
																		"nativeSrc": "15330:80:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "15330:80:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "14980:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14980:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14985:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14985:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14977:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "14977:2:19"
																},
																"nativeSrc": "14977:11:19",
																"nodeType": "YulFunctionCall",
																"src": "14977:11:19"
															},
															"nativeSrc": "14974:446:19",
															"nodeType": "YulIf",
															"src": "14974:446:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "14884:543:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "14939:5:19",
														"nodeType": "YulTypedName",
														"src": "14939:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "14946:3:19",
														"nodeType": "YulTypedName",
														"src": "14946:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "14951:10:19",
														"nodeType": "YulTypedName",
														"src": "14951:10:19",
														"type": ""
													}
												],
												"src": "14884:543:19"
											},
											{
												"body": {
													"nativeSrc": "15496:54:19",
													"nodeType": "YulBlock",
													"src": "15496:54:19",
													"statements": [
														{
															"nativeSrc": "15506:37:19",
															"nodeType": "YulAssignment",
															"src": "15506:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "15531:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "15531:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15537:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "15537:5:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "15527:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15527:3:19"
																},
																"nativeSrc": "15527:16:19",
																"nodeType": "YulFunctionCall",
																"src": "15527:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15506:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "15506:8:19"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "15433:117:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "15471:4:19",
														"nodeType": "YulTypedName",
														"src": "15471:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "15477:5:19",
														"nodeType": "YulTypedName",
														"src": "15477:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15487:8:19",
														"nodeType": "YulTypedName",
														"src": "15487:8:19",
														"type": ""
													}
												],
												"src": "15433:117:19"
											},
											{
												"body": {
													"nativeSrc": "15607:118:19",
													"nodeType": "YulBlock",
													"src": "15607:118:19",
													"statements": [
														{
															"nativeSrc": "15617:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "15617:68:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "15666:1:19",
																						"nodeType": "YulLiteral",
																						"src": "15666:1:19",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "15669:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "15669:5:19"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "15662:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "15662:3:19"
																				},
																				"nativeSrc": "15662:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "15662:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "15681:1:19",
																						"nodeType": "YulLiteral",
																						"src": "15681:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "15677:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "15677:3:19"
																				},
																				"nativeSrc": "15677:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "15677:6:19"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "15633:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "15633:28:19"
																		},
																		"nativeSrc": "15633:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15633:51:19"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "15629:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15629:3:19"
																},
																"nativeSrc": "15629:56:19",
																"nodeType": "YulFunctionCall",
																"src": "15629:56:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "15621:4:19",
																	"nodeType": "YulTypedName",
																	"src": "15621:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15694:25:19",
															"nodeType": "YulAssignment",
															"src": "15694:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15708:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "15708:4:19"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "15714:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "15714:4:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15704:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15704:3:19"
																},
																"nativeSrc": "15704:15:19",
																"nodeType": "YulFunctionCall",
																"src": "15704:15:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15694:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15694:6:19"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "15556:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "15584:4:19",
														"nodeType": "YulTypedName",
														"src": "15584:4:19",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "15590:5:19",
														"nodeType": "YulTypedName",
														"src": "15590:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15600:6:19",
														"nodeType": "YulTypedName",
														"src": "15600:6:19",
														"type": ""
													}
												],
												"src": "15556:169:19"
											},
											{
												"body": {
													"nativeSrc": "15811:214:19",
													"nodeType": "YulBlock",
													"src": "15811:214:19",
													"statements": [
														{
															"nativeSrc": "15944:37:19",
															"nodeType": "YulAssignment",
															"src": "15944:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15971:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "15971:4:19"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "15977:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15977:3:19"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "15952:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "15952:18:19"
																},
																"nativeSrc": "15952:29:19",
																"nodeType": "YulFunctionCall",
																"src": "15952:29:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15944:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "15944:4:19"
																}
															]
														},
														{
															"nativeSrc": "15990:29:19",
															"nodeType": "YulAssignment",
															"src": "15990:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16001:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "16001:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16011:1:19",
																				"nodeType": "YulLiteral",
																				"src": "16011:1:19",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "16014:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "16014:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "16007:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16007:3:19"
																		},
																		"nativeSrc": "16007:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16007:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15998:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "15998:2:19"
																},
																"nativeSrc": "15998:21:19",
																"nodeType": "YulFunctionCall",
																"src": "15998:21:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "15990:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "15990:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "15730:295:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "15792:4:19",
														"nodeType": "YulTypedName",
														"src": "15792:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15798:3:19",
														"nodeType": "YulTypedName",
														"src": "15798:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "15806:4:19",
														"nodeType": "YulTypedName",
														"src": "15806:4:19",
														"type": ""
													}
												],
												"src": "15730:295:19"
											},
											{
												"body": {
													"nativeSrc": "16122:1303:19",
													"nodeType": "YulBlock",
													"src": "16122:1303:19",
													"statements": [
														{
															"nativeSrc": "16133:51:19",
															"nodeType": "YulVariableDeclaration",
															"src": "16133:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "16180:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16180:3:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16147:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "16147:32:19"
																},
																"nativeSrc": "16147:37:19",
																"nodeType": "YulFunctionCall",
																"src": "16147:37:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "16137:6:19",
																	"nodeType": "YulTypedName",
																	"src": "16137:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16269:22:19",
																"nodeType": "YulBlock",
																"src": "16269:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "16271:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "16271:16:19"
																			},
																			"nativeSrc": "16271:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "16271:18:19"
																		},
																		"nativeSrc": "16271:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "16271:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16241:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16241:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16249:18:19",
																		"nodeType": "YulLiteral",
																		"src": "16249:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16238:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "16238:2:19"
																},
																"nativeSrc": "16238:30:19",
																"nodeType": "YulFunctionCall",
																"src": "16238:30:19"
															},
															"nativeSrc": "16235:56:19",
															"nodeType": "YulIf",
															"src": "16235:56:19"
														},
														{
															"nativeSrc": "16301:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "16301:52:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "16347:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "16347:4:19"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "16341:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "16341:5:19"
																		},
																		"nativeSrc": "16341:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16341:11:19"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "16315:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "16315:25:19"
																},
																"nativeSrc": "16315:38:19",
																"nodeType": "YulFunctionCall",
																"src": "16315:38:19"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "16305:6:19",
																	"nodeType": "YulTypedName",
																	"src": "16305:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16446:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "16446:4:19"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "16452:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16452:6:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "16460:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16460:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "16400:45:19",
																	"nodeType": "YulIdentifier",
																	"src": "16400:45:19"
																},
																"nativeSrc": "16400:67:19",
																"nodeType": "YulFunctionCall",
																"src": "16400:67:19"
															},
															"nativeSrc": "16400:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "16400:67:19"
														},
														{
															"nativeSrc": "16477:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "16477:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "16494:1:19",
																"nodeType": "YulLiteral",
																"src": "16494:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "16481:9:19",
																	"nodeType": "YulTypedName",
																	"src": "16481:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16505:17:19",
															"nodeType": "YulAssignment",
															"src": "16505:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "16518:4:19",
																"nodeType": "YulLiteral",
																"src": "16518:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "16505:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "16505:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "16569:611:19",
																		"nodeType": "YulBlock",
																		"src": "16569:611:19",
																		"statements": [
																			{
																				"nativeSrc": "16583:37:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16583:37:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "16602:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "16602:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "16614:4:19",
																									"nodeType": "YulLiteral",
																									"src": "16614:4:19",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "16610:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "16610:3:19"
																							},
																							"nativeSrc": "16610:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "16610:9:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "16598:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "16598:3:19"
																					},
																					"nativeSrc": "16598:22:19",
																					"nodeType": "YulFunctionCall",
																					"src": "16598:22:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "16587:7:19",
																						"nodeType": "YulTypedName",
																						"src": "16587:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "16634:51:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16634:51:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16680:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "16680:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "16648:31:19",
																						"nodeType": "YulIdentifier",
																						"src": "16648:31:19"
																					},
																					"nativeSrc": "16648:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "16648:37:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "16638:6:19",
																						"nodeType": "YulTypedName",
																						"src": "16638:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "16698:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16698:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "16707:1:19",
																					"nodeType": "YulLiteral",
																					"src": "16707:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "16702:1:19",
																						"nodeType": "YulTypedName",
																						"src": "16702:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16766:163:19",
																					"nodeType": "YulBlock",
																					"src": "16766:163:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16791:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "16791:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "16809:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "16809:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "16814:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "16814:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "16805:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "16805:3:19"
																												},
																												"nativeSrc": "16805:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "16805:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "16799:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "16799:5:19"
																										},
																										"nativeSrc": "16799:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "16799:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "16784:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "16784:6:19"
																								},
																								"nativeSrc": "16784:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "16784:42:19"
																							},
																							"nativeSrc": "16784:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "16784:42:19"
																						},
																						{
																							"nativeSrc": "16843:24:19",
																							"nodeType": "YulAssignment",
																							"src": "16843:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16857:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "16857:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16865:1:19",
																										"nodeType": "YulLiteral",
																										"src": "16865:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16853:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "16853:3:19"
																								},
																								"nativeSrc": "16853:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "16853:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "16843:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "16843:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "16884:31:19",
																							"nodeType": "YulAssignment",
																							"src": "16884:31:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "16901:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "16901:9:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16912:2:19",
																										"nodeType": "YulLiteral",
																										"src": "16912:2:19",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16897:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "16897:3:19"
																								},
																								"nativeSrc": "16897:18:19",
																								"nodeType": "YulFunctionCall",
																								"src": "16897:18:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "16884:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "16884:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "16732:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "16732:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "16735:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "16735:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "16729:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "16729:2:19"
																					},
																					"nativeSrc": "16729:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "16729:14:19"
																				},
																				"nativeSrc": "16721:208:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "16744:21:19",
																					"nodeType": "YulBlock",
																					"src": "16744:21:19",
																					"statements": [
																						{
																							"nativeSrc": "16746:17:19",
																							"nodeType": "YulAssignment",
																							"src": "16746:17:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "16755:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "16755:1:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16758:4:19",
																										"nodeType": "YulLiteral",
																										"src": "16758:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16751:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "16751:3:19"
																								},
																								"nativeSrc": "16751:12:19",
																								"nodeType": "YulFunctionCall",
																								"src": "16751:12:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "16746:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "16746:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "16725:3:19",
																					"nodeType": "YulBlock",
																					"src": "16725:3:19",
																					"statements": []
																				},
																				"src": "16721:208:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "16965:156:19",
																					"nodeType": "YulBlock",
																					"src": "16965:156:19",
																					"statements": [
																						{
																							"nativeSrc": "16983:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "16983:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17010:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "17010:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17015:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "17015:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17006:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "17006:3:19"
																										},
																										"nativeSrc": "17006:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "17006:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17000:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "17000:5:19"
																								},
																								"nativeSrc": "17000:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "17000:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "16987:9:19",
																									"nodeType": "YulTypedName",
																									"src": "16987:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17050:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "17050:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "17077:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "17077:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "17092:6:19",
																														"nodeType": "YulIdentifier",
																														"src": "17092:6:19"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "17100:4:19",
																														"nodeType": "YulLiteral",
																														"src": "17100:4:19",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "17088:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "17088:3:19"
																												},
																												"nativeSrc": "17088:17:19",
																												"nodeType": "YulFunctionCall",
																												"src": "17088:17:19"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "17058:18:19",
																											"nodeType": "YulIdentifier",
																											"src": "17058:18:19"
																										},
																										"nativeSrc": "17058:48:19",
																										"nodeType": "YulFunctionCall",
																										"src": "17058:48:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17043:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "17043:6:19"
																								},
																								"nativeSrc": "17043:64:19",
																								"nodeType": "YulFunctionCall",
																								"src": "17043:64:19"
																							},
																							"nativeSrc": "17043:64:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "17043:64:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "16948:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "16948:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "16957:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "16957:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "16945:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "16945:2:19"
																					},
																					"nativeSrc": "16945:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "16945:19:19"
																				},
																				"nativeSrc": "16942:179:19",
																				"nodeType": "YulIf",
																				"src": "16942:179:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17141:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "17141:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "17155:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "17155:6:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "17163:1:19",
																											"nodeType": "YulLiteral",
																											"src": "17163:1:19",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "17151:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "17151:3:19"
																									},
																									"nativeSrc": "17151:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "17151:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "17167:1:19",
																									"nodeType": "YulLiteral",
																									"src": "17167:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "17147:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "17147:3:19"
																							},
																							"nativeSrc": "17147:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "17147:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17134:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "17134:6:19"
																					},
																					"nativeSrc": "17134:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "17134:36:19"
																				},
																				"nativeSrc": "17134:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "17134:36:19"
																			}
																		]
																	},
																	"nativeSrc": "16562:618:19",
																	"nodeType": "YulCase",
																	"src": "16562:618:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16567:1:19",
																		"nodeType": "YulLiteral",
																		"src": "16567:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "17197:222:19",
																		"nodeType": "YulBlock",
																		"src": "17197:222:19",
																		"statements": [
																			{
																				"nativeSrc": "17211:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17211:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17224:1:19",
																					"nodeType": "YulLiteral",
																					"src": "17224:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "17215:5:19",
																						"nodeType": "YulTypedName",
																						"src": "17215:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17248:67:19",
																					"nodeType": "YulBlock",
																					"src": "17248:67:19",
																					"statements": [
																						{
																							"nativeSrc": "17266:35:19",
																							"nodeType": "YulAssignment",
																							"src": "17266:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17285:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "17285:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17290:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "17290:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17281:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "17281:3:19"
																										},
																										"nativeSrc": "17281:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "17281:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17275:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "17275:5:19"
																								},
																								"nativeSrc": "17275:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "17275:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "17266:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "17266:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "17241:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "17241:6:19"
																				},
																				"nativeSrc": "17238:77:19",
																				"nodeType": "YulIf",
																				"src": "17238:77:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17335:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "17335:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "17394:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "17394:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "17401:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "17401:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "17341:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "17341:52:19"
																							},
																							"nativeSrc": "17341:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "17341:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17328:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "17328:6:19"
																					},
																					"nativeSrc": "17328:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "17328:81:19"
																				},
																				"nativeSrc": "17328:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "17328:81:19"
																			}
																		]
																	},
																	"nativeSrc": "17189:230:19",
																	"nodeType": "YulCase",
																	"src": "17189:230:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16542:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16542:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16550:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16550:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16539:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "16539:2:19"
																},
																"nativeSrc": "16539:14:19",
																"nodeType": "YulFunctionCall",
																"src": "16539:14:19"
															},
															"nativeSrc": "16532:887:19",
															"nodeType": "YulSwitch",
															"src": "16532:887:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "16030:1395:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16111:4:19",
														"nodeType": "YulTypedName",
														"src": "16111:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "16117:3:19",
														"nodeType": "YulTypedName",
														"src": "16117:3:19",
														"type": ""
													}
												],
												"src": "16030:1395:19"
											},
											{
												"body": {
													"nativeSrc": "17537:52:19",
													"nodeType": "YulBlock",
													"src": "17537:52:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17559:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "17559:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17567:1:19",
																				"nodeType": "YulLiteral",
																				"src": "17567:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17555:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17555:3:19"
																		},
																		"nativeSrc": "17555:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17555:14:19"
																	},
																	{
																		"hexValue": "4e6f74466f756e64",
																		"kind": "string",
																		"nativeSrc": "17571:10:19",
																		"nodeType": "YulLiteral",
																		"src": "17571:10:19",
																		"type": "",
																		"value": "NotFound"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17548:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17548:6:19"
																},
																"nativeSrc": "17548:34:19",
																"nodeType": "YulFunctionCall",
																"src": "17548:34:19"
															},
															"nativeSrc": "17548:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "17548:34:19"
														}
													]
												},
												"name": "store_literal_in_memory_a896e77af5e233b52f3d565f8bd98eec0ddb0e671485cda84d2cd93d51849a53",
												"nativeSrc": "17431:158:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17529:6:19",
														"nodeType": "YulTypedName",
														"src": "17529:6:19",
														"type": ""
													}
												],
												"src": "17431:158:19"
											},
											{
												"body": {
													"nativeSrc": "17741:219:19",
													"nodeType": "YulBlock",
													"src": "17741:219:19",
													"statements": [
														{
															"nativeSrc": "17751:73:19",
															"nodeType": "YulAssignment",
															"src": "17751:73:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17817:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17817:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17822:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17822:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17758:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "17758:58:19"
																},
																"nativeSrc": "17758:66:19",
																"nodeType": "YulFunctionCall",
																"src": "17758:66:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17751:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17751:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17922:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17922:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a896e77af5e233b52f3d565f8bd98eec0ddb0e671485cda84d2cd93d51849a53",
																	"nativeSrc": "17833:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "17833:88:19"
																},
																"nativeSrc": "17833:93:19",
																"nodeType": "YulFunctionCall",
																"src": "17833:93:19"
															},
															"nativeSrc": "17833:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "17833:93:19"
														},
														{
															"nativeSrc": "17935:19:19",
															"nodeType": "YulAssignment",
															"src": "17935:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17946:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17946:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17951:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17951:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17942:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17942:3:19"
																},
																"nativeSrc": "17942:12:19",
																"nodeType": "YulFunctionCall",
																"src": "17942:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17935:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17935:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a896e77af5e233b52f3d565f8bd98eec0ddb0e671485cda84d2cd93d51849a53_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17595:365:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17729:3:19",
														"nodeType": "YulTypedName",
														"src": "17729:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17737:3:19",
														"nodeType": "YulTypedName",
														"src": "17737:3:19",
														"type": ""
													}
												],
												"src": "17595:365:19"
											},
											{
												"body": {
													"nativeSrc": "18137:248:19",
													"nodeType": "YulBlock",
													"src": "18137:248:19",
													"statements": [
														{
															"nativeSrc": "18147:26:19",
															"nodeType": "YulAssignment",
															"src": "18147:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18159:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "18159:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18170:2:19",
																		"nodeType": "YulLiteral",
																		"src": "18170:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18155:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18155:3:19"
																},
																"nativeSrc": "18155:18:19",
																"nodeType": "YulFunctionCall",
																"src": "18155:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18147:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "18147:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18194:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18194:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18205:1:19",
																				"nodeType": "YulLiteral",
																				"src": "18205:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18190:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18190:3:19"
																		},
																		"nativeSrc": "18190:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18190:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18213:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "18213:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18219:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18219:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18209:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18209:3:19"
																		},
																		"nativeSrc": "18209:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18209:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18183:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18183:6:19"
																},
																"nativeSrc": "18183:47:19",
																"nodeType": "YulFunctionCall",
																"src": "18183:47:19"
															},
															"nativeSrc": "18183:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "18183:47:19"
														},
														{
															"nativeSrc": "18239:139:19",
															"nodeType": "YulAssignment",
															"src": "18239:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18373:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "18373:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a896e77af5e233b52f3d565f8bd98eec0ddb0e671485cda84d2cd93d51849a53_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18247:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "18247:124:19"
																},
																"nativeSrc": "18247:131:19",
																"nodeType": "YulFunctionCall",
																"src": "18247:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18239:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "18239:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a896e77af5e233b52f3d565f8bd98eec0ddb0e671485cda84d2cd93d51849a53__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17966:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18117:9:19",
														"nodeType": "YulTypedName",
														"src": "18117:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18132:4:19",
														"nodeType": "YulTypedName",
														"src": "18132:4:19",
														"type": ""
													}
												],
												"src": "17966:419:19"
											},
											{
												"body": {
													"nativeSrc": "18449:40:19",
													"nodeType": "YulBlock",
													"src": "18449:40:19",
													"statements": [
														{
															"nativeSrc": "18460:22:19",
															"nodeType": "YulAssignment",
															"src": "18460:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18476:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "18476:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18470:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "18470:5:19"
																},
																"nativeSrc": "18470:12:19",
																"nodeType": "YulFunctionCall",
																"src": "18470:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18460:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18460:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "18391:98:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18432:5:19",
														"nodeType": "YulTypedName",
														"src": "18432:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18442:6:19",
														"nodeType": "YulTypedName",
														"src": "18442:6:19",
														"type": ""
													}
												],
												"src": "18391:98:19"
											},
											{
												"body": {
													"nativeSrc": "18590:73:19",
													"nodeType": "YulBlock",
													"src": "18590:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18607:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18607:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18612:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18612:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18600:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18600:6:19"
																},
																"nativeSrc": "18600:19:19",
																"nodeType": "YulFunctionCall",
																"src": "18600:19:19"
															},
															"nativeSrc": "18600:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "18600:19:19"
														},
														{
															"nativeSrc": "18628:29:19",
															"nodeType": "YulAssignment",
															"src": "18628:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18647:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18647:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18652:4:19",
																		"nodeType": "YulLiteral",
																		"src": "18652:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18643:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18643:3:19"
																},
																"nativeSrc": "18643:14:19",
																"nodeType": "YulFunctionCall",
																"src": "18643:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18628:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "18628:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "18495:168:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18562:3:19",
														"nodeType": "YulTypedName",
														"src": "18562:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18567:6:19",
														"nodeType": "YulTypedName",
														"src": "18567:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18578:11:19",
														"nodeType": "YulTypedName",
														"src": "18578:11:19",
														"type": ""
													}
												],
												"src": "18495:168:19"
											},
											{
												"body": {
													"nativeSrc": "18759:283:19",
													"nodeType": "YulBlock",
													"src": "18759:283:19",
													"statements": [
														{
															"nativeSrc": "18769:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "18769:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18815:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "18815:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "18783:31:19",
																	"nodeType": "YulIdentifier",
																	"src": "18783:31:19"
																},
																"nativeSrc": "18783:38:19",
																"nodeType": "YulFunctionCall",
																"src": "18783:38:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18773:6:19",
																	"nodeType": "YulTypedName",
																	"src": "18773:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18830:77:19",
															"nodeType": "YulAssignment",
															"src": "18830:77:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18895:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18895:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18900:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18900:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "18837:57:19",
																	"nodeType": "YulIdentifier",
																	"src": "18837:57:19"
																},
																"nativeSrc": "18837:70:19",
																"nodeType": "YulFunctionCall",
																"src": "18837:70:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18830:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18830:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18955:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "18955:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18962:4:19",
																				"nodeType": "YulLiteral",
																				"src": "18962:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18951:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18951:3:19"
																		},
																		"nativeSrc": "18951:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18951:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18969:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18969:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18974:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18974:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18916:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "18916:34:19"
																},
																"nativeSrc": "18916:65:19",
																"nodeType": "YulFunctionCall",
																"src": "18916:65:19"
															},
															"nativeSrc": "18916:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "18916:65:19"
														},
														{
															"nativeSrc": "18990:46:19",
															"nodeType": "YulAssignment",
															"src": "18990:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19001:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19001:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "19028:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "19028:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "19006:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "19006:21:19"
																		},
																		"nativeSrc": "19006:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19006:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18997:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18997:3:19"
																},
																"nativeSrc": "18997:39:19",
																"nodeType": "YulFunctionCall",
																"src": "18997:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18990:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18990:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "18669:373:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18740:5:19",
														"nodeType": "YulTypedName",
														"src": "18740:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18747:3:19",
														"nodeType": "YulTypedName",
														"src": "18747:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18755:3:19",
														"nodeType": "YulTypedName",
														"src": "18755:3:19",
														"type": ""
													}
												],
												"src": "18669:373:19"
											},
											{
												"body": {
													"nativeSrc": "19248:440:19",
													"nodeType": "YulBlock",
													"src": "19248:440:19",
													"statements": [
														{
															"nativeSrc": "19258:27:19",
															"nodeType": "YulAssignment",
															"src": "19258:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19270:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "19270:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19281:3:19",
																		"nodeType": "YulLiteral",
																		"src": "19281:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19266:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19266:3:19"
																},
																"nativeSrc": "19266:19:19",
																"nodeType": "YulFunctionCall",
																"src": "19266:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19258:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "19258:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19339:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19339:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19352:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19352:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19363:1:19",
																				"nodeType": "YulLiteral",
																				"src": "19363:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19348:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19348:3:19"
																		},
																		"nativeSrc": "19348:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19348:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19295:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "19295:43:19"
																},
																"nativeSrc": "19295:71:19",
																"nodeType": "YulFunctionCall",
																"src": "19295:71:19"
															},
															"nativeSrc": "19295:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "19295:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19420:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19420:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19433:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19433:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19444:2:19",
																				"nodeType": "YulLiteral",
																				"src": "19444:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19429:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19429:3:19"
																		},
																		"nativeSrc": "19429:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19429:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19376:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "19376:43:19"
																},
																"nativeSrc": "19376:72:19",
																"nodeType": "YulFunctionCall",
																"src": "19376:72:19"
															},
															"nativeSrc": "19376:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "19376:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19502:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19502:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19515:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19515:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19526:2:19",
																				"nodeType": "YulLiteral",
																				"src": "19526:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19511:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19511:3:19"
																		},
																		"nativeSrc": "19511:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19511:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19458:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "19458:43:19"
																},
																"nativeSrc": "19458:72:19",
																"nodeType": "YulFunctionCall",
																"src": "19458:72:19"
															},
															"nativeSrc": "19458:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "19458:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19551:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19551:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19562:2:19",
																				"nodeType": "YulLiteral",
																				"src": "19562:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19547:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19547:3:19"
																		},
																		"nativeSrc": "19547:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19547:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19571:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "19571:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19577:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19577:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19567:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19567:3:19"
																		},
																		"nativeSrc": "19567:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19567:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19540:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "19540:6:19"
																},
																"nativeSrc": "19540:48:19",
																"nodeType": "YulFunctionCall",
																"src": "19540:48:19"
															},
															"nativeSrc": "19540:48:19",
															"nodeType": "YulExpressionStatement",
															"src": "19540:48:19"
														},
														{
															"nativeSrc": "19597:84:19",
															"nodeType": "YulAssignment",
															"src": "19597:84:19",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19667:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19667:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "19676:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "19676:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "19605:61:19",
																	"nodeType": "YulIdentifier",
																	"src": "19605:61:19"
																},
																"nativeSrc": "19605:76:19",
																"nodeType": "YulFunctionCall",
																"src": "19605:76:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19597:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "19597:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "19048:640:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19196:9:19",
														"nodeType": "YulTypedName",
														"src": "19196:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19208:6:19",
														"nodeType": "YulTypedName",
														"src": "19208:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19216:6:19",
														"nodeType": "YulTypedName",
														"src": "19216:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19224:6:19",
														"nodeType": "YulTypedName",
														"src": "19224:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19232:6:19",
														"nodeType": "YulTypedName",
														"src": "19232:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19243:4:19",
														"nodeType": "YulTypedName",
														"src": "19243:4:19",
														"type": ""
													}
												],
												"src": "19048:640:19"
											},
											{
												"body": {
													"nativeSrc": "19756:79:19",
													"nodeType": "YulBlock",
													"src": "19756:79:19",
													"statements": [
														{
															"nativeSrc": "19766:22:19",
															"nodeType": "YulAssignment",
															"src": "19766:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19781:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19781:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19775:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "19775:5:19"
																},
																"nativeSrc": "19775:13:19",
																"nodeType": "YulFunctionCall",
																"src": "19775:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19766:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "19766:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19823:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "19823:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "19797:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "19797:25:19"
																},
																"nativeSrc": "19797:32:19",
																"nodeType": "YulFunctionCall",
																"src": "19797:32:19"
															},
															"nativeSrc": "19797:32:19",
															"nodeType": "YulExpressionStatement",
															"src": "19797:32:19"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "19694:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19734:6:19",
														"nodeType": "YulTypedName",
														"src": "19734:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19742:3:19",
														"nodeType": "YulTypedName",
														"src": "19742:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19750:5:19",
														"nodeType": "YulTypedName",
														"src": "19750:5:19",
														"type": ""
													}
												],
												"src": "19694:141:19"
											},
											{
												"body": {
													"nativeSrc": "19917:273:19",
													"nodeType": "YulBlock",
													"src": "19917:273:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "19963:83:19",
																"nodeType": "YulBlock",
																"src": "19963:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19965:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "19965:77:19"
																			},
																			"nativeSrc": "19965:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "19965:79:19"
																		},
																		"nativeSrc": "19965:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "19965:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19938:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "19938:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19947:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19947:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19934:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19934:3:19"
																		},
																		"nativeSrc": "19934:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19934:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19959:2:19",
																		"nodeType": "YulLiteral",
																		"src": "19959:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19930:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19930:3:19"
																},
																"nativeSrc": "19930:32:19",
																"nodeType": "YulFunctionCall",
																"src": "19930:32:19"
															},
															"nativeSrc": "19927:119:19",
															"nodeType": "YulIf",
															"src": "19927:119:19"
														},
														{
															"nativeSrc": "20056:127:19",
															"nodeType": "YulBlock",
															"src": "20056:127:19",
															"statements": [
																{
																	"nativeSrc": "20071:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20071:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20085:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20085:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20075:6:19",
																			"nodeType": "YulTypedName",
																			"src": "20075:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20100:73:19",
																	"nodeType": "YulAssignment",
																	"src": "20100:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20145:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "20145:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20156:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "20156:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20141:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "20141:3:19"
																				},
																				"nativeSrc": "20141:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "20141:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20165:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "20165:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "20110:30:19",
																			"nodeType": "YulIdentifier",
																			"src": "20110:30:19"
																		},
																		"nativeSrc": "20110:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20110:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20100:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "20100:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "19841:349:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19887:9:19",
														"nodeType": "YulTypedName",
														"src": "19887:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19898:7:19",
														"nodeType": "YulTypedName",
														"src": "19898:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19910:6:19",
														"nodeType": "YulTypedName",
														"src": "19910:6:19",
														"type": ""
													}
												],
												"src": "19841:349:19"
											},
											{
												"body": {
													"nativeSrc": "20322:206:19",
													"nodeType": "YulBlock",
													"src": "20322:206:19",
													"statements": [
														{
															"nativeSrc": "20332:26:19",
															"nodeType": "YulAssignment",
															"src": "20332:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20344:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "20344:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20355:2:19",
																		"nodeType": "YulLiteral",
																		"src": "20355:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20340:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20340:3:19"
																},
																"nativeSrc": "20340:18:19",
																"nodeType": "YulFunctionCall",
																"src": "20340:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20332:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "20332:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20412:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "20412:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20425:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "20425:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20436:1:19",
																				"nodeType": "YulLiteral",
																				"src": "20436:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20421:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20421:3:19"
																		},
																		"nativeSrc": "20421:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20421:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20368:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "20368:43:19"
																},
																"nativeSrc": "20368:71:19",
																"nodeType": "YulFunctionCall",
																"src": "20368:71:19"
															},
															"nativeSrc": "20368:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "20368:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20493:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "20493:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20506:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "20506:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20517:2:19",
																				"nodeType": "YulLiteral",
																				"src": "20517:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20502:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20502:3:19"
																		},
																		"nativeSrc": "20502:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20502:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20449:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "20449:43:19"
																},
																"nativeSrc": "20449:72:19",
																"nodeType": "YulFunctionCall",
																"src": "20449:72:19"
															},
															"nativeSrc": "20449:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "20449:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "20196:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20286:9:19",
														"nodeType": "YulTypedName",
														"src": "20286:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20298:6:19",
														"nodeType": "YulTypedName",
														"src": "20298:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20306:6:19",
														"nodeType": "YulTypedName",
														"src": "20306:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20317:4:19",
														"nodeType": "YulTypedName",
														"src": "20317:4:19",
														"type": ""
													}
												],
												"src": "20196:332:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_a896e77af5e233b52f3d565f8bd98eec0ddb0e671485cda84d2cd93d51849a53(memPtr) {\n\n        mstore(add(memPtr, 0), \"NotFound\")\n\n    }\n\n    function abi_encode_t_stringliteral_a896e77af5e233b52f3d565f8bd98eec0ddb0e671485cda84d2cd93d51849a53_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_a896e77af5e233b52f3d565f8bd98eec0ddb0e671485cda84d2cd93d51849a53(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a896e77af5e233b52f3d565f8bd98eec0ddb0e671485cda84d2cd93d51849a53__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a896e77af5e233b52f3d565f8bd98eec0ddb0e671485cda84d2cd93d51849a53_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061011e575f3560e01c806370a082311161009f578063b88d4fde11610063578063b88d4fde146103c6578063c87b56dd146103ee578063d9e0dc591461042a578063e985e9c514610466578063f2fde38b146104a25761011e565b806370a08231146102f8578063715018a6146103345780638da5cb5b1461034a57806395d89b4114610374578063a22cb4651461039e5761011e565b806340d097c3116100e657806340d097c31461021457806342842e0e1461024457806342966c681461026c57806347baf0e9146102945780636352211e146102bc5761011e565b806301ffc9a71461012257806306fdde031461015e578063081812fc14610188578063095ea7b3146101c457806323b872dd146101ec575b5f80fd5b34801561012d575f80fd5b50610148600480360381019061014391906119f7565b6104ca565b6040516101559190611a3c565b60405180910390f35b348015610169575f80fd5b506101726104db565b60405161017f9190611adf565b60405180910390f35b348015610193575f80fd5b506101ae60048036038101906101a99190611b32565b61056a565b6040516101bb9190611b9c565b60405180910390f35b3480156101cf575f80fd5b506101ea60048036038101906101e59190611bdf565b610585565b005b3480156101f7575f80fd5b50610212600480360381019061020d9190611c1d565b61059b565b005b61022e60048036038101906102299190611c6d565b61069a565b60405161023b9190611ca7565b60405180910390f35b34801561024f575f80fd5b5061026a60048036038101906102659190611c1d565b610775565b005b348015610277575f80fd5b50610292600480360381019061028d9190611b32565b610794565b005b34801561029f575f80fd5b506102ba60048036038101906102b59190611b32565b6107aa565b005b3480156102c7575f80fd5b506102e260048036038101906102dd9190611b32565b6108e2565b6040516102ef9190611b9c565b60405180910390f35b348015610303575f80fd5b5061031e60048036038101906103199190611c6d565b6108f3565b60405161032b9190611ca7565b60405180910390f35b34801561033f575f80fd5b506103486109a9565b005b348015610355575f80fd5b5061035e6109bc565b60405161036b9190611b9c565b60405180910390f35b34801561037f575f80fd5b506103886109e4565b6040516103959190611adf565b60405180910390f35b3480156103a9575f80fd5b506103c460048036038101906103bf9190611cea565b610a74565b005b3480156103d1575f80fd5b506103ec60048036038101906103e79190611e54565b610a8a565b005b3480156103f9575f80fd5b50610414600480360381019061040f9190611b32565b610aa7565b6040516104219190611adf565b60405180910390f35b348015610435575f80fd5b50610450600480360381019061044b9190611c6d565b610b4d565b60405161045d9190611adf565b60405180910390f35b348015610471575f80fd5b5061048c60048036038101906104879190611ed4565b610bf2565b6040516104999190611a3c565b60405180910390f35b3480156104ad575f80fd5b506104c860048036038101906104c39190611c6d565b610c80565b005b5f6104d482610d04565b9050919050565b60605f80546104e990611f3f565b80601f016020809104026020016040519081016040528092919081815260200182805461051590611f3f565b80156105605780601f1061053757610100808354040283529160200191610560565b820191905f5260205f20905b81548152906001019060200180831161054357829003601f168201915b5050505050905090565b5f61057482610d64565b5061057e82610dea565b9050919050565b6105978282610592610e23565b610e2a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060b575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106029190611b9c565b60405180910390fd5b5f61061e8383610619610e23565b610e3c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610694578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161068b93929190611f6f565b60405180910390fd5b50505050565b5f6106a56009611047565b5f6106b0600961105b565b9050600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9e0dc59846040518263ffffffff1660e01b815260040161070c9190611b9c565b5f60405180830381865afa158015610726573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019061074e9190612042565b600a5f8381526020019081526020015f20908161076b9190612226565b5080915050919050565b61078f83838360405180602001604052805f815250610a8a565b505050565b6107a65f826107a1610e23565b610e3c565b5050565b3373ffffffffffffffffffffffffffffffffffffffff166107ca826108e2565b73ffffffffffffffffffffffffffffffffffffffff1614610820576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108179061233f565b60405180910390fd5b5f600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9e0dc59336040518263ffffffff1660e01b815260040161087b9190611b9c565b5f60405180830381865afa158015610895573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906108bd9190612042565b905080600a5f8481526020019081526020015f2090816108dd9190612226565b505050565b5f6108ec82610d64565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610964575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161095b9190611b9c565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109b1611067565b6109ba5f6110ee565b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546109f390611f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1f90611f3f565b8015610a6a5780601f10610a4157610100808354040283529160200191610a6a565b820191905f5260205f20905b815481529060010190602001808311610a4d57829003601f168201915b5050505050905090565b610a86610a7f610e23565b83836111b1565b5050565b610a9584848461059b565b610aa18484848461131a565b50505050565b60605f600a5f8481526020019081526020015f208054610ac690611f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054610af290611f3f565b8015610b3d5780601f10610b1457610100808354040283529160200191610b3d565b820191905f5260205f20905b815481529060010190602001808311610b2057829003601f168201915b5050505050905080915050919050565b6060600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9e0dc59836040518263ffffffff1660e01b8152600401610ba99190611b9c565b5f60405180830381865afa158015610bc3573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190610beb9190612042565b9050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610c88611067565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cf8575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610cef9190611b9c565b60405180910390fd5b610d01816110ee565b50565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610d5d5750610d5c826114cc565b5b9050919050565b5f80610d6f836115ad565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610de157826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610dd89190611ca7565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610e3783838360016115e6565b505050565b5f80610e47846115ad565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610e8857610e878184866117a5565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f1357610ec75f855f806115e6565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610f9257600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b61106f610e23565b73ffffffffffffffffffffffffffffffffffffffff1661108d6109bc565b73ffffffffffffffffffffffffffffffffffffffff16146110ec576110b0610e23565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110e39190611b9c565b60405180910390fd5b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361122157816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016112189190611b9c565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161130d9190611a3c565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156114c6578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261135d610e23565b8685856040518563ffffffff1660e01b815260040161137f94939291906123af565b6020604051808303815f875af19250505080156113ba57506040513d601f19601f820116820180604052508101906113b7919061240d565b60015b61143b573d805f81146113e8576040519150601f19603f3d011682016040523d82523d5f602084013e6113ed565b606091505b505f81510361143357836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161142a9190611b9c565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146114c457836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016114bb9190611b9c565b60405180910390fd5b505b50505050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061159657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806115a657506115a582611868565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061161e57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611750575f61162d84610d64565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561169757508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156116aa57506116a88184610bf2565b155b156116ec57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016116e39190611b9c565b60405180910390fd5b811561174e57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6117b08383836118d1565b611863575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361182457806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161181b9190611ca7565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161185a929190612438565b60405180910390fd5b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561198857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061194957506119488484610bf2565b5b8061198757508273ffffffffffffffffffffffffffffffffffffffff1661196f83610dea565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119d6816119a2565b81146119e0575f80fd5b50565b5f813590506119f1816119cd565b92915050565b5f60208284031215611a0c57611a0b61199a565b5b5f611a19848285016119e3565b91505092915050565b5f8115159050919050565b611a3681611a22565b82525050565b5f602082019050611a4f5f830184611a2d565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611a8c578082015181840152602081019050611a71565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611ab182611a55565b611abb8185611a5f565b9350611acb818560208601611a6f565b611ad481611a97565b840191505092915050565b5f6020820190508181035f830152611af78184611aa7565b905092915050565b5f819050919050565b611b1181611aff565b8114611b1b575f80fd5b50565b5f81359050611b2c81611b08565b92915050565b5f60208284031215611b4757611b4661199a565b5b5f611b5484828501611b1e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b8682611b5d565b9050919050565b611b9681611b7c565b82525050565b5f602082019050611baf5f830184611b8d565b92915050565b611bbe81611b7c565b8114611bc8575f80fd5b50565b5f81359050611bd981611bb5565b92915050565b5f8060408385031215611bf557611bf461199a565b5b5f611c0285828601611bcb565b9250506020611c1385828601611b1e565b9150509250929050565b5f805f60608486031215611c3457611c3361199a565b5b5f611c4186828701611bcb565b9350506020611c5286828701611bcb565b9250506040611c6386828701611b1e565b9150509250925092565b5f60208284031215611c8257611c8161199a565b5b5f611c8f84828501611bcb565b91505092915050565b611ca181611aff565b82525050565b5f602082019050611cba5f830184611c98565b92915050565b611cc981611a22565b8114611cd3575f80fd5b50565b5f81359050611ce481611cc0565b92915050565b5f8060408385031215611d0057611cff61199a565b5b5f611d0d85828601611bcb565b9250506020611d1e85828601611cd6565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611d6682611a97565b810181811067ffffffffffffffff82111715611d8557611d84611d30565b5b80604052505050565b5f611d97611991565b9050611da38282611d5d565b919050565b5f67ffffffffffffffff821115611dc257611dc1611d30565b5b611dcb82611a97565b9050602081019050919050565b828183375f83830152505050565b5f611df8611df384611da8565b611d8e565b905082815260208101848484011115611e1457611e13611d2c565b5b611e1f848285611dd8565b509392505050565b5f82601f830112611e3b57611e3a611d28565b5b8135611e4b848260208601611de6565b91505092915050565b5f805f8060808587031215611e6c57611e6b61199a565b5b5f611e7987828801611bcb565b9450506020611e8a87828801611bcb565b9350506040611e9b87828801611b1e565b925050606085013567ffffffffffffffff811115611ebc57611ebb61199e565b5b611ec887828801611e27565b91505092959194509250565b5f8060408385031215611eea57611ee961199a565b5b5f611ef785828601611bcb565b9250506020611f0885828601611bcb565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f5657607f821691505b602082108103611f6957611f68611f12565b5b50919050565b5f606082019050611f825f830186611b8d565b611f8f6020830185611c98565b611f9c6040830184611b8d565b949350505050565b5f67ffffffffffffffff821115611fbe57611fbd611d30565b5b611fc782611a97565b9050602081019050919050565b5f611fe6611fe184611fa4565b611d8e565b90508281526020810184848401111561200257612001611d2c565b5b61200d848285611a6f565b509392505050565b5f82601f83011261202957612028611d28565b5b8151612039848260208601611fd4565b91505092915050565b5f602082840312156120575761205661199a565b5b5f82015167ffffffffffffffff8111156120745761207361199e565b5b61208084828501612015565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026120e57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826120aa565b6120ef86836120aa565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61212a61212561212084611aff565b612107565b611aff565b9050919050565b5f819050919050565b61214383612110565b61215761214f82612131565b8484546120b6565b825550505050565b5f90565b61216b61215f565b61217681848461213a565b505050565b5b818110156121995761218e5f82612163565b60018101905061217c565b5050565b601f8211156121de576121af81612089565b6121b88461209b565b810160208510156121c7578190505b6121db6121d38561209b565b83018261217b565b50505b505050565b5f82821c905092915050565b5f6121fe5f19846008026121e3565b1980831691505092915050565b5f61221683836121ef565b9150826002028217905092915050565b61222f82611a55565b67ffffffffffffffff81111561224857612247611d30565b5b6122528254611f3f565b61225d82828561219d565b5f60209050601f83116001811461228e575f841561227c578287015190505b612286858261220b565b8655506122ed565b601f19841661229c86612089565b5f5b828110156122c35784890151825560018201915060208501945060208101905061229e565b868310156122e057848901516122dc601f8916826121ef565b8355505b6001600288020188555050505b505050505050565b7f4e6f74466f756e640000000000000000000000000000000000000000000000005f82015250565b5f612329600883611a5f565b9150612334826122f5565b602082019050919050565b5f6020820190508181035f8301526123568161231d565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6123818261235d565b61238b8185612367565b935061239b818560208601611a6f565b6123a481611a97565b840191505092915050565b5f6080820190506123c25f830187611b8d565b6123cf6020830186611b8d565b6123dc6040830185611c98565b81810360608301526123ee8184612377565b905095945050505050565b5f81519050612407816119cd565b92915050565b5f602082840312156124225761242161199a565b5b5f61242f848285016123f9565b91505092915050565b5f60408201905061244b5f830185611b8d565b6124586020830184611c98565b939250505056fea2646970667358221220604836e18d0388ca716f66e590a12d0e67b32de16a41f84319f925ef8b28c78264736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xD9E0DC59 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A2 JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x39E JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH4 0x40D097C3 GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x47BAF0E9 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2BC JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1EC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1BDF JUMP JUMPDEST PUSH2 0x585 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x348 PUSH2 0x9A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0xA74 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1E54 JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x450 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x1A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x4D4 DUP3 PUSH2 0xD04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4E9 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x515 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x560 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x537 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x560 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x543 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x574 DUP3 PUSH2 0xD64 JUMP JUMPDEST POP PUSH2 0x57E DUP3 PUSH2 0xDEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x597 DUP3 DUP3 PUSH2 0x592 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0xE2A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x61E DUP4 DUP4 PUSH2 0x619 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0xE3C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x694 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6A5 PUSH1 0x9 PUSH2 0x1047 JUMP JUMPDEST PUSH0 PUSH2 0x6B0 PUSH1 0x9 PUSH2 0x105B JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD9E0DC59 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70C SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x726 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74E SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x2226 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x78F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA8A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7A6 PUSH0 DUP3 PUSH2 0x7A1 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0xE3C JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7CA DUP3 PUSH2 0x8E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x817 SWAP1 PUSH2 0x233F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD9E0DC59 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x895 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BD SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x2226 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8EC DUP3 PUSH2 0xD64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x964 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95B SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0x1067 JUMP JUMPDEST PUSH2 0x9BA PUSH0 PUSH2 0x10EE JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x9F3 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA1F SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA6A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA41 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA6A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA4D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA86 PUSH2 0xA7F PUSH2 0xE23 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x11B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA95 DUP5 DUP5 DUP5 PUSH2 0x59B JUMP JUMPDEST PUSH2 0xAA1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x131A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xAC6 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAF2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB14 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD9E0DC59 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA9 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBEB SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC88 PUSH2 0x1067 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCF8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD01 DUP2 PUSH2 0x10EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xD5D JUMPI POP PUSH2 0xD5C DUP3 PUSH2 0x14CC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD6F DUP4 PUSH2 0x15AD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE1 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD8 SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE37 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x15E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE47 DUP5 PUSH2 0x15AD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE88 JUMPI PUSH2 0xE87 DUP2 DUP5 DUP7 PUSH2 0x17A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF13 JUMPI PUSH2 0xEC7 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF92 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106F PUSH2 0xE23 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x108D PUSH2 0x9BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10EC JUMPI PUSH2 0x10B0 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E3 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1221 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1218 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x130D SWAP2 SWAP1 PUSH2 0x1A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x14C6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x135D PUSH2 0xE23 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13BA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B7 SWAP2 SWAP1 PUSH2 0x240D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x143B JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x13E8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1433 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142A SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x14C4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BB SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1596 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x15A6 JUMPI POP PUSH2 0x15A5 DUP3 PUSH2 0x1868 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x161E JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1750 JUMPI PUSH0 PUSH2 0x162D DUP5 PUSH2 0xD64 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1697 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x16AA JUMPI POP PUSH2 0x16A8 DUP2 DUP5 PUSH2 0xBF2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x16EC JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E3 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x174E JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x17B0 DUP4 DUP4 DUP4 PUSH2 0x18D1 JUMP JUMPDEST PUSH2 0x1863 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1824 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181B SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185A SWAP3 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1988 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1949 JUMPI POP PUSH2 0x1948 DUP5 DUP5 PUSH2 0xBF2 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1987 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x196F DUP4 PUSH2 0xDEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19D6 DUP2 PUSH2 0x19A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x19E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F1 DUP2 PUSH2 0x19CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A0C JUMPI PUSH2 0x1A0B PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A19 DUP5 DUP3 DUP6 ADD PUSH2 0x19E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A36 DUP2 PUSH2 0x1A22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4F PUSH0 DUP4 ADD DUP5 PUSH2 0x1A2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A8C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A71 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB1 DUP3 PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x1ABB DUP2 DUP6 PUSH2 0x1A5F JUMP JUMPDEST SWAP4 POP PUSH2 0x1ACB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x1AD4 DUP2 PUSH2 0x1A97 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AF7 DUP2 DUP5 PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B11 DUP2 PUSH2 0x1AFF JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2C DUP2 PUSH2 0x1B08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B47 JUMPI PUSH2 0x1B46 PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B54 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B86 DUP3 PUSH2 0x1B5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B96 DUP2 PUSH2 0x1B7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BAF PUSH0 DUP4 ADD DUP5 PUSH2 0x1B8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BBE DUP2 PUSH2 0x1B7C JUMP JUMPDEST DUP2 EQ PUSH2 0x1BC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BD9 DUP2 PUSH2 0x1BB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BF5 JUMPI PUSH2 0x1BF4 PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C02 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C13 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C34 JUMPI PUSH2 0x1C33 PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C41 DUP7 DUP3 DUP8 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C52 DUP7 DUP3 DUP8 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C63 DUP7 DUP3 DUP8 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C82 JUMPI PUSH2 0x1C81 PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C8F DUP5 DUP3 DUP6 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CA1 DUP2 PUSH2 0x1AFF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CBA PUSH0 DUP4 ADD DUP5 PUSH2 0x1C98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CC9 DUP2 PUSH2 0x1A22 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CD3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CE4 DUP2 PUSH2 0x1CC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D00 JUMPI PUSH2 0x1CFF PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D0D DUP6 DUP3 DUP7 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D1E DUP6 DUP3 DUP7 ADD PUSH2 0x1CD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D66 DUP3 PUSH2 0x1A97 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D85 JUMPI PUSH2 0x1D84 PUSH2 0x1D30 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D97 PUSH2 0x1991 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DA3 DUP3 DUP3 PUSH2 0x1D5D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DC2 JUMPI PUSH2 0x1DC1 PUSH2 0x1D30 JUMP JUMPDEST JUMPDEST PUSH2 0x1DCB DUP3 PUSH2 0x1A97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF8 PUSH2 0x1DF3 DUP5 PUSH2 0x1DA8 JUMP JUMPDEST PUSH2 0x1D8E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E14 JUMPI PUSH2 0x1E13 PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST PUSH2 0x1E1F DUP5 DUP3 DUP6 PUSH2 0x1DD8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E3B JUMPI PUSH2 0x1E3A PUSH2 0x1D28 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E4B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E6C JUMPI PUSH2 0x1E6B PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E79 DUP8 DUP3 DUP9 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1E8A DUP8 DUP3 DUP9 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1E9B DUP8 DUP3 DUP9 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EBC JUMPI PUSH2 0x1EBB PUSH2 0x199E JUMP JUMPDEST JUMPDEST PUSH2 0x1EC8 DUP8 DUP3 DUP9 ADD PUSH2 0x1E27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EEA JUMPI PUSH2 0x1EE9 PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EF7 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F08 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F56 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F69 JUMPI PUSH2 0x1F68 PUSH2 0x1F12 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F82 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x1F8F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C98 JUMP JUMPDEST PUSH2 0x1F9C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B8D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FBE JUMPI PUSH2 0x1FBD PUSH2 0x1D30 JUMP JUMPDEST JUMPDEST PUSH2 0x1FC7 DUP3 PUSH2 0x1A97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE6 PUSH2 0x1FE1 DUP5 PUSH2 0x1FA4 JUMP JUMPDEST PUSH2 0x1D8E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2002 JUMPI PUSH2 0x2001 PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST PUSH2 0x200D DUP5 DUP3 DUP6 PUSH2 0x1A6F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2029 JUMPI PUSH2 0x2028 PUSH2 0x1D28 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x2039 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2057 JUMPI PUSH2 0x2056 PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2074 JUMPI PUSH2 0x2073 PUSH2 0x199E JUMP JUMPDEST JUMPDEST PUSH2 0x2080 DUP5 DUP3 DUP6 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x20E5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x20AA JUMP JUMPDEST PUSH2 0x20EF DUP7 DUP4 PUSH2 0x20AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x212A PUSH2 0x2125 PUSH2 0x2120 DUP5 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0x2107 JUMP JUMPDEST PUSH2 0x1AFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2143 DUP4 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x2157 PUSH2 0x214F DUP3 PUSH2 0x2131 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x20B6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x216B PUSH2 0x215F JUMP JUMPDEST PUSH2 0x2176 DUP2 DUP5 DUP5 PUSH2 0x213A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2199 JUMPI PUSH2 0x218E PUSH0 DUP3 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x217C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x21DE JUMPI PUSH2 0x21AF DUP2 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x21B8 DUP5 PUSH2 0x209B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x21C7 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x21DB PUSH2 0x21D3 DUP6 PUSH2 0x209B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x217B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21FE PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x21E3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2216 DUP4 DUP4 PUSH2 0x21EF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x222F DUP3 PUSH2 0x1A55 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2248 JUMPI PUSH2 0x2247 PUSH2 0x1D30 JUMP JUMPDEST JUMPDEST PUSH2 0x2252 DUP3 SLOAD PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x225D DUP3 DUP3 DUP6 PUSH2 0x219D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x228E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x227C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2286 DUP6 DUP3 PUSH2 0x220B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x229C DUP7 PUSH2 0x2089 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x22C3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x229E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x22E0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x22DC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x21EF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F74466F756E64000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2329 PUSH1 0x8 DUP4 PUSH2 0x1A5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2334 DUP3 PUSH2 0x22F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2356 DUP2 PUSH2 0x231D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2381 DUP3 PUSH2 0x235D JUMP JUMPDEST PUSH2 0x238B DUP2 DUP6 PUSH2 0x2367 JUMP JUMPDEST SWAP4 POP PUSH2 0x239B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x23A4 DUP2 PUSH2 0x1A97 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x23C2 PUSH0 DUP4 ADD DUP8 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x23CF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x23DC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C98 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x23EE DUP2 DUP5 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2407 DUP2 PUSH2 0x19CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2422 JUMPI PUSH2 0x2421 PUSH2 0x199A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x242F DUP5 DUP3 DUP6 ADD PUSH2 0x23F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x244B PUSH0 DUP4 ADD DUP6 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x2458 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C98 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x48 CALLDATASIZE 0xE1 DUP14 SUB DUP9 0xCA PUSH18 0x6F66E590A12D0E67B32DE16A41F84319F925 0xEF DUP12 0x28 0xC7 DUP3 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "490:1677:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1987:177;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1012:241:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4787:132:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;561:314:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1582:264:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1372:204:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1852:130;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1987:177:18;2098:4;2121:36;2145:11;2121:23;:36::i;:::-;2114:43;;1987:177;;;:::o;2365:89:5:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;1012:241:18:-;1066:7;1085:21;:9;:19;:21::i;:::-;1116:15;1134:19;:9;:17;:19::i;:::-;1116:37;;1189:16;;;;;;;;;;;:28;;;1218:2;1189:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1163:14;:23;1178:7;1163:23;;;;;;;;;;;:58;;;;;;:::i;:::-;;1239:7;1232:14;;;1012:241;;;:::o;4787:132:5:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;561:314:8:-;826:42;842:1;846:7;855:12;:10;:12::i;:::-;826:7;:42::i;:::-;;561:314;:::o;1582:264:18:-;1670:10;1650:30;;:16;1658:7;1650;:16::i;:::-;:30;;;1642:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1704:22;1729:16;;;;;;;;;;;:28;;;1758:10;1729:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1704:65;;1805:8;1779:14;:23;1794:7;1779:23;;;;;;;;;;;:34;;;;;;:::i;:::-;;1632:214;1582:264;:::o;2185:118:5:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2518:93:5:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1372:204:18:-;1470:13;1496:22;1521:14;:23;1536:7;1521:23;;;;;;;;;;;1496:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:8;1554:15;;;1372:204;;;:::o;1852:130::-;1908:13;1940:16;;;;;;;;;;;:28;;;1969:5;1940:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1933:42;;1852:130;;;:::o;3928:153:5:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;937:207:9:-;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;16138:241:5:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;14418:120:5:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;945:123:12:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15591:312:5:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;1561:300::-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;5707:115::-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;762:146:14:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;6376:272:5:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;7:75:19:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:442::-;11132:4;11170:2;11159:9;11155:18;11147:26;;11183:71;11251:1;11240:9;11236:17;11227:6;11183:71;:::i;:::-;11264:72;11332:2;11321:9;11317:18;11308:6;11264:72;:::i;:::-;11346;11414:2;11403:9;11399:18;11390:6;11346:72;:::i;:::-;10983:442;;;;;;:::o;11431:308::-;11493:4;11583:18;11575:6;11572:30;11569:56;;;11605:18;;:::i;:::-;11569:56;11643:29;11665:6;11643:29;:::i;:::-;11635:37;;11727:4;11721;11717:15;11709:23;;11431:308;;;:::o;11745:434::-;11834:5;11859:66;11875:49;11917:6;11875:49;:::i;:::-;11859:66;:::i;:::-;11850:75;;11948:6;11941:5;11934:21;11986:4;11979:5;11975:16;12024:3;12015:6;12010:3;12006:16;12003:25;12000:112;;;12031:79;;:::i;:::-;12000:112;12121:52;12166:6;12161:3;12156;12121:52;:::i;:::-;11840:339;11745:434;;;;;:::o;12199:355::-;12266:5;12315:3;12308:4;12300:6;12296:17;12292:27;12282:122;;12323:79;;:::i;:::-;12282:122;12433:6;12427:13;12458:90;12544:3;12536:6;12529:4;12521:6;12517:17;12458:90;:::i;:::-;12449:99;;12272:282;12199:355;;;;:::o;12560:524::-;12640:6;12689:2;12677:9;12668:7;12664:23;12660:32;12657:119;;;12695:79;;:::i;:::-;12657:119;12836:1;12825:9;12821:17;12815:24;12866:18;12858:6;12855:30;12852:117;;;12888:79;;:::i;:::-;12852:117;12993:74;13059:7;13050:6;13039:9;13035:22;12993:74;:::i;:::-;12983:84;;12786:291;12560:524;;;;:::o;13090:141::-;13139:4;13162:3;13154:11;;13185:3;13182:1;13175:14;13219:4;13216:1;13206:18;13198:26;;13090:141;;;:::o;13237:93::-;13274:6;13321:2;13316;13309:5;13305:14;13301:23;13291:33;;13237:93;;;:::o;13336:107::-;13380:8;13430:5;13424:4;13420:16;13399:37;;13336:107;;;;:::o;13449:393::-;13518:6;13568:1;13556:10;13552:18;13591:97;13621:66;13610:9;13591:97;:::i;:::-;13709:39;13739:8;13728:9;13709:39;:::i;:::-;13697:51;;13781:4;13777:9;13770:5;13766:21;13757:30;;13830:4;13820:8;13816:19;13809:5;13806:30;13796:40;;13525:317;;13449:393;;;;;:::o;13848:60::-;13876:3;13897:5;13890:12;;13848:60;;;:::o;13914:142::-;13964:9;13997:53;14015:34;14024:24;14042:5;14024:24;:::i;:::-;14015:34;:::i;:::-;13997:53;:::i;:::-;13984:66;;13914:142;;;:::o;14062:75::-;14105:3;14126:5;14119:12;;14062:75;;;:::o;14143:269::-;14253:39;14284:7;14253:39;:::i;:::-;14314:91;14363:41;14387:16;14363:41;:::i;:::-;14355:6;14348:4;14342:11;14314:91;:::i;:::-;14308:4;14301:105;14219:193;14143:269;;;:::o;14418:73::-;14463:3;14418:73;:::o;14497:189::-;14574:32;;:::i;:::-;14615:65;14673:6;14665;14659:4;14615:65;:::i;:::-;14550:136;14497:189;;:::o;14692:186::-;14752:120;14769:3;14762:5;14759:14;14752:120;;;14823:39;14860:1;14853:5;14823:39;:::i;:::-;14796:1;14789:5;14785:13;14776:22;;14752:120;;;14692:186;;:::o;14884:543::-;14985:2;14980:3;14977:11;14974:446;;;15019:38;15051:5;15019:38;:::i;:::-;15103:29;15121:10;15103:29;:::i;:::-;15093:8;15089:44;15286:2;15274:10;15271:18;15268:49;;;15307:8;15292:23;;15268:49;15330:80;15386:22;15404:3;15386:22;:::i;:::-;15376:8;15372:37;15359:11;15330:80;:::i;:::-;14989:431;;14974:446;14884:543;;;:::o;15433:117::-;15487:8;15537:5;15531:4;15527:16;15506:37;;15433:117;;;;:::o;15556:169::-;15600:6;15633:51;15681:1;15677:6;15669:5;15666:1;15662:13;15633:51;:::i;:::-;15629:56;15714:4;15708;15704:15;15694:25;;15607:118;15556:169;;;;:::o;15730:295::-;15806:4;15952:29;15977:3;15971:4;15952:29;:::i;:::-;15944:37;;16014:3;16011:1;16007:11;16001:4;15998:21;15990:29;;15730:295;;;;:::o;16030:1395::-;16147:37;16180:3;16147:37;:::i;:::-;16249:18;16241:6;16238:30;16235:56;;;16271:18;;:::i;:::-;16235:56;16315:38;16347:4;16341:11;16315:38;:::i;:::-;16400:67;16460:6;16452;16446:4;16400:67;:::i;:::-;16494:1;16518:4;16505:17;;16550:2;16542:6;16539:14;16567:1;16562:618;;;;17224:1;17241:6;17238:77;;;17290:9;17285:3;17281:19;17275:26;17266:35;;17238:77;17341:67;17401:6;17394:5;17341:67;:::i;:::-;17335:4;17328:81;17197:222;16532:887;;16562:618;16614:4;16610:9;16602:6;16598:22;16648:37;16680:4;16648:37;:::i;:::-;16707:1;16721:208;16735:7;16732:1;16729:14;16721:208;;;16814:9;16809:3;16805:19;16799:26;16791:6;16784:42;16865:1;16857:6;16853:14;16843:24;;16912:2;16901:9;16897:18;16884:31;;16758:4;16755:1;16751:12;16746:17;;16721:208;;;16957:6;16948:7;16945:19;16942:179;;;17015:9;17010:3;17006:19;17000:26;17058:48;17100:4;17092:6;17088:17;17077:9;17058:48;:::i;:::-;17050:6;17043:64;16965:156;16942:179;17167:1;17163;17155:6;17151:14;17147:22;17141:4;17134:36;16569:611;;;16532:887;;16122:1303;;;16030:1395;;:::o;17431:158::-;17571:10;17567:1;17559:6;17555:14;17548:34;17431:158;:::o;17595:365::-;17737:3;17758:66;17822:1;17817:3;17758:66;:::i;:::-;17751:73;;17833:93;17922:3;17833:93;:::i;:::-;17951:2;17946:3;17942:12;17935:19;;17595:365;;;:::o;17966:419::-;18132:4;18170:2;18159:9;18155:18;18147:26;;18219:9;18213:4;18209:20;18205:1;18194:9;18190:17;18183:47;18247:131;18373:4;18247:131;:::i;:::-;18239:139;;17966:419;;;:::o;18391:98::-;18442:6;18476:5;18470:12;18460:22;;18391:98;;;:::o;18495:168::-;18578:11;18612:6;18607:3;18600:19;18652:4;18647:3;18643:14;18628:29;;18495:168;;;;:::o;18669:373::-;18755:3;18783:38;18815:5;18783:38;:::i;:::-;18837:70;18900:6;18895:3;18837:70;:::i;:::-;18830:77;;18916:65;18974:6;18969:3;18962:4;18955:5;18951:16;18916:65;:::i;:::-;19006:29;19028:6;19006:29;:::i;:::-;19001:3;18997:39;18990:46;;18759:283;18669:373;;;;:::o;19048:640::-;19243:4;19281:3;19270:9;19266:19;19258:27;;19295:71;19363:1;19352:9;19348:17;19339:6;19295:71;:::i;:::-;19376:72;19444:2;19433:9;19429:18;19420:6;19376:72;:::i;:::-;19458;19526:2;19515:9;19511:18;19502:6;19458:72;:::i;:::-;19577:9;19571:4;19567:20;19562:2;19551:9;19547:18;19540:48;19605:76;19676:4;19667:6;19605:76;:::i;:::-;19597:84;;19048:640;;;;;;;:::o;19694:141::-;19750:5;19781:6;19775:13;19766:22;;19797:32;19823:5;19797:32;:::i;:::-;19694:141;;;;:::o;19841:349::-;19910:6;19959:2;19947:9;19938:7;19934:23;19930:32;19927:119;;;19965:79;;:::i;:::-;19927:119;20085:1;20110:63;20165:7;20156:6;20145:9;20141:22;20110:63;:::i;:::-;20100:73;;20056:127;19841:349;;;;:::o;20196:332::-;20317:4;20355:2;20344:9;20340:18;20332:26;;20368:71;20436:1;20425:9;20421:17;20412:6;20368:71;:::i;:::-;20449:72;20517:2;20506:9;20502:18;20493:6;20449:72;:::i;:::-;20196:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1873000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"burn(uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"getLocation(address)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeMint(address)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "923",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateLocation(uint256)": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 490,
									"end": 2167,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 490,
									"end": 2167,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 490,
									"end": 2167,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "CALLVALUE",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "CODESIZE",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 785,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "tag",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 928,
									"end": 938,
									"name": "CALLER",
									"source": 18
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 912,
									"end": 918,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 952,
									"end": 956,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 946,
									"end": 949,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 946,
									"end": 956,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 946,
									"end": 956,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 946,
									"end": 956,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 946,
									"end": 956,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 946,
									"end": 956,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 946,
									"end": 956,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "9"
								},
								{
									"begin": 946,
									"end": 956,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 946,
									"end": 956,
									"modifierDepth": 2,
									"name": "tag",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 946,
									"end": 956,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 946,
									"end": 956,
									"modifierDepth": 2,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 981,
									"end": 998,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 962,
									"end": 978,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 962,
									"end": 978,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 18
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 962,
									"end": 998,
									"modifierDepth": 2,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 785,
									"end": 1005,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 490,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 490,
									"end": 2167,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "68"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 19,
									"value": "68"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "69"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "70"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 19,
									"value": "70"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 19,
									"value": "69"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "72"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 19,
									"value": "72"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 19,
									"value": "30"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "75"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "76"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 19,
									"value": "76"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 19,
									"value": "75"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "77"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 19,
									"value": "77"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 19,
									"value": "79"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "81"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "79"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 19,
									"value": "81"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "83"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "84"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "30"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 19,
									"value": "84"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 19,
									"value": "83"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "85"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "86"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 19,
									"value": "86"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 19,
									"value": "85"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "87"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 19,
									"value": "87"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "89"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "90"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 19,
									"value": "90"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 19,
									"value": "89"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "91"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 19,
									"value": "91"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "tag",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2714,
									"end": 2721,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2754,
									"end": 2796,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2747,
									"end": 2752,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2743,
									"end": 2797,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 2732,
									"end": 2797,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2732,
									"end": 2797,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2677,
									"end": 2803,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "tag",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2846,
									"end": 2853,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "94"
								},
								{
									"begin": 2893,
									"end": 2898,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 2875,
									"end": 2899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "tag",
									"source": 19,
									"value": "94"
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2864,
									"end": 2899,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2864,
									"end": 2899,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2809,
									"end": 2905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2911,
									"end": 3032,
									"name": "tag",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 2911,
									"end": 3032,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2973,
									"end": 2980,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3002,
									"end": 3026,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "96"
								},
								{
									"begin": 3020,
									"end": 3025,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3002,
									"end": 3026,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 3002,
									"end": 3026,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3002,
									"end": 3026,
									"name": "tag",
									"source": 19,
									"value": "96"
								},
								{
									"begin": 3002,
									"end": 3026,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2991,
									"end": 3026,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2991,
									"end": 3026,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2911,
									"end": 3032,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2911,
									"end": 3032,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2911,
									"end": 3032,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2911,
									"end": 3032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3038,
									"end": 3210,
									"name": "tag",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 3038,
									"end": 3210,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3136,
									"end": 3185,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "98"
								},
								{
									"begin": 3179,
									"end": 3184,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3136,
									"end": 3185,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 3136,
									"end": 3185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3136,
									"end": 3185,
									"name": "tag",
									"source": 19,
									"value": "98"
								},
								{
									"begin": 3136,
									"end": 3185,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3129,
									"end": 3134,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3126,
									"end": 3186,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 3116,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "99"
								},
								{
									"begin": 3116,
									"end": 3204,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 3200,
									"end": 3201,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3197,
									"end": 3198,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 3190,
									"end": 3202,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 3116,
									"end": 3204,
									"name": "tag",
									"source": 19,
									"value": "99"
								},
								{
									"begin": 3116,
									"end": 3204,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3038,
									"end": 3210,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3038,
									"end": 3210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3216,
									"end": 3409,
									"name": "tag",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 3216,
									"end": 3409,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3298,
									"end": 3303,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3329,
									"end": 3335,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3323,
									"end": 3336,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 3314,
									"end": 3336,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3314,
									"end": 3336,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3345,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "101"
								},
								{
									"begin": 3397,
									"end": 3402,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3345,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 3345,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3345,
									"end": 3403,
									"name": "tag",
									"source": 19,
									"value": "101"
								},
								{
									"begin": 3345,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3216,
									"end": 3409,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 3216,
									"end": 3409,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 3216,
									"end": 3409,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3216,
									"end": 3409,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3216,
									"end": 3409,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3415,
									"end": 4804,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 3415,
									"end": 4804,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3567,
									"end": 3573,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3575,
									"end": 3581,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 3583,
									"end": 3589,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3591,
									"end": 3597,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 3640,
									"end": 3643,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 3628,
									"end": 3637,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 3619,
									"end": 3626,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 3615,
									"end": 3638,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 3611,
									"end": 3644,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 3608,
									"end": 3728,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 3608,
									"end": 3728,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "103"
								},
								{
									"begin": 3608,
									"end": 3728,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 3647,
									"end": 3726,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "104"
								},
								{
									"begin": 3647,
									"end": 3726,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 3647,
									"end": 3726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3647,
									"end": 3726,
									"name": "tag",
									"source": 19,
									"value": "104"
								},
								{
									"begin": 3647,
									"end": 3726,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3608,
									"end": 3728,
									"name": "tag",
									"source": 19,
									"value": "103"
								},
								{
									"begin": 3608,
									"end": 3728,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3788,
									"end": 3789,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3777,
									"end": 3786,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 3773,
									"end": 3790,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 3767,
									"end": 3791,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 3818,
									"end": 3836,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3810,
									"end": 3816,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3807,
									"end": 3837,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 3804,
									"end": 3921,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 3804,
									"end": 3921,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "105"
								},
								{
									"begin": 3804,
									"end": 3921,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 3840,
									"end": 3919,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "106"
								},
								{
									"begin": 3840,
									"end": 3919,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 3840,
									"end": 3919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3840,
									"end": 3919,
									"name": "tag",
									"source": 19,
									"value": "106"
								},
								{
									"begin": 3840,
									"end": 3919,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3804,
									"end": 3921,
									"name": "tag",
									"source": 19,
									"value": "105"
								},
								{
									"begin": 3804,
									"end": 3921,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3945,
									"end": 4019,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "107"
								},
								{
									"begin": 4011,
									"end": 4018,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 4002,
									"end": 4008,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3991,
									"end": 4000,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 3987,
									"end": 4009,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 3945,
									"end": 4019,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 3945,
									"end": 4019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3945,
									"end": 4019,
									"name": "tag",
									"source": 19,
									"value": "107"
								},
								{
									"begin": 3945,
									"end": 4019,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3935,
									"end": 4019,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 3935,
									"end": 4019,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3738,
									"end": 4029,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4089,
									"end": 4091,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 4078,
									"end": 4087,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4068,
									"end": 4093,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 4120,
									"end": 4138,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4112,
									"end": 4118,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4109,
									"end": 4139,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 4106,
									"end": 4223,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 4106,
									"end": 4223,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "108"
								},
								{
									"begin": 4106,
									"end": 4223,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 4142,
									"end": 4221,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "109"
								},
								{
									"begin": 4142,
									"end": 4221,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 4142,
									"end": 4221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4142,
									"end": 4221,
									"name": "tag",
									"source": 19,
									"value": "109"
								},
								{
									"begin": 4142,
									"end": 4221,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4106,
									"end": 4223,
									"name": "tag",
									"source": 19,
									"value": "108"
								},
								{
									"begin": 4106,
									"end": 4223,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4247,
									"end": 4321,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "110"
								},
								{
									"begin": 4313,
									"end": 4320,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 4304,
									"end": 4310,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4293,
									"end": 4302,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 4289,
									"end": 4311,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4247,
									"end": 4321,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 4247,
									"end": 4321,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4247,
									"end": 4321,
									"name": "tag",
									"source": 19,
									"value": "110"
								},
								{
									"begin": 4247,
									"end": 4321,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4237,
									"end": 4321,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 4237,
									"end": 4321,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4039,
									"end": 4331,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4391,
									"end": 4393,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 4380,
									"end": 4389,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 4376,
									"end": 4394,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4370,
									"end": 4395,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 4422,
									"end": 4440,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4414,
									"end": 4420,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4411,
									"end": 4441,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 4408,
									"end": 4525,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 4408,
									"end": 4525,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "111"
								},
								{
									"begin": 4408,
									"end": 4525,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 4444,
									"end": 4523,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "112"
								},
								{
									"begin": 4444,
									"end": 4523,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 4444,
									"end": 4523,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4444,
									"end": 4523,
									"name": "tag",
									"source": 19,
									"value": "112"
								},
								{
									"begin": 4444,
									"end": 4523,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4408,
									"end": 4525,
									"name": "tag",
									"source": 19,
									"value": "111"
								},
								{
									"begin": 4408,
									"end": 4525,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4549,
									"end": 4623,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "113"
								},
								{
									"begin": 4615,
									"end": 4622,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 4606,
									"end": 4612,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4595,
									"end": 4604,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 4591,
									"end": 4613,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4549,
									"end": 4623,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 4549,
									"end": 4623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4549,
									"end": 4623,
									"name": "tag",
									"source": 19,
									"value": "113"
								},
								{
									"begin": 4549,
									"end": 4623,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4539,
									"end": 4623,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 4539,
									"end": 4623,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4341,
									"end": 4633,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4672,
									"end": 4674,
									"name": "PUSH",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 4698,
									"end": 4787,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "114"
								},
								{
									"begin": 4779,
									"end": 4786,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 4770,
									"end": 4776,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4759,
									"end": 4768,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 4755,
									"end": 4777,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4698,
									"end": 4787,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 4698,
									"end": 4787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4698,
									"end": 4787,
									"name": "tag",
									"source": 19,
									"value": "114"
								},
								{
									"begin": 4698,
									"end": 4787,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4688,
									"end": 4787,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4688,
									"end": 4787,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4643,
									"end": 4797,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3415,
									"end": 4804,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 3415,
									"end": 4804,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 3415,
									"end": 4804,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 3415,
									"end": 4804,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 3415,
									"end": 4804,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3415,
									"end": 4804,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 3415,
									"end": 4804,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3415,
									"end": 4804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4810,
									"end": 4909,
									"name": "tag",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 4810,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4862,
									"end": 4868,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4896,
									"end": 4901,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4890,
									"end": 4902,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 4880,
									"end": 4902,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4880,
									"end": 4902,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4810,
									"end": 4909,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4810,
									"end": 4909,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4810,
									"end": 4909,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4810,
									"end": 4909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4915,
									"end": 5095,
									"name": "tag",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 4915,
									"end": 5095,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4963,
									"end": 5040,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4960,
									"end": 4961,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4953,
									"end": 5041,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 5060,
									"end": 5064,
									"name": "PUSH",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 5057,
									"end": 5058,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 5050,
									"end": 5065,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 5084,
									"end": 5088,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 5081,
									"end": 5082,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5074,
									"end": 5089,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 5101,
									"end": 5421,
									"name": "tag",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 5101,
									"end": 5421,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5145,
									"end": 5151,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5182,
									"end": 5183,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 5176,
									"end": 5180,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5172,
									"end": 5184,
									"name": "DIV",
									"source": 19
								},
								{
									"begin": 5162,
									"end": 5184,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5162,
									"end": 5184,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5229,
									"end": 5230,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 5223,
									"end": 5227,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5219,
									"end": 5231,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 5250,
									"end": 5268,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 5240,
									"end": 5321,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "118"
								},
								{
									"begin": 5240,
									"end": 5321,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5306,
									"end": 5310,
									"name": "PUSH",
									"source": 19,
									"value": "7F"
								},
								{
									"begin": 5298,
									"end": 5304,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5294,
									"end": 5311,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 5284,
									"end": 5311,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 5284,
									"end": 5311,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5240,
									"end": 5321,
									"name": "tag",
									"source": 19,
									"value": "118"
								},
								{
									"begin": 5240,
									"end": 5321,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5368,
									"end": 5370,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5360,
									"end": 5366,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5357,
									"end": 5371,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 5337,
									"end": 5355,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5334,
									"end": 5372,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 5331,
									"end": 5415,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "119"
								},
								{
									"begin": 5331,
									"end": 5415,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5387,
									"end": 5405,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "120"
								},
								{
									"begin": 5387,
									"end": 5405,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 5387,
									"end": 5405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5387,
									"end": 5405,
									"name": "tag",
									"source": 19,
									"value": "120"
								},
								{
									"begin": 5387,
									"end": 5405,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5331,
									"end": 5415,
									"name": "tag",
									"source": 19,
									"value": "119"
								},
								{
									"begin": 5331,
									"end": 5415,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5152,
									"end": 5421,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5101,
									"end": 5421,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 5101,
									"end": 5421,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5101,
									"end": 5421,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5101,
									"end": 5421,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5427,
									"end": 5568,
									"name": "tag",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 5427,
									"end": 5568,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5476,
									"end": 5480,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5499,
									"end": 5502,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5491,
									"end": 5502,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5491,
									"end": 5502,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5522,
									"end": 5525,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5519,
									"end": 5520,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5512,
									"end": 5526,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 5556,
									"end": 5560,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5553,
									"end": 5554,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5543,
									"end": 5561,
									"name": "KECCAK256",
									"source": 19
								},
								{
									"begin": 5535,
									"end": 5561,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5535,
									"end": 5561,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5427,
									"end": 5568,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 5427,
									"end": 5568,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5427,
									"end": 5568,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5427,
									"end": 5568,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5574,
									"end": 5667,
									"name": "tag",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 5574,
									"end": 5667,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5611,
									"end": 5617,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5658,
									"end": 5660,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 5653,
									"end": 5655,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 5646,
									"end": 5651,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 5642,
									"end": 5656,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5638,
									"end": 5661,
									"name": "DIV",
									"source": 19
								},
								{
									"begin": 5628,
									"end": 5661,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5628,
									"end": 5661,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5574,
									"end": 5667,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 5574,
									"end": 5667,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5574,
									"end": 5667,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5574,
									"end": 5667,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5673,
									"end": 5780,
									"name": "tag",
									"source": 19,
									"value": "44"
								},
								{
									"begin": 5673,
									"end": 5780,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5717,
									"end": 5725,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5767,
									"end": 5772,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5761,
									"end": 5765,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5757,
									"end": 5773,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 5736,
									"end": 5773,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5736,
									"end": 5773,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5673,
									"end": 5780,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 5673,
									"end": 5780,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 5673,
									"end": 5780,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5673,
									"end": 5780,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5673,
									"end": 5780,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5786,
									"end": 6179,
									"name": "tag",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 5786,
									"end": 6179,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5905,
									"end": 5906,
									"name": "PUSH",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 5893,
									"end": 5903,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 5889,
									"end": 5907,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 5928,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "125"
								},
								{
									"begin": 5958,
									"end": 6024,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5947,
									"end": 5956,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5928,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "44"
								},
								{
									"begin": 5928,
									"end": 6025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5928,
									"end": 6025,
									"name": "tag",
									"source": 19,
									"value": "125"
								},
								{
									"begin": 5928,
									"end": 6025,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6046,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "126"
								},
								{
									"begin": 6076,
									"end": 6084,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 6065,
									"end": 6074,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6046,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "44"
								},
								{
									"begin": 6046,
									"end": 6085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6046,
									"end": 6085,
									"name": "tag",
									"source": 19,
									"value": "126"
								},
								{
									"begin": 6046,
									"end": 6085,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6034,
									"end": 6085,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 6034,
									"end": 6085,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6118,
									"end": 6122,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 6114,
									"end": 6123,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 6107,
									"end": 6112,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 6103,
									"end": 6124,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 6094,
									"end": 6124,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 6094,
									"end": 6124,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6167,
									"end": 6171,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 6157,
									"end": 6165,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 6153,
									"end": 6172,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 6146,
									"end": 6151,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 6143,
									"end": 6173,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 6133,
									"end": 6173,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 6133,
									"end": 6173,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5862,
									"end": 6179,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5862,
									"end": 6179,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5786,
									"end": 6179,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 5786,
									"end": 6179,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 5786,
									"end": 6179,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5786,
									"end": 6179,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5786,
									"end": 6179,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5786,
									"end": 6179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6185,
									"end": 6262,
									"name": "tag",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 6185,
									"end": 6262,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6222,
									"end": 6229,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6251,
									"end": 6256,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 6240,
									"end": 6256,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6240,
									"end": 6256,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6185,
									"end": 6262,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 6185,
									"end": 6262,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6185,
									"end": 6262,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6185,
									"end": 6262,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6268,
									"end": 6328,
									"name": "tag",
									"source": 19,
									"value": "47"
								},
								{
									"begin": 6268,
									"end": 6328,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6296,
									"end": 6299,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6322,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 6310,
									"end": 6322,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6310,
									"end": 6322,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6268,
									"end": 6328,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 6268,
									"end": 6328,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6268,
									"end": 6328,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6268,
									"end": 6328,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6334,
									"end": 6476,
									"name": "tag",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 6334,
									"end": 6476,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6384,
									"end": 6393,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6417,
									"end": 6470,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "130"
								},
								{
									"begin": 6435,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "131"
								},
								{
									"begin": 6444,
									"end": 6468,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "132"
								},
								{
									"begin": 6462,
									"end": 6467,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 6444,
									"end": 6468,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 6444,
									"end": 6468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6444,
									"end": 6468,
									"name": "tag",
									"source": 19,
									"value": "132"
								},
								{
									"begin": 6444,
									"end": 6468,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6435,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "47"
								},
								{
									"begin": 6435,
									"end": 6469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6435,
									"end": 6469,
									"name": "tag",
									"source": 19,
									"value": "131"
								},
								{
									"begin": 6435,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6417,
									"end": 6470,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 6417,
									"end": 6470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6417,
									"end": 6470,
									"name": "tag",
									"source": 19,
									"value": "130"
								},
								{
									"begin": 6417,
									"end": 6470,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6404,
									"end": 6470,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6404,
									"end": 6470,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6334,
									"end": 6476,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 6334,
									"end": 6476,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6334,
									"end": 6476,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6334,
									"end": 6476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6482,
									"end": 6557,
									"name": "tag",
									"source": 19,
									"value": "49"
								},
								{
									"begin": 6482,
									"end": 6557,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6525,
									"end": 6528,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6546,
									"end": 6551,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 6539,
									"end": 6551,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6539,
									"end": 6551,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6482,
									"end": 6557,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 6482,
									"end": 6557,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6482,
									"end": 6557,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6482,
									"end": 6557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6563,
									"end": 6832,
									"name": "tag",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 6563,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6673,
									"end": 6712,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "135"
								},
								{
									"begin": 6704,
									"end": 6711,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6673,
									"end": 6712,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 6673,
									"end": 6712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6673,
									"end": 6712,
									"name": "tag",
									"source": 19,
									"value": "135"
								},
								{
									"begin": 6673,
									"end": 6712,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6734,
									"end": 6825,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "136"
								},
								{
									"begin": 6783,
									"end": 6824,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "137"
								},
								{
									"begin": 6807,
									"end": 6823,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6783,
									"end": 6824,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "49"
								},
								{
									"begin": 6783,
									"end": 6824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6783,
									"end": 6824,
									"name": "tag",
									"source": 19,
									"value": "137"
								},
								{
									"begin": 6783,
									"end": 6824,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6775,
									"end": 6781,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 6768,
									"end": 6772,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 6762,
									"end": 6773,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 6734,
									"end": 6825,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 6734,
									"end": 6825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6734,
									"end": 6825,
									"name": "tag",
									"source": 19,
									"value": "136"
								},
								{
									"begin": 6734,
									"end": 6825,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6728,
									"end": 6732,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6721,
									"end": 6826,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 6639,
									"end": 6832,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6563,
									"end": 6832,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6563,
									"end": 6832,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6563,
									"end": 6832,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6563,
									"end": 6832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6838,
									"end": 6911,
									"name": "tag",
									"source": 19,
									"value": "51"
								},
								{
									"begin": 6838,
									"end": 6911,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6883,
									"end": 6886,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6838,
									"end": 6911,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6838,
									"end": 6911,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6917,
									"end": 7106,
									"name": "tag",
									"source": 19,
									"value": "52"
								},
								{
									"begin": 6917,
									"end": 7106,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6994,
									"end": 7026,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "140"
								},
								{
									"begin": 6994,
									"end": 7026,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "51"
								},
								{
									"begin": 6994,
									"end": 7026,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6994,
									"end": 7026,
									"name": "tag",
									"source": 19,
									"value": "140"
								},
								{
									"begin": 6994,
									"end": 7026,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7035,
									"end": 7100,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "141"
								},
								{
									"begin": 7093,
									"end": 7099,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7085,
									"end": 7091,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 7079,
									"end": 7083,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 7035,
									"end": 7100,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 7035,
									"end": 7100,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7035,
									"end": 7100,
									"name": "tag",
									"source": 19,
									"value": "141"
								},
								{
									"begin": 7035,
									"end": 7100,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6970,
									"end": 7106,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6917,
									"end": 7106,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6917,
									"end": 7106,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6917,
									"end": 7106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7112,
									"end": 7298,
									"name": "tag",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 7112,
									"end": 7298,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7172,
									"end": 7292,
									"name": "tag",
									"source": 19,
									"value": "143"
								},
								{
									"begin": 7172,
									"end": 7292,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7189,
									"end": 7192,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7182,
									"end": 7187,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7179,
									"end": 7193,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 7172,
									"end": 7292,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 7172,
									"end": 7292,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "145"
								},
								{
									"begin": 7172,
									"end": 7292,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 7243,
									"end": 7282,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "146"
								},
								{
									"begin": 7280,
									"end": 7281,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 7273,
									"end": 7278,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 7243,
									"end": 7282,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "52"
								},
								{
									"begin": 7243,
									"end": 7282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7243,
									"end": 7282,
									"name": "tag",
									"source": 19,
									"value": "146"
								},
								{
									"begin": 7243,
									"end": 7282,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7216,
									"end": 7217,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 7209,
									"end": 7214,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7205,
									"end": 7218,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 7196,
									"end": 7218,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7196,
									"end": 7218,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7172,
									"end": 7292,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "143"
								},
								{
									"begin": 7172,
									"end": 7292,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7172,
									"end": 7292,
									"name": "tag",
									"source": 19,
									"value": "145"
								},
								{
									"begin": 7172,
									"end": 7292,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7112,
									"end": 7298,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7112,
									"end": 7298,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7112,
									"end": 7298,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7304,
									"end": 7847,
									"name": "tag",
									"source": 19,
									"value": "54"
								},
								{
									"begin": 7304,
									"end": 7847,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7405,
									"end": 7407,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 7400,
									"end": 7403,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 7397,
									"end": 7408,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 7394,
									"end": 7840,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 7394,
									"end": 7840,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "148"
								},
								{
									"begin": 7394,
									"end": 7840,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 7439,
									"end": 7477,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "149"
								},
								{
									"begin": 7471,
									"end": 7476,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7439,
									"end": 7477,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 7439,
									"end": 7477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7439,
									"end": 7477,
									"name": "tag",
									"source": 19,
									"value": "149"
								},
								{
									"begin": 7439,
									"end": 7477,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7523,
									"end": 7552,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "150"
								},
								{
									"begin": 7541,
									"end": 7551,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 7523,
									"end": 7552,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 7523,
									"end": 7552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7523,
									"end": 7552,
									"name": "tag",
									"source": 19,
									"value": "150"
								},
								{
									"begin": 7523,
									"end": 7552,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7513,
									"end": 7521,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7509,
									"end": 7553,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 7706,
									"end": 7708,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 7694,
									"end": 7704,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 7691,
									"end": 7709,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 7688,
									"end": 7737,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 7688,
									"end": 7737,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "151"
								},
								{
									"begin": 7688,
									"end": 7737,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 7727,
									"end": 7735,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7712,
									"end": 7735,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7712,
									"end": 7735,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7688,
									"end": 7737,
									"name": "tag",
									"source": 19,
									"value": "151"
								},
								{
									"begin": 7688,
									"end": 7737,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7750,
									"end": 7830,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "152"
								},
								{
									"begin": 7806,
									"end": 7828,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "153"
								},
								{
									"begin": 7824,
									"end": 7827,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 7806,
									"end": 7828,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 7806,
									"end": 7828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7806,
									"end": 7828,
									"name": "tag",
									"source": 19,
									"value": "153"
								},
								{
									"begin": 7806,
									"end": 7828,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7796,
									"end": 7804,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 7792,
									"end": 7829,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 7779,
									"end": 7790,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 7750,
									"end": 7830,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 7750,
									"end": 7830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7750,
									"end": 7830,
									"name": "tag",
									"source": 19,
									"value": "152"
								},
								{
									"begin": 7750,
									"end": 7830,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7409,
									"end": 7840,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7409,
									"end": 7840,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7394,
									"end": 7840,
									"name": "tag",
									"source": 19,
									"value": "148"
								},
								{
									"begin": 7394,
									"end": 7840,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7304,
									"end": 7847,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7304,
									"end": 7847,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7304,
									"end": 7847,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7304,
									"end": 7847,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7853,
									"end": 7970,
									"name": "tag",
									"source": 19,
									"value": "55"
								},
								{
									"begin": 7853,
									"end": 7970,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7907,
									"end": 7915,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 7957,
									"end": 7962,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 7951,
									"end": 7955,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 7947,
									"end": 7963,
									"name": "SHR",
									"source": 19
								},
								{
									"begin": 7926,
									"end": 7963,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7926,
									"end": 7963,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7853,
									"end": 7970,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 7853,
									"end": 7970,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 7853,
									"end": 7970,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7853,
									"end": 7970,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7853,
									"end": 7970,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7976,
									"end": 8145,
									"name": "tag",
									"source": 19,
									"value": "56"
								},
								{
									"begin": 7976,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8020,
									"end": 8026,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 8053,
									"end": 8104,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "156"
								},
								{
									"begin": 8101,
									"end": 8102,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 8097,
									"end": 8103,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 8089,
									"end": 8094,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 8086,
									"end": 8087,
									"name": "PUSH",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 8082,
									"end": 8095,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 8053,
									"end": 8104,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "55"
								},
								{
									"begin": 8053,
									"end": 8104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8053,
									"end": 8104,
									"name": "tag",
									"source": 19,
									"value": "156"
								},
								{
									"begin": 8053,
									"end": 8104,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8049,
									"end": 8105,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 8134,
									"end": 8138,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 8128,
									"end": 8132,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 8124,
									"end": 8139,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 8114,
									"end": 8139,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 8114,
									"end": 8139,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8027,
									"end": 8145,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7976,
									"end": 8145,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 7976,
									"end": 8145,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 7976,
									"end": 8145,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7976,
									"end": 8145,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7976,
									"end": 8145,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8150,
									"end": 8445,
									"name": "tag",
									"source": 19,
									"value": "57"
								},
								{
									"begin": 8150,
									"end": 8445,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8226,
									"end": 8230,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 8372,
									"end": 8401,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "158"
								},
								{
									"begin": 8397,
									"end": 8400,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 8391,
									"end": 8395,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 8372,
									"end": 8401,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "56"
								},
								{
									"begin": 8372,
									"end": 8401,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8372,
									"end": 8401,
									"name": "tag",
									"source": 19,
									"value": "158"
								},
								{
									"begin": 8372,
									"end": 8401,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8364,
									"end": 8401,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 8364,
									"end": 8401,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8434,
									"end": 8437,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 8431,
									"end": 8432,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 8427,
									"end": 8438,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 8421,
									"end": 8425,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 8418,
									"end": 8439,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 8410,
									"end": 8439,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 8410,
									"end": 8439,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8150,
									"end": 8445,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 8150,
									"end": 8445,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 8150,
									"end": 8445,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8150,
									"end": 8445,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8150,
									"end": 8445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8450,
									"end": 9845,
									"name": "tag",
									"source": 19,
									"value": "9"
								},
								{
									"begin": 8450,
									"end": 9845,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8567,
									"end": 8604,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "160"
								},
								{
									"begin": 8600,
									"end": 8603,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 8567,
									"end": 8604,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 8567,
									"end": 8604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8567,
									"end": 8604,
									"name": "tag",
									"source": 19,
									"value": "160"
								},
								{
									"begin": 8567,
									"end": 8604,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8669,
									"end": 8687,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8661,
									"end": 8667,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 8658,
									"end": 8688,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 8655,
									"end": 8711,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 8655,
									"end": 8711,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "161"
								},
								{
									"begin": 8655,
									"end": 8711,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 8691,
									"end": 8709,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "162"
								},
								{
									"begin": 8691,
									"end": 8709,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 8691,
									"end": 8709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8691,
									"end": 8709,
									"name": "tag",
									"source": 19,
									"value": "162"
								},
								{
									"begin": 8691,
									"end": 8709,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8655,
									"end": 8711,
									"name": "tag",
									"source": 19,
									"value": "161"
								},
								{
									"begin": 8655,
									"end": 8711,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8735,
									"end": 8773,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "163"
								},
								{
									"begin": 8767,
									"end": 8771,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 8761,
									"end": 8772,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 8735,
									"end": 8773,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 8735,
									"end": 8773,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8735,
									"end": 8773,
									"name": "tag",
									"source": 19,
									"value": "163"
								},
								{
									"begin": 8735,
									"end": 8773,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8820,
									"end": 8887,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "164"
								},
								{
									"begin": 8880,
									"end": 8886,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 8872,
									"end": 8878,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 8866,
									"end": 8870,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 8820,
									"end": 8887,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "54"
								},
								{
									"begin": 8820,
									"end": 8887,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8820,
									"end": 8887,
									"name": "tag",
									"source": 19,
									"value": "164"
								},
								{
									"begin": 8820,
									"end": 8887,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8914,
									"end": 8915,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 8938,
									"end": 8942,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 8925,
									"end": 8942,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 8925,
									"end": 8942,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8970,
									"end": 8972,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 8962,
									"end": 8968,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 8959,
									"end": 8973,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 8987,
									"end": 8988,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 8982,
									"end": 9600,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 8982,
									"end": 9600,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 8982,
									"end": 9600,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "166"
								},
								{
									"begin": 8982,
									"end": 9600,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 9644,
									"end": 9645,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 9661,
									"end": 9667,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 9658,
									"end": 9735,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 9658,
									"end": 9735,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "167"
								},
								{
									"begin": 9658,
									"end": 9735,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 9710,
									"end": 9719,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 9705,
									"end": 9708,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 9701,
									"end": 9720,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 9695,
									"end": 9721,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 9686,
									"end": 9721,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 9686,
									"end": 9721,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 9658,
									"end": 9735,
									"name": "tag",
									"source": 19,
									"value": "167"
								},
								{
									"begin": 9658,
									"end": 9735,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 9761,
									"end": 9828,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "168"
								},
								{
									"begin": 9821,
									"end": 9827,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 9814,
									"end": 9819,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 9761,
									"end": 9828,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "57"
								},
								{
									"begin": 9761,
									"end": 9828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 9761,
									"end": 9828,
									"name": "tag",
									"source": 19,
									"value": "168"
								},
								{
									"begin": 9761,
									"end": 9828,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 9755,
									"end": 9759,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 9748,
									"end": 9829,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 9617,
									"end": 9839,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8952,
									"end": 9839,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "165"
								},
								{
									"begin": 8952,
									"end": 9839,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8982,
									"end": 9600,
									"name": "tag",
									"source": 19,
									"value": "166"
								},
								{
									"begin": 8982,
									"end": 9600,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 9034,
									"end": 9038,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 9030,
									"end": 9039,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 9022,
									"end": 9028,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 9018,
									"end": 9040,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 9068,
									"end": 9105,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "169"
								},
								{
									"begin": 9100,
									"end": 9104,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 9068,
									"end": 9105,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 9068,
									"end": 9105,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 9068,
									"end": 9105,
									"name": "tag",
									"source": 19,
									"value": "169"
								},
								{
									"begin": 9068,
									"end": 9105,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 9127,
									"end": 9128,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 9141,
									"end": 9349,
									"name": "tag",
									"source": 19,
									"value": "170"
								},
								{
									"begin": 9141,
									"end": 9349,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 9155,
									"end": 9162,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 9152,
									"end": 9153,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 9149,
									"end": 9163,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 9141,
									"end": 9349,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 9141,
									"end": 9349,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "172"
								},
								{
									"begin": 9141,
									"end": 9349,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 9234,
									"end": 9243,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 9229,
									"end": 9232,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 9225,
									"end": 9244,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 9219,
									"end": 9245,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 9211,
									"end": 9217,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 9204,
									"end": 9246,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 9285,
									"end": 9286,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 9277,
									"end": 9283,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 9273,
									"end": 9287,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 9263,
									"end": 9287,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 9263,
									"end": 9287,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 9332,
									"end": 9334,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 9321,
									"end": 9330,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 9317,
									"end": 9335,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 9304,
									"end": 9335,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 9304,
									"end": 9335,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 9178,
									"end": 9182,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 9175,
									"end": 9176,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 9171,
									"end": 9183,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 9166,
									"end": 9183,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 9166,
									"end": 9183,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 9141,
									"end": 9349,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "170"
								},
								{
									"begin": 9141,
									"end": 9349,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 9141,
									"end": 9349,
									"name": "tag",
									"source": 19,
									"value": "172"
								},
								{
									"begin": 9141,
									"end": 9349,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 9377,
									"end": 9383,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 9368,
									"end": 9375,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 9365,
									"end": 9384,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 9362,
									"end": 9541,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 9362,
									"end": 9541,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "173"
								},
								{
									"begin": 9362,
									"end": 9541,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 9435,
									"end": 9444,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 9430,
									"end": 9433,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 9426,
									"end": 9445,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 9420,
									"end": 9446,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 9478,
									"end": 9526,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "174"
								},
								{
									"begin": 9520,
									"end": 9524,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 9512,
									"end": 9518,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 9508,
									"end": 9525,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 9497,
									"end": 9506,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 9478,
									"end": 9526,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "56"
								},
								{
									"begin": 9478,
									"end": 9526,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 9478,
									"end": 9526,
									"name": "tag",
									"source": 19,
									"value": "174"
								},
								{
									"begin": 9478,
									"end": 9526,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 9470,
									"end": 9476,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 9463,
									"end": 9527,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 9385,
									"end": 9541,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 9362,
									"end": 9541,
									"name": "tag",
									"source": 19,
									"value": "173"
								},
								{
									"begin": 9362,
									"end": 9541,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 9587,
									"end": 9588,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 9583,
									"end": 9584,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 9575,
									"end": 9581,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 9571,
									"end": 9585,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 9567,
									"end": 9589,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 9561,
									"end": 9565,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 9554,
									"end": 9590,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 8989,
									"end": 9600,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8989,
									"end": 9600,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8989,
									"end": 9600,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8952,
									"end": 9839,
									"name": "tag",
									"source": 19,
									"value": "165"
								},
								{
									"begin": 8952,
									"end": 9839,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8952,
									"end": 9839,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8542,
									"end": 9845,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8542,
									"end": 9845,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8542,
									"end": 9845,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8450,
									"end": 9845,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8450,
									"end": 9845,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8450,
									"end": 9845,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 9851,
									"end": 9969,
									"name": "tag",
									"source": 19,
									"value": "58"
								},
								{
									"begin": 9851,
									"end": 9969,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 9938,
									"end": 9962,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "176"
								},
								{
									"begin": 9956,
									"end": 9961,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 9938,
									"end": 9962,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 9938,
									"end": 9962,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 9938,
									"end": 9962,
									"name": "tag",
									"source": 19,
									"value": "176"
								},
								{
									"begin": 9938,
									"end": 9962,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 9933,
									"end": 9936,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 9926,
									"end": 9963,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 9851,
									"end": 9969,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 9851,
									"end": 9969,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 9851,
									"end": 9969,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 9975,
									"end": 10197,
									"name": "tag",
									"source": 19,
									"value": "14"
								},
								{
									"begin": 9975,
									"end": 10197,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 10068,
									"end": 10072,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 10106,
									"end": 10108,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 10095,
									"end": 10104,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 10091,
									"end": 10109,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 10083,
									"end": 10109,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 10083,
									"end": 10109,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 10119,
									"end": 10190,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "178"
								},
								{
									"begin": 10187,
									"end": 10188,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 10176,
									"end": 10185,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 10172,
									"end": 10189,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 10163,
									"end": 10169,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 10119,
									"end": 10190,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "58"
								},
								{
									"begin": 10119,
									"end": 10190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 10119,
									"end": 10190,
									"name": "tag",
									"source": 19,
									"value": "178"
								},
								{
									"begin": 10119,
									"end": 10190,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 9975,
									"end": 10197,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 9975,
									"end": 10197,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 9975,
									"end": 10197,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 9975,
									"end": 10197,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 9975,
									"end": 10197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 490,
									"end": 2167,
									"name": "tag",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 490,
									"end": 2167,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 490,
									"end": 2167,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 490,
									"end": 2167,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 490,
									"end": 2167,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 490,
									"end": 2167,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2167,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 490,
									"end": 2167,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2167,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220604836e18d0388ca716f66e590a12d0e67b32de16a41f84319f925ef8b28c78264736f6c63430008160033",
									".code": [
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "B88D4FDE"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "B88D4FDE"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "C87B56DD"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "D9E0DC59"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "E985E9C5"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "F2FDE38B"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "tag",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "715018A6"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "8DA5CB5B"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "95D89B41"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "A22CB465"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "tag",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "40D097C3"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "40D097C3"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "42842E0E"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "42966C68"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "47BAF0E9"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "6352211E"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "tag",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "1FFC9A7"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "6FDDE03"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "81812FC"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "95EA7B3"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 2167,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "tag",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "tag",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 1987,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "tag",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 1987,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "tag",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 1987,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "tag",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "tag",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 1012,
											"end": 1253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "tag",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 1012,
											"end": 1253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "tag",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 1012,
											"end": 1253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "tag",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 561,
											"end": 875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "tag",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "68"
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "tag",
											"source": 18,
											"value": "68"
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "tag",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 1582,
											"end": 1846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "tag",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "tag",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "tag",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "105"
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "tag",
											"source": 18,
											"value": "105"
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 1372,
											"end": 1576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "tag",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "107"
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 1372,
											"end": 1576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "tag",
											"source": 18,
											"value": "107"
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "tag",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "tag",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "109"
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 1852,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "tag",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "111"
										},
										{
											"begin": 1852,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "tag",
											"source": 18,
											"value": "109"
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 1852,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "tag",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "tag",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2098,
											"end": 2102,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 2145,
											"end": 2156,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2121,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 2121,
											"end": 2157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2121,
											"end": 2157,
											"name": "tag",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 2121,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2114,
											"end": 2157,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2114,
											"end": 2157,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "tag",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1066,
											"end": 1073,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "153"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1085,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 1085,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "tag",
											"source": 18,
											"value": "153"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1116,
											"end": 1131,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 1134,
											"end": 1143,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1134,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 1134,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1134,
											"end": 1153,
											"name": "tag",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 1134,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1116,
											"end": 1153,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1116,
											"end": 1153,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1205,
											"name": "PUSH",
											"source": 18,
											"value": "B"
										},
										{
											"begin": 1189,
											"end": 1205,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1205,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1205,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1205,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1205,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1189,
											"end": 1205,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1205,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1205,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1205,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1189,
											"end": 1205,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1217,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1189,
											"end": 1217,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1217,
											"name": "PUSH",
											"source": 18,
											"value": "D9E0DC59"
										},
										{
											"begin": 1218,
											"end": 1220,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 1189,
											"end": 1221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "tag",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "tag",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 1189,
											"end": 1221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "tag",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1177,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 1163,
											"end": 1186,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1185,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1186,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1186,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1186,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1186,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1186,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1186,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1186,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1186,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1186,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1186,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1186,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1221,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1221,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 1163,
											"end": 1221,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1221,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 1163,
											"end": 1221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1221,
											"name": "tag",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 1163,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1221,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1239,
											"end": 1246,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 826,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 842,
											"end": 843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 853,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 855,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 855,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 855,
											"end": 867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 855,
											"end": 867,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 855,
											"end": 867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 826,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 826,
											"end": 868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 826,
											"end": 868,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 826,
											"end": 868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 826,
											"end": 868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "tag",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1670,
											"end": 1680,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1650,
											"end": 1680,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1650,
											"end": 1680,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1650,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "170"
										},
										{
											"begin": 1658,
											"end": 1665,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1650,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "75"
										},
										{
											"begin": 1650,
											"end": 1666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1650,
											"end": 1666,
											"name": "tag",
											"source": 18,
											"value": "170"
										},
										{
											"begin": 1650,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1650,
											"end": 1680,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1650,
											"end": 1680,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1650,
											"end": 1680,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "172"
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 1642,
											"end": 1693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "tag",
											"source": 18,
											"value": "172"
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "tag",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 1642,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1704,
											"end": 1726,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH",
											"source": 18,
											"value": "B"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1757,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1729,
											"end": 1757,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1757,
											"name": "PUSH",
											"source": 18,
											"value": "D9E0DC59"
										},
										{
											"begin": 1758,
											"end": 1768,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 1729,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "tag",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "tag",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 1729,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "tag",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 1729,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1704,
											"end": 1769,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1704,
											"end": 1769,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1793,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1801,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1813,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1813,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 1779,
											"end": 1813,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1813,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 1779,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1813,
											"name": "tag",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 1779,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1813,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1632,
											"end": 1846,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "tag",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1470,
											"end": 1483,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1496,
											"end": 1518,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1535,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1543,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "206"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 1496,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "tag",
											"source": 18,
											"value": "206"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "207"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 1496,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "tag",
											"source": 18,
											"value": "207"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "208"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "209"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "208"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "tag",
											"source": 18,
											"value": "209"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "tag",
											"source": 18,
											"value": "210"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "210"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "tag",
											"source": 18,
											"value": "208"
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1496,
											"end": 1544,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1554,
											"end": 1569,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1554,
											"end": 1569,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1554,
											"end": 1569,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1372,
											"end": 1576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "tag",
											"source": 18,
											"value": "111"
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1908,
											"end": 1921,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1940,
											"end": 1956,
											"name": "PUSH",
											"source": 18,
											"value": "B"
										},
										{
											"begin": 1940,
											"end": 1956,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1956,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1956,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1956,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1956,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1940,
											"end": 1956,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1956,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1956,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1956,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1956,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1968,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1968,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1968,
											"name": "PUSH",
											"source": 18,
											"value": "D9E0DC59"
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "212"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 1940,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "tag",
											"source": 18,
											"value": "212"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "214"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "tag",
											"source": 18,
											"value": "214"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "215"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 1940,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "tag",
											"source": 18,
											"value": "215"
										},
										{
											"begin": 1940,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1933,
											"end": 1975,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1933,
											"end": 1975,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "49064906"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 19,
											"value": "312"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "374"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 19,
											"value": "374"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 19,
											"value": "315"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "377"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 19,
											"value": "377"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 19,
											"value": "28"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "381"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "315"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 19,
											"value": "381"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 19,
											"value": "316"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 19,
											"value": "317"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "384"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "316"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 19,
											"value": "384"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 19,
											"value": "31"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "317"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 19,
											"value": "318"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 19,
											"value": "319"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "318"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "319"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 19,
											"value": "36"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "409"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 19,
											"value": "409"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 19,
											"value": "326"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "326"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 19,
											"value": "43"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "417"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 19,
											"value": "417"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "422"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 19,
											"value": "422"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 19,
											"value": "56"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 19,
											"value": "59"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "316"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 19,
											"value": "96"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "450"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 19,
											"value": "450"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "463"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 19,
											"value": "463"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "470"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "471"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 19,
											"value": "471"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 19,
											"value": "470"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "472"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 19,
											"value": "472"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "474"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 19,
											"value": "474"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "481"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 19,
											"value": "481"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "312"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 19,
											"value": "116"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "487"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 19,
											"value": "487"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "489"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 19,
											"value": "489"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 19,
											"value": "128"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 19,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "tag",
											"source": 19,
											"value": "151"
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11132,
											"end": 11136,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11170,
											"end": 11172,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 11159,
											"end": 11168,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11155,
											"end": 11173,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11147,
											"end": 11173,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11147,
											"end": 11173,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11183,
											"end": 11254,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "497"
										},
										{
											"begin": 11251,
											"end": 11252,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11249,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11227,
											"end": 11233,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11183,
											"end": 11254,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 11183,
											"end": 11254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11183,
											"end": 11254,
											"name": "tag",
											"source": 19,
											"value": "497"
										},
										{
											"begin": 11183,
											"end": 11254,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11264,
											"end": 11336,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 11332,
											"end": 11334,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11317,
											"end": 11335,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11308,
											"end": 11314,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11264,
											"end": 11336,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 11264,
											"end": 11336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11264,
											"end": 11336,
											"name": "tag",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 11264,
											"end": 11336,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11346,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 11414,
											"end": 11416,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 11403,
											"end": 11412,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11399,
											"end": 11417,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11390,
											"end": 11396,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11346,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 11346,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11346,
											"end": 11418,
											"name": "tag",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 11346,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10983,
											"end": 11425,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10983,
											"end": 11425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11431,
											"end": 11739,
											"name": "tag",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 11431,
											"end": 11739,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11493,
											"end": 11497,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11583,
											"end": 11601,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11575,
											"end": 11581,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11572,
											"end": 11602,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 11569,
											"end": 11625,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11569,
											"end": 11625,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "501"
										},
										{
											"begin": 11569,
											"end": 11625,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 11605,
											"end": 11623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "tag",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11569,
											"end": 11625,
											"name": "tag",
											"source": 19,
											"value": "501"
										},
										{
											"begin": 11569,
											"end": 11625,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11643,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 11665,
											"end": 11671,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11643,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 11643,
											"end": 11672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11643,
											"end": 11672,
											"name": "tag",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 11643,
											"end": 11672,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11635,
											"end": 11672,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11635,
											"end": 11672,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11727,
											"end": 11731,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11721,
											"end": 11725,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11717,
											"end": 11732,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11709,
											"end": 11732,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11709,
											"end": 11732,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11431,
											"end": 11739,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11431,
											"end": 11739,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11431,
											"end": 11739,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11431,
											"end": 11739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11745,
											"end": 12179,
											"name": "tag",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 11745,
											"end": 12179,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11834,
											"end": 11839,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11859,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 11875,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 11917,
											"end": 11923,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11875,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 11875,
											"end": 11924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11875,
											"end": 11924,
											"name": "tag",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 11875,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11859,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 11859,
											"end": 11925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11859,
											"end": 11925,
											"name": "tag",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 11859,
											"end": 11925,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11850,
											"end": 11925,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11850,
											"end": 11925,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11948,
											"end": 11954,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11941,
											"end": 11946,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11934,
											"end": 11955,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11986,
											"end": 11990,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11979,
											"end": 11984,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11975,
											"end": 11991,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12024,
											"end": 12027,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12015,
											"end": 12021,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12010,
											"end": 12013,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12006,
											"end": 12022,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12003,
											"end": 12028,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 12000,
											"end": 12112,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12000,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 12000,
											"end": 12112,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12031,
											"end": 12110,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "508"
										},
										{
											"begin": 12031,
											"end": 12110,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 12031,
											"end": 12110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12031,
											"end": 12110,
											"name": "tag",
											"source": 19,
											"value": "508"
										},
										{
											"begin": 12031,
											"end": 12110,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12000,
											"end": 12112,
											"name": "tag",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 12000,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12121,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 12166,
											"end": 12172,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12161,
											"end": 12164,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12156,
											"end": 12159,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12121,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 12121,
											"end": 12173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12121,
											"end": 12173,
											"name": "tag",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 12121,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11840,
											"end": 12179,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11745,
											"end": 12179,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 11745,
											"end": 12179,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11745,
											"end": 12179,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11745,
											"end": 12179,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11745,
											"end": 12179,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11745,
											"end": 12179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12199,
											"end": 12554,
											"name": "tag",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 12199,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12266,
											"end": 12271,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12315,
											"end": 12318,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12308,
											"end": 12312,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 12300,
											"end": 12306,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12296,
											"end": 12313,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12292,
											"end": 12319,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 12282,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "511"
										},
										{
											"begin": 12282,
											"end": 12404,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12323,
											"end": 12402,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 12323,
											"end": 12402,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 12323,
											"end": 12402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12323,
											"end": 12402,
											"name": "tag",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 12323,
											"end": 12402,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12282,
											"end": 12404,
											"name": "tag",
											"source": 19,
											"value": "511"
										},
										{
											"begin": 12282,
											"end": 12404,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12433,
											"end": 12439,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12427,
											"end": 12440,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 12458,
											"end": 12548,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "513"
										},
										{
											"begin": 12544,
											"end": 12547,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12536,
											"end": 12542,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12529,
											"end": 12533,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12521,
											"end": 12527,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12517,
											"end": 12534,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12458,
											"end": 12548,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 12458,
											"end": 12548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12458,
											"end": 12548,
											"name": "tag",
											"source": 19,
											"value": "513"
										},
										{
											"begin": 12458,
											"end": 12548,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12449,
											"end": 12548,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12449,
											"end": 12548,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12272,
											"end": 12554,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12199,
											"end": 12554,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12199,
											"end": 12554,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12199,
											"end": 12554,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12199,
											"end": 12554,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12199,
											"end": 12554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12560,
											"end": 13084,
											"name": "tag",
											"source": 19,
											"value": "161"
										},
										{
											"begin": 12560,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12640,
											"end": 12646,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12689,
											"end": 12691,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12677,
											"end": 12686,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12668,
											"end": 12675,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12664,
											"end": 12687,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 12660,
											"end": 12692,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 12657,
											"end": 12776,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12657,
											"end": 12776,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 12657,
											"end": 12776,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12695,
											"end": 12774,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 12695,
											"end": 12774,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 12695,
											"end": 12774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12695,
											"end": 12774,
											"name": "tag",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 12695,
											"end": 12774,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12657,
											"end": 12776,
											"name": "tag",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 12657,
											"end": 12776,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12836,
											"end": 12837,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12825,
											"end": 12834,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12821,
											"end": 12838,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12815,
											"end": 12839,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12858,
											"end": 12864,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12855,
											"end": 12885,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 12852,
											"end": 12969,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12852,
											"end": 12969,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "517"
										},
										{
											"begin": 12852,
											"end": 12969,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12888,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "518"
										},
										{
											"begin": 12888,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "312"
										},
										{
											"begin": 12888,
											"end": 12967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12888,
											"end": 12967,
											"name": "tag",
											"source": 19,
											"value": "518"
										},
										{
											"begin": 12888,
											"end": 12967,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12852,
											"end": 12969,
											"name": "tag",
											"source": 19,
											"value": "517"
										},
										{
											"begin": 12852,
											"end": 12969,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12993,
											"end": 13067,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "519"
										},
										{
											"begin": 13059,
											"end": 13066,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13050,
											"end": 13056,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13039,
											"end": 13048,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13035,
											"end": 13057,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12993,
											"end": 13067,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 12993,
											"end": 13067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12993,
											"end": 13067,
											"name": "tag",
											"source": 19,
											"value": "519"
										},
										{
											"begin": 12993,
											"end": 13067,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12983,
											"end": 13067,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12983,
											"end": 13067,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12786,
											"end": 13077,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12560,
											"end": 13084,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12560,
											"end": 13084,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12560,
											"end": 13084,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12560,
											"end": 13084,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12560,
											"end": 13084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13090,
											"end": 13231,
											"name": "tag",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 13090,
											"end": 13231,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13139,
											"end": 13143,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13162,
											"end": 13165,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13154,
											"end": 13165,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13154,
											"end": 13165,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13185,
											"end": 13188,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13182,
											"end": 13183,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13175,
											"end": 13189,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13219,
											"end": 13223,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13216,
											"end": 13217,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13206,
											"end": 13224,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 13198,
											"end": 13224,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13198,
											"end": 13224,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13090,
											"end": 13231,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13090,
											"end": 13231,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13090,
											"end": 13231,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13090,
											"end": 13231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13237,
											"end": 13330,
											"name": "tag",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 13237,
											"end": 13330,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13274,
											"end": 13280,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13321,
											"end": 13323,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13316,
											"end": 13318,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 13309,
											"end": 13314,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13305,
											"end": 13319,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13301,
											"end": 13324,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 13291,
											"end": 13324,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13291,
											"end": 13324,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13237,
											"end": 13330,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13237,
											"end": 13330,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13237,
											"end": 13330,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13237,
											"end": 13330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13336,
											"end": 13443,
											"name": "tag",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 13336,
											"end": 13443,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13380,
											"end": 13388,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13430,
											"end": 13435,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13424,
											"end": 13428,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13420,
											"end": 13436,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 13399,
											"end": 13436,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13399,
											"end": 13436,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13336,
											"end": 13443,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 13336,
											"end": 13443,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13336,
											"end": 13443,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13336,
											"end": 13443,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13336,
											"end": 13443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13449,
											"end": 13842,
											"name": "tag",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 13449,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13518,
											"end": 13524,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13568,
											"end": 13569,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 13556,
											"end": 13566,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 13591,
											"end": 13688,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "524"
										},
										{
											"begin": 13621,
											"end": 13687,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13610,
											"end": 13619,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13591,
											"end": 13688,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 13591,
											"end": 13688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13591,
											"end": 13688,
											"name": "tag",
											"source": 19,
											"value": "524"
										},
										{
											"begin": 13591,
											"end": 13688,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13709,
											"end": 13748,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 13739,
											"end": 13747,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 13728,
											"end": 13737,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13709,
											"end": 13748,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 13709,
											"end": 13748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13709,
											"end": 13748,
											"name": "tag",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 13709,
											"end": 13748,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13697,
											"end": 13748,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 13697,
											"end": 13748,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13781,
											"end": 13785,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 13777,
											"end": 13786,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 13770,
											"end": 13775,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13766,
											"end": 13787,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 13757,
											"end": 13787,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 13757,
											"end": 13787,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13830,
											"end": 13834,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 13820,
											"end": 13828,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 13816,
											"end": 13835,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 13809,
											"end": 13814,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13806,
											"end": 13836,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 13796,
											"end": 13836,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 13796,
											"end": 13836,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13525,
											"end": 13842,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13525,
											"end": 13842,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13449,
											"end": 13842,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 13449,
											"end": 13842,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 13449,
											"end": 13842,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13449,
											"end": 13842,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13449,
											"end": 13842,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13449,
											"end": 13842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13848,
											"end": 13908,
											"name": "tag",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 13848,
											"end": 13908,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13876,
											"end": 13879,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13897,
											"end": 13902,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13890,
											"end": 13902,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13890,
											"end": 13902,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13848,
											"end": 13908,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13848,
											"end": 13908,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13848,
											"end": 13908,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13848,
											"end": 13908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13914,
											"end": 14056,
											"name": "tag",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 13914,
											"end": 14056,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13964,
											"end": 13973,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13997,
											"end": 14050,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 14015,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 14024,
											"end": 14048,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 14042,
											"end": 14047,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14024,
											"end": 14048,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 14024,
											"end": 14048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14024,
											"end": 14048,
											"name": "tag",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 14024,
											"end": 14048,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14015,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 14015,
											"end": 14049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14015,
											"end": 14049,
											"name": "tag",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 14015,
											"end": 14049,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13997,
											"end": 14050,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 13997,
											"end": 14050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13997,
											"end": 14050,
											"name": "tag",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 13997,
											"end": 14050,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13984,
											"end": 14050,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13984,
											"end": 14050,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13914,
											"end": 14056,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13914,
											"end": 14056,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13914,
											"end": 14056,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13914,
											"end": 14056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14062,
											"end": 14137,
											"name": "tag",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 14062,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14105,
											"end": 14108,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14126,
											"end": 14131,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14119,
											"end": 14131,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14119,
											"end": 14131,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14062,
											"end": 14137,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14062,
											"end": 14137,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14062,
											"end": 14137,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14062,
											"end": 14137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14143,
											"end": 14412,
											"name": "tag",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 14143,
											"end": 14412,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14253,
											"end": 14292,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 14284,
											"end": 14291,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14253,
											"end": 14292,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 14253,
											"end": 14292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14253,
											"end": 14292,
											"name": "tag",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 14253,
											"end": 14292,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14314,
											"end": 14405,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 14363,
											"end": 14404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 14387,
											"end": 14403,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14363,
											"end": 14404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 14363,
											"end": 14404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14363,
											"end": 14404,
											"name": "tag",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 14363,
											"end": 14404,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14355,
											"end": 14361,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14348,
											"end": 14352,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14342,
											"end": 14353,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 14314,
											"end": 14405,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 14314,
											"end": 14405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14314,
											"end": 14405,
											"name": "tag",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 14314,
											"end": 14405,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14308,
											"end": 14312,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14301,
											"end": 14406,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 14219,
											"end": 14412,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14143,
											"end": 14412,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14143,
											"end": 14412,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14143,
											"end": 14412,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14143,
											"end": 14412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14418,
											"end": 14491,
											"name": "tag",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 14418,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14463,
											"end": 14466,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14418,
											"end": 14491,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14418,
											"end": 14491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14497,
											"end": 14686,
											"name": "tag",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 14497,
											"end": 14686,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14574,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 14574,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 14574,
											"end": 14606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14574,
											"end": 14606,
											"name": "tag",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 14574,
											"end": 14606,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14615,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 14673,
											"end": 14679,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14665,
											"end": 14671,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14659,
											"end": 14663,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14615,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 14615,
											"end": 14680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14615,
											"end": 14680,
											"name": "tag",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 14615,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14550,
											"end": 14686,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14497,
											"end": 14686,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14497,
											"end": 14686,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14497,
											"end": 14686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14692,
											"end": 14878,
											"name": "tag",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 14692,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14752,
											"end": 14872,
											"name": "tag",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 14752,
											"end": 14872,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14769,
											"end": 14772,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14762,
											"end": 14767,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14759,
											"end": 14773,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 14752,
											"end": 14872,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 14752,
											"end": 14872,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 14752,
											"end": 14872,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 14823,
											"end": 14862,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 14860,
											"end": 14861,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14853,
											"end": 14858,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14823,
											"end": 14862,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 14823,
											"end": 14862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14823,
											"end": 14862,
											"name": "tag",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 14823,
											"end": 14862,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14796,
											"end": 14797,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 14789,
											"end": 14794,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14785,
											"end": 14798,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14776,
											"end": 14798,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14776,
											"end": 14798,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14752,
											"end": 14872,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 14752,
											"end": 14872,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14752,
											"end": 14872,
											"name": "tag",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 14752,
											"end": 14872,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14692,
											"end": 14878,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14692,
											"end": 14878,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14692,
											"end": 14878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14884,
											"end": 15427,
											"name": "tag",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 14884,
											"end": 15427,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14985,
											"end": 14987,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 14980,
											"end": 14983,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14977,
											"end": 14988,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 14974,
											"end": 15420,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 14974,
											"end": 15420,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "546"
										},
										{
											"begin": 14974,
											"end": 15420,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 15019,
											"end": 15057,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 15051,
											"end": 15056,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15019,
											"end": 15057,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 15019,
											"end": 15057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15019,
											"end": 15057,
											"name": "tag",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 15019,
											"end": 15057,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15103,
											"end": 15132,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 15121,
											"end": 15131,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15103,
											"end": 15132,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 15103,
											"end": 15132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15103,
											"end": 15132,
											"name": "tag",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 15103,
											"end": 15132,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15093,
											"end": 15101,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15089,
											"end": 15133,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15286,
											"end": 15288,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15274,
											"end": 15284,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 15271,
											"end": 15289,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 15268,
											"end": 15317,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 15268,
											"end": 15317,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 15268,
											"end": 15317,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 15307,
											"end": 15315,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15292,
											"end": 15315,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15292,
											"end": 15315,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15268,
											"end": 15317,
											"name": "tag",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 15268,
											"end": 15317,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15330,
											"end": 15410,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "550"
										},
										{
											"begin": 15386,
											"end": 15408,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "551"
										},
										{
											"begin": 15404,
											"end": 15407,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 15386,
											"end": 15408,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 15386,
											"end": 15408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15386,
											"end": 15408,
											"name": "tag",
											"source": 19,
											"value": "551"
										},
										{
											"begin": 15386,
											"end": 15408,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15376,
											"end": 15384,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15372,
											"end": 15409,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15359,
											"end": 15370,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15330,
											"end": 15410,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 15330,
											"end": 15410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15330,
											"end": 15410,
											"name": "tag",
											"source": 19,
											"value": "550"
										},
										{
											"begin": 15330,
											"end": 15410,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14989,
											"end": 15420,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14989,
											"end": 15420,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14974,
											"end": 15420,
											"name": "tag",
											"source": 19,
											"value": "546"
										},
										{
											"begin": 14974,
											"end": 15420,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14884,
											"end": 15427,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14884,
											"end": 15427,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14884,
											"end": 15427,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14884,
											"end": 15427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15433,
											"end": 15550,
											"name": "tag",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 15433,
											"end": 15550,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15487,
											"end": 15495,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15537,
											"end": 15542,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15531,
											"end": 15535,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15527,
											"end": 15543,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 15506,
											"end": 15543,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15506,
											"end": 15543,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15433,
											"end": 15550,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15433,
											"end": 15550,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15433,
											"end": 15550,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15433,
											"end": 15550,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15433,
											"end": 15550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15556,
											"end": 15725,
											"name": "tag",
											"source": 19,
											"value": "360"
										},
										{
											"begin": 15556,
											"end": 15725,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15600,
											"end": 15606,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15633,
											"end": 15684,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 15681,
											"end": 15682,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15677,
											"end": 15683,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 15669,
											"end": 15674,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15666,
											"end": 15667,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 15662,
											"end": 15675,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 15633,
											"end": 15684,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 15633,
											"end": 15684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15633,
											"end": 15684,
											"name": "tag",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 15633,
											"end": 15684,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15629,
											"end": 15685,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 15714,
											"end": 15718,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 15708,
											"end": 15712,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15704,
											"end": 15719,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 15694,
											"end": 15719,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15694,
											"end": 15719,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15607,
											"end": 15725,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15556,
											"end": 15725,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15556,
											"end": 15725,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15556,
											"end": 15725,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15556,
											"end": 15725,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15556,
											"end": 15725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15730,
											"end": 16025,
											"name": "tag",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 15730,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15806,
											"end": 15810,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15952,
											"end": 15981,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "556"
										},
										{
											"begin": 15977,
											"end": 15980,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15971,
											"end": 15975,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15952,
											"end": 15981,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "360"
										},
										{
											"begin": 15952,
											"end": 15981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15952,
											"end": 15981,
											"name": "tag",
											"source": 19,
											"value": "556"
										},
										{
											"begin": 15952,
											"end": 15981,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15944,
											"end": 15981,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15944,
											"end": 15981,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16014,
											"end": 16017,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16011,
											"end": 16012,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 16007,
											"end": 16018,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 16001,
											"end": 16005,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15998,
											"end": 16019,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 15990,
											"end": 16019,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15990,
											"end": 16019,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15730,
											"end": 16025,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15730,
											"end": 16025,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15730,
											"end": 16025,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15730,
											"end": 16025,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15730,
											"end": 16025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16030,
											"end": 17425,
											"name": "tag",
											"source": 19,
											"value": "163"
										},
										{
											"begin": 16030,
											"end": 17425,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16147,
											"end": 16184,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 16180,
											"end": 16183,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16147,
											"end": 16184,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "318"
										},
										{
											"begin": 16147,
											"end": 16184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16147,
											"end": 16184,
											"name": "tag",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 16147,
											"end": 16184,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16249,
											"end": 16267,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16241,
											"end": 16247,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16238,
											"end": 16268,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 16235,
											"end": 16291,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 16235,
											"end": 16291,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 16235,
											"end": 16291,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 16271,
											"end": 16289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 16271,
											"end": 16289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 16271,
											"end": 16289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16271,
											"end": 16289,
											"name": "tag",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 16271,
											"end": 16289,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16235,
											"end": 16291,
											"name": "tag",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 16235,
											"end": 16291,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16315,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "561"
										},
										{
											"begin": 16347,
											"end": 16351,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16341,
											"end": 16352,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 16315,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "128"
										},
										{
											"begin": 16315,
											"end": 16353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16315,
											"end": 16353,
											"name": "tag",
											"source": 19,
											"value": "561"
										},
										{
											"begin": 16315,
											"end": 16353,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16400,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "562"
										},
										{
											"begin": 16460,
											"end": 16466,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16452,
											"end": 16458,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16446,
											"end": 16450,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16400,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 16400,
											"end": 16467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16400,
											"end": 16467,
											"name": "tag",
											"source": 19,
											"value": "562"
										},
										{
											"begin": 16400,
											"end": 16467,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16494,
											"end": 16495,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16518,
											"end": 16522,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16505,
											"end": 16522,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16505,
											"end": 16522,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16550,
											"end": 16552,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 16542,
											"end": 16548,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16539,
											"end": 16553,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 16567,
											"end": 16568,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 16562,
											"end": 17180,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16562,
											"end": 17180,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 16562,
											"end": 17180,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 16562,
											"end": 17180,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 17224,
											"end": 17225,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17241,
											"end": 17247,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 17238,
											"end": 17315,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 17238,
											"end": 17315,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "565"
										},
										{
											"begin": 17238,
											"end": 17315,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 17290,
											"end": 17299,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17285,
											"end": 17288,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 17281,
											"end": 17300,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17275,
											"end": 17301,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 17266,
											"end": 17301,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17266,
											"end": 17301,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17238,
											"end": 17315,
											"name": "tag",
											"source": 19,
											"value": "565"
										},
										{
											"begin": 17238,
											"end": 17315,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17341,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "566"
										},
										{
											"begin": 17401,
											"end": 17407,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 17394,
											"end": 17399,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17341,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 17341,
											"end": 17408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17341,
											"end": 17408,
											"name": "tag",
											"source": 19,
											"value": "566"
										},
										{
											"begin": 17341,
											"end": 17408,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17335,
											"end": 17339,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 17328,
											"end": 17409,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 17197,
											"end": 17419,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16532,
											"end": 17419,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "563"
										},
										{
											"begin": 16532,
											"end": 17419,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16562,
											"end": 17180,
											"name": "tag",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 16562,
											"end": 17180,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16614,
											"end": 16618,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 16610,
											"end": 16619,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 16602,
											"end": 16608,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 16598,
											"end": 16620,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 16648,
											"end": 16685,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "567"
										},
										{
											"begin": 16680,
											"end": 16684,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 16648,
											"end": 16685,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 16648,
											"end": 16685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16648,
											"end": 16685,
											"name": "tag",
											"source": 19,
											"value": "567"
										},
										{
											"begin": 16648,
											"end": 16685,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16707,
											"end": 16708,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16721,
											"end": 16929,
											"name": "tag",
											"source": 19,
											"value": "568"
										},
										{
											"begin": 16721,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16735,
											"end": 16742,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16732,
											"end": 16733,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16729,
											"end": 16743,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 16721,
											"end": 16929,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 16721,
											"end": 16929,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "570"
										},
										{
											"begin": 16721,
											"end": 16929,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 16814,
											"end": 16823,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 16809,
											"end": 16812,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 16805,
											"end": 16824,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16799,
											"end": 16825,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 16791,
											"end": 16797,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16784,
											"end": 16826,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 16865,
											"end": 16866,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 16857,
											"end": 16863,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16853,
											"end": 16867,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16843,
											"end": 16867,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16843,
											"end": 16867,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16912,
											"end": 16914,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16901,
											"end": 16910,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16897,
											"end": 16915,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16884,
											"end": 16915,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 16884,
											"end": 16915,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16758,
											"end": 16762,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16755,
											"end": 16756,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16751,
											"end": 16763,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16746,
											"end": 16763,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16746,
											"end": 16763,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16721,
											"end": 16929,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "568"
										},
										{
											"begin": 16721,
											"end": 16929,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16721,
											"end": 16929,
											"name": "tag",
											"source": 19,
											"value": "570"
										},
										{
											"begin": 16721,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16957,
											"end": 16963,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 16948,
											"end": 16955,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16945,
											"end": 16964,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 16942,
											"end": 17121,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 16942,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "571"
										},
										{
											"begin": 16942,
											"end": 17121,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 17015,
											"end": 17024,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 17010,
											"end": 17013,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 17006,
											"end": 17025,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17000,
											"end": 17026,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 17058,
											"end": 17106,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "572"
										},
										{
											"begin": 17100,
											"end": 17104,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 17092,
											"end": 17098,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 17088,
											"end": 17105,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 17077,
											"end": 17086,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17058,
											"end": 17106,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "360"
										},
										{
											"begin": 17058,
											"end": 17106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17058,
											"end": 17106,
											"name": "tag",
											"source": 19,
											"value": "572"
										},
										{
											"begin": 17058,
											"end": 17106,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17050,
											"end": 17056,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17043,
											"end": 17107,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 16965,
											"end": 17121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16942,
											"end": 17121,
											"name": "tag",
											"source": 19,
											"value": "571"
										},
										{
											"begin": 16942,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17167,
											"end": 17168,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 17163,
											"end": 17164,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 17155,
											"end": 17161,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 17151,
											"end": 17165,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 17147,
											"end": 17169,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17141,
											"end": 17145,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 17134,
											"end": 17170,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 16569,
											"end": 17180,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16569,
											"end": 17180,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16569,
											"end": 17180,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16532,
											"end": 17419,
											"name": "tag",
											"source": 19,
											"value": "563"
										},
										{
											"begin": 16532,
											"end": 17419,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16532,
											"end": 17419,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16122,
											"end": 17425,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16122,
											"end": 17425,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16122,
											"end": 17425,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16030,
											"end": 17425,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16030,
											"end": 17425,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16030,
											"end": 17425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17431,
											"end": 17589,
											"name": "tag",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 17431,
											"end": 17589,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17571,
											"end": 17581,
											"name": "PUSH",
											"source": 19,
											"value": "4E6F74466F756E64000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17567,
											"end": 17568,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17559,
											"end": 17565,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17555,
											"end": 17569,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17548,
											"end": 17582,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17431,
											"end": 17589,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17431,
											"end": 17589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17595,
											"end": 17960,
											"name": "tag",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 17595,
											"end": 17960,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17737,
											"end": 17740,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17758,
											"end": 17824,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "575"
										},
										{
											"begin": 17822,
											"end": 17823,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 17817,
											"end": 17820,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17758,
											"end": 17824,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "319"
										},
										{
											"begin": 17758,
											"end": 17824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17758,
											"end": 17824,
											"name": "tag",
											"source": 19,
											"value": "575"
										},
										{
											"begin": 17758,
											"end": 17824,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17751,
											"end": 17824,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17751,
											"end": 17824,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17833,
											"end": 17926,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "576"
										},
										{
											"begin": 17922,
											"end": 17925,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17833,
											"end": 17926,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 17833,
											"end": 17926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17833,
											"end": 17926,
											"name": "tag",
											"source": 19,
											"value": "576"
										},
										{
											"begin": 17833,
											"end": 17926,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17951,
											"end": 17953,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17946,
											"end": 17949,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17942,
											"end": 17954,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17935,
											"end": 17954,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17935,
											"end": 17954,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17595,
											"end": 17960,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17595,
											"end": 17960,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17595,
											"end": 17960,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17595,
											"end": 17960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17966,
											"end": 18385,
											"name": "tag",
											"source": 19,
											"value": "173"
										},
										{
											"begin": 17966,
											"end": 18385,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18132,
											"end": 18136,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18170,
											"end": 18172,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18159,
											"end": 18168,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18155,
											"end": 18173,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18147,
											"end": 18173,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18147,
											"end": 18173,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18219,
											"end": 18228,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18213,
											"end": 18217,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18209,
											"end": 18229,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 18205,
											"end": 18206,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18194,
											"end": 18203,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18190,
											"end": 18207,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18183,
											"end": 18230,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18247,
											"end": 18378,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 18373,
											"end": 18377,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18247,
											"end": 18378,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 18247,
											"end": 18378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18247,
											"end": 18378,
											"name": "tag",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 18247,
											"end": 18378,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18239,
											"end": 18378,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18239,
											"end": 18378,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17966,
											"end": 18385,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17966,
											"end": 18385,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17966,
											"end": 18385,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17966,
											"end": 18385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18391,
											"end": 18489,
											"name": "tag",
											"source": 19,
											"value": "364"
										},
										{
											"begin": 18391,
											"end": 18489,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18442,
											"end": 18448,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18476,
											"end": 18481,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18470,
											"end": 18482,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 18460,
											"end": 18482,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18460,
											"end": 18482,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18391,
											"end": 18489,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18391,
											"end": 18489,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18391,
											"end": 18489,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18391,
											"end": 18489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18495,
											"end": 18663,
											"name": "tag",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 18495,
											"end": 18663,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18578,
											"end": 18589,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18612,
											"end": 18618,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18607,
											"end": 18610,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18600,
											"end": 18619,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18652,
											"end": 18656,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18647,
											"end": 18650,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18643,
											"end": 18657,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18628,
											"end": 18657,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18628,
											"end": 18657,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18495,
											"end": 18663,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18495,
											"end": 18663,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18495,
											"end": 18663,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18495,
											"end": 18663,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18495,
											"end": 18663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18669,
											"end": 19042,
											"name": "tag",
											"source": 19,
											"value": "366"
										},
										{
											"begin": 18669,
											"end": 19042,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18755,
											"end": 18758,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18783,
											"end": 18821,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "582"
										},
										{
											"begin": 18815,
											"end": 18820,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18783,
											"end": 18821,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "364"
										},
										{
											"begin": 18783,
											"end": 18821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18783,
											"end": 18821,
											"name": "tag",
											"source": 19,
											"value": "582"
										},
										{
											"begin": 18783,
											"end": 18821,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18837,
											"end": 18907,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "583"
										},
										{
											"begin": 18900,
											"end": 18906,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18895,
											"end": 18898,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 18837,
											"end": 18907,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 18837,
											"end": 18907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18837,
											"end": 18907,
											"name": "tag",
											"source": 19,
											"value": "583"
										},
										{
											"begin": 18837,
											"end": 18907,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18830,
											"end": 18907,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 18830,
											"end": 18907,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18916,
											"end": 18981,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 18974,
											"end": 18980,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18969,
											"end": 18972,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 18962,
											"end": 18966,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18955,
											"end": 18960,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 18951,
											"end": 18967,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18916,
											"end": 18981,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 18916,
											"end": 18981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18916,
											"end": 18981,
											"name": "tag",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 18916,
											"end": 18981,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19006,
											"end": 19035,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "585"
										},
										{
											"begin": 19028,
											"end": 19034,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19006,
											"end": 19035,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 19006,
											"end": 19035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19006,
											"end": 19035,
											"name": "tag",
											"source": 19,
											"value": "585"
										},
										{
											"begin": 19006,
											"end": 19035,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19001,
											"end": 19004,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 18997,
											"end": 19036,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18990,
											"end": 19036,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18990,
											"end": 19036,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18759,
											"end": 19042,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18669,
											"end": 19042,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18669,
											"end": 19042,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18669,
											"end": 19042,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18669,
											"end": 19042,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18669,
											"end": 19042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19048,
											"end": 19688,
											"name": "tag",
											"source": 19,
											"value": "262"
										},
										{
											"begin": 19048,
											"end": 19688,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19243,
											"end": 19247,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19281,
											"end": 19284,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 19270,
											"end": 19279,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19266,
											"end": 19285,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19258,
											"end": 19285,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19258,
											"end": 19285,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19295,
											"end": 19366,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "587"
										},
										{
											"begin": 19363,
											"end": 19364,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19352,
											"end": 19361,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19348,
											"end": 19365,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19339,
											"end": 19345,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 19295,
											"end": 19366,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 19295,
											"end": 19366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19295,
											"end": 19366,
											"name": "tag",
											"source": 19,
											"value": "587"
										},
										{
											"begin": 19295,
											"end": 19366,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19376,
											"end": 19448,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "588"
										},
										{
											"begin": 19444,
											"end": 19446,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19433,
											"end": 19442,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19429,
											"end": 19447,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19420,
											"end": 19426,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 19376,
											"end": 19448,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 19376,
											"end": 19448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19376,
											"end": 19448,
											"name": "tag",
											"source": 19,
											"value": "588"
										},
										{
											"begin": 19376,
											"end": 19448,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19458,
											"end": 19530,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "589"
										},
										{
											"begin": 19526,
											"end": 19528,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 19515,
											"end": 19524,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19511,
											"end": 19529,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19502,
											"end": 19508,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 19458,
											"end": 19530,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 19458,
											"end": 19530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19458,
											"end": 19530,
											"name": "tag",
											"source": 19,
											"value": "589"
										},
										{
											"begin": 19458,
											"end": 19530,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19577,
											"end": 19586,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19571,
											"end": 19575,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19567,
											"end": 19587,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 19562,
											"end": 19564,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 19551,
											"end": 19560,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19547,
											"end": 19565,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19540,
											"end": 19588,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19605,
											"end": 19681,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "590"
										},
										{
											"begin": 19676,
											"end": 19680,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19667,
											"end": 19673,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19605,
											"end": 19681,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "366"
										},
										{
											"begin": 19605,
											"end": 19681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19605,
											"end": 19681,
											"name": "tag",
											"source": 19,
											"value": "590"
										},
										{
											"begin": 19605,
											"end": 19681,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19597,
											"end": 19681,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19597,
											"end": 19681,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19048,
											"end": 19688,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 19048,
											"end": 19688,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 19048,
											"end": 19688,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19048,
											"end": 19688,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19048,
											"end": 19688,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19048,
											"end": 19688,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19048,
											"end": 19688,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19048,
											"end": 19688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19694,
											"end": 19835,
											"name": "tag",
											"source": 19,
											"value": "367"
										},
										{
											"begin": 19694,
											"end": 19835,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19750,
											"end": 19755,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19781,
											"end": 19787,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19775,
											"end": 19788,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 19766,
											"end": 19788,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19766,
											"end": 19788,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19797,
											"end": 19829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "592"
										},
										{
											"begin": 19823,
											"end": 19828,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19797,
											"end": 19829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 19797,
											"end": 19829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19797,
											"end": 19829,
											"name": "tag",
											"source": 19,
											"value": "592"
										},
										{
											"begin": 19797,
											"end": 19829,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19694,
											"end": 19835,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 19694,
											"end": 19835,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19694,
											"end": 19835,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19694,
											"end": 19835,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19694,
											"end": 19835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19841,
											"end": 20190,
											"name": "tag",
											"source": 19,
											"value": "265"
										},
										{
											"begin": 19841,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19910,
											"end": 19916,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19959,
											"end": 19961,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19947,
											"end": 19956,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19938,
											"end": 19945,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19934,
											"end": 19957,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 19930,
											"end": 19962,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 19927,
											"end": 20046,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 19927,
											"end": 20046,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "594"
										},
										{
											"begin": 19927,
											"end": 20046,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 19965,
											"end": 20044,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 19965,
											"end": 20044,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 19965,
											"end": 20044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19965,
											"end": 20044,
											"name": "tag",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 19965,
											"end": 20044,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19927,
											"end": 20046,
											"name": "tag",
											"source": 19,
											"value": "594"
										},
										{
											"begin": 19927,
											"end": 20046,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20085,
											"end": 20086,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20110,
											"end": 20173,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "596"
										},
										{
											"begin": 20165,
											"end": 20172,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20156,
											"end": 20162,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20145,
											"end": 20154,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 20141,
											"end": 20163,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20110,
											"end": 20173,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "367"
										},
										{
											"begin": 20110,
											"end": 20173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20110,
											"end": 20173,
											"name": "tag",
											"source": 19,
											"value": "596"
										},
										{
											"begin": 20110,
											"end": 20173,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20100,
											"end": 20173,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20100,
											"end": 20173,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20056,
											"end": 20183,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19841,
											"end": 20190,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 19841,
											"end": 20190,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19841,
											"end": 20190,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19841,
											"end": 20190,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19841,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20196,
											"end": 20528,
											"name": "tag",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 20196,
											"end": 20528,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20317,
											"end": 20321,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20355,
											"end": 20357,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 20344,
											"end": 20353,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20340,
											"end": 20358,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20332,
											"end": 20358,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20332,
											"end": 20358,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20368,
											"end": 20439,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "598"
										},
										{
											"begin": 20436,
											"end": 20437,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20425,
											"end": 20434,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20421,
											"end": 20438,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20412,
											"end": 20418,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 20368,
											"end": 20439,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 20368,
											"end": 20439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20368,
											"end": 20439,
											"name": "tag",
											"source": 19,
											"value": "598"
										},
										{
											"begin": 20368,
											"end": 20439,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20449,
											"end": 20521,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "599"
										},
										{
											"begin": 20517,
											"end": 20519,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20506,
											"end": 20515,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20502,
											"end": 20520,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20493,
											"end": 20499,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20449,
											"end": 20521,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 20449,
											"end": 20521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20449,
											"end": 20521,
											"name": "tag",
											"source": 19,
											"value": "599"
										},
										{
											"begin": 20449,
											"end": 20521,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20196,
											"end": 20528,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 20196,
											"end": 20528,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20196,
											"end": 20528,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20196,
											"end": 20528,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20196,
											"end": 20528,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20196,
											"end": 20528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTEventConcert.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"getLocation(address)": "d9e0dc59",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeMint(address)": "40d097c3",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateLocation(uint256)": "47baf0e9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"},{\"internalType\":\"contract LocationProvider\",\"name\":\"_locationProvider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getLocation\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"updateLocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTEventConcert.sol\":\"ArtistDynamicNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xc48434419baa510862ba4b4802bc0500ccddadd02ae2f195548af748c3206b20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ae0bacd8623ce1cfad08c70ed111e995d23c66ad057b779b838ad2e5598681\",\"dweb:/ipfs/QmWZGSEjZ9DmbQmHjjsdkRbJtU25Ai65VScDnEziRCkPRB\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/NFTEventConcert.sol\":{\"keccak256\":\"0xd8267a5f90663f43bd811f9a43091e777f3699d83ff72c44b1c75015713f5619\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://962abeea66bf3ba96b4521e9e3062ffa656946425384586c4a555bb42ceb24ab\",\"dweb:/ipfs/QmfJXgiS8P7G1R2CmzUiGaVKyot16dTsQyi5AhM4tMvddx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "contracts/NFTEventConcert.sol:ArtistDynamicNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "contracts/NFTEventConcert.sol:ArtistDynamicNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "contracts/NFTEventConcert.sol:ArtistDynamicNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "contracts/NFTEventConcert.sol:ArtistDynamicNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "contracts/NFTEventConcert.sol:ArtistDynamicNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "contracts/NFTEventConcert.sol:ArtistDynamicNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1517,
								"contract": "contracts/NFTEventConcert.sol:ArtistDynamicNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 8,
								"contract": "contracts/NFTEventConcert.sol:ArtistDynamicNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 3214,
								"contract": "contracts/NFTEventConcert.sol:ArtistDynamicNFT",
								"label": "uri",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							},
							{
								"astId": 3221,
								"contract": "contracts/NFTEventConcert.sol:ArtistDynamicNFT",
								"label": "_tokenIds",
								"offset": 0,
								"slot": "9",
								"type": "t_struct(Counter)1671_storage"
							},
							{
								"astId": 3225,
								"contract": "contracts/NFTEventConcert.sol:ArtistDynamicNFT",
								"label": "tokenLocations",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 3228,
								"contract": "contracts/NFTEventConcert.sol:ArtistDynamicNFT",
								"label": "locationProvider",
								"offset": 0,
								"slot": "11",
								"type": "t_contract(LocationProvider)3204"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(LocationProvider)3204": {
								"encoding": "inplace",
								"label": "contract LocationProvider",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1671_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1670,
										"contract": "contracts/NFTEventConcert.sol:ArtistDynamicNFT",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LocationProvider": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "getLocation",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getLocation(address)": "d9e0dc59"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getLocation\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTEventConcert.sol\":\"LocationProvider\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xc48434419baa510862ba4b4802bc0500ccddadd02ae2f195548af748c3206b20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ae0bacd8623ce1cfad08c70ed111e995d23c66ad057b779b838ad2e5598681\",\"dweb:/ipfs/QmWZGSEjZ9DmbQmHjjsdkRbJtU25Ai65VScDnEziRCkPRB\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/NFTEventConcert.sol\":{\"keccak256\":\"0xd8267a5f90663f43bd811f9a43091e777f3699d83ff72c44b1c75015713f5619\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://962abeea66bf3ba96b4521e9e3062ffa656946425384586c4a555bb42ceb24ab\",\"dweb:/ipfs/QmfJXgiS8P7G1R2CmzUiGaVKyot16dTsQyi5AhM4tMvddx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1665
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1666,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1665,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1665,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1665
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2030
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 2031,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2030,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2030
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 152,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2030,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 180,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2030,
										"src": "279:7:2"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "288:7:2"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								1442,
								2030
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 167,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 174,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 176,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 1443,
							"src": "132:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							316
						],
						"IERC20Errors": [
							221
						],
						"IERC721Errors": [
							269
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 191,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "668:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:4"
									},
									"src": "621:80:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 196,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "889:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:4"
									},
									"src": "864:41:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 201,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1102:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:4"
									},
									"src": "1075:45:4"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 210,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1526:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:4"
									},
									"src": "1476:85:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 215,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1773:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:4"
									},
									"src": "1746:45:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 220,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:4"
									},
									"src": "1997:43:4"
								}
							],
							"scope": 317,
							"src": "278:1764:4",
							"usedErrors": [
								191,
								196,
								201,
								210,
								215,
								220
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 227,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"src": "2440:40:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 232,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:4"
									},
									"src": "2623:46:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 241,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2996:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:4"
									},
									"src": "2969:75:4"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 246,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3233:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:4"
									},
									"src": "3207:42:4"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 251,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3447:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:4"
									},
									"src": "3419:46:4"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 258,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3756:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3774:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:4"
									},
									"src": "3723:68:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 263,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4004:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:4"
									},
									"src": "3976:46:4"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 268,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4258:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:4"
									},
									"src": "4230:46:4"
								}
							],
							"scope": 317,
							"src": "2186:2092:4",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 281,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4870:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4887:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:4"
									},
									"src": "4821:99:4"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 286,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:4"
									},
									"src": "5083:43:4"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 291,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5325:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:4"
									},
									"src": "5296:47:4"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 298,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5645:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5663:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:4"
									},
									"src": "5610:68:4"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 303,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "5892:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:4"
									},
									"src": "5863:47:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 308,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6147:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:4"
									},
									"src": "6118:47:4"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 315,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6488:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6507:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:4"
									},
									"src": "6456:73:4"
								}
							],
							"scope": 317,
							"src": "4424:2107:4",
							"usedErrors": [
								281,
								286,
								291,
								298,
								303,
								308,
								315
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1665
						],
						"ERC165": [
							2018
						],
						"ERC721": [
							1325
						],
						"IERC165": [
							2030
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1643
						],
						"IERC721Receiver": [
							1460
						],
						"Strings": [
							1994
						]
					},
					"id": 1326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1443,
							"src": "133:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 319,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "141:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1461,
							"src": "172:54:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 321,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1460,
										"src": "180:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1644,
							"src": "227:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1643,
										"src": "235:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1666,
							"src": "293:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 325,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1665,
										"src": "301:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1995,
							"src": "342:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 327,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1994,
										"src": "350:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 2019,
							"src": "391:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2030,
										"src": "399:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 330,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2018,
										"src": "408:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 317,
							"src": "461:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 332,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "469:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 335,
										"name": "Context",
										"nameLocations": [
											"804:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1665,
										"src": "804:7:5"
									},
									"id": 336,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:5"
								},
								{
									"baseName": {
										"id": 337,
										"name": "ERC165",
										"nameLocations": [
											"813:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2018,
										"src": "813:6:5"
									},
									"id": 338,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:5"
								},
								{
									"baseName": {
										"id": 339,
										"name": "IERC721",
										"nameLocations": [
											"821:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "821:7:5"
									},
									"id": 340,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:5"
								},
								{
									"baseName": {
										"id": 341,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1643,
										"src": "830:15:5"
									},
									"id": 342,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:5"
								},
								{
									"baseName": {
										"id": 343,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 269,
										"src": "847:13:5"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:5"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:5",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1325,
							"linearizedBaseContracts": [
								1325,
								269,
								1643,
								1442,
								2018,
								2030,
								1665
							],
							"name": "ERC721",
							"nameLocation": "794:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 347,
									"libraryName": {
										"id": 345,
										"name": "Strings",
										"nameLocations": [
											"873:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1994,
										"src": "873:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:5",
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "917:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 348,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "964:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 350,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "993:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 354,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:5",
										"keyType": {
											"id": 352,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 353,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1051:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 358,
										"keyName": "owner",
										"keyNameLocation": "1067:5:5",
										"keyType": {
											"id": 356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 357,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1109:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 362,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:5",
										"keyType": {
											"id": 360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 361,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1175:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 368,
										"keyName": "owner",
										"keyNameLocation": "1191:5:5",
										"keyType": {
											"id": 364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 367,
											"keyName": "operator",
											"keyNameLocation": "1216:8:5",
											"keyType": {
												"id": 365,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 366,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1437:57:5",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1447:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 378,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1455:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:5"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1470:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 382,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "1480:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:5"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:5",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1393:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1414:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:5"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:5"
									},
									"scope": 1325,
									"src": "1381:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2017,
										2029
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "1669:192:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1698:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 399,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1442,
																			"src": "1718:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 398,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1442",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1754:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 405,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1643,
																			"src": "1774:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1643_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1643_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 404,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1643",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 412,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1842:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 410,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1325_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2017,
															"src": "1818:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 396,
												"id": 415,
												"nodeType": "Return",
												"src": "1679:175:5"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 393,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 391,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2018,
												"src": "1637:6:5"
											},
											{
												"id": 392,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2030,
												"src": "1645:7:5"
											}
										],
										"src": "1628:25:5"
									},
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1588:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 388,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:5"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1663:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:5"
									},
									"scope": 1325,
									"src": "1561:300:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1992:136:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 425,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2006:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 426,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "2002:87:5",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "2027:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 432,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 431,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2048:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "2041:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 440,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2105:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 442,
													"indexExpression": {
														"id": 441,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2115:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 443,
												"nodeType": "Return",
												"src": "2098:23:5"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:5",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1939:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:5"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1983:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:5"
									},
									"scope": 1325,
									"src": "1920:208:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2257:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "2288:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2274:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 456,
												"nodeType": "Return",
												"src": "2267:29:5"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:5",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2202:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2248:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:5"
									},
									"scope": 1325,
									"src": "2185:118:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1628
									],
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "2425:29:5",
										"statements": [
											{
												"expression": {
													"id": 464,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "2442:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 463,
												"id": 465,
												"nodeType": "Return",
												"src": "2435:12:5"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:5",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:5"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2410:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:5"
									},
									"scope": 1325,
									"src": "2365:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1634
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2580:31:5",
										"statements": [
											{
												"expression": {
													"id": 473,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 351,
													"src": "2597:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 472,
												"id": 474,
												"nodeType": "Return",
												"src": "2590:14:5"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:5",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:5"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2565:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:5"
									},
									"scope": 1325,
									"src": "2518:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1642
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2756:176:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "2780:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2766:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:5"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "2799:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 488,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2823:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "2856:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 503,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2892:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 504,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "2901:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1807,
																	"src": "2901:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 500,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 483,
												"id": 510,
												"nodeType": "Return",
												"src": "2843:82:5"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2695:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2741:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:5"
									},
									"scope": 1325,
									"src": "2677:255:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3240:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "3250:9:5"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:5"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3225:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:5"
									},
									"scope": 1325,
									"src": "3174:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1415
									],
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3384:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "3403:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3407:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 532,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "3416:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 529,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1128,
														"src": "3394:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:5",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3340:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3352:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:5"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:5"
									},
									"scope": 1325,
									"src": "3323:113:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1431
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3573:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3597:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "3583:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3636:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "3623:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 544,
												"id": 552,
												"nodeType": "Return",
												"src": "3616:28:5"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:5",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:5"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3564:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:5"
									},
									"scope": 1325,
									"src": "3497:154:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1423
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "3793:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 563,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "3822:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3836:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3846:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 562,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3803:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:5"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:5",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3745:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3763:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:5"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:5"
									},
									"scope": 1325,
									"src": "3718:144:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "4022:59:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 580,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "4039:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 582,
														"indexExpression": {
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "4058:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 584,
													"indexExpression": {
														"id": 583,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4065:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 579,
												"id": 585,
												"nodeType": "Return",
												"src": "4032:42:5"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:5",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3954:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3969:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:5"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "4016:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:5"
									},
									"scope": 1325,
									"src": "3928:153:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4223:498:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "4237:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "4233:87:5",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "4255:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4276:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "4269:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4538:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 612,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "4570:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "4574:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "4583:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4562:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 621,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "4610:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 622,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "4627:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "4606:109:5",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "4633:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "4675:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 626,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "4681:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 627,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "4690:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 624,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4654:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 629,
															"nodeType": "RevertStatement",
															"src": "4647:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:5",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4165:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4179:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:5"
									},
									"scope": 1325,
									"src": "4143:578:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1397
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "4863:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4890:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4896:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4900:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 643,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															651,
															677
														],
														"referencedDeclaration": 677,
														"src": "4873:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:5"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4813:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4827:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4839:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:5"
									},
									"scope": 1325,
									"src": "4787:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "5088:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5111:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5117:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5121:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5098:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5162:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5168:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5172:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 673,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5181:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "5139:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:5"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5011:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5025:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5037:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5054:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:5"
									},
									"scope": 1325,
									"src": "4985:208:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5782:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 685,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "5799:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 687,
													"indexExpression": {
														"id": 686,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "5807:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "5792:23:5"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:5",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5725:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:5"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5773:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:5"
									},
									"scope": 1325,
									"src": "5707:115:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "6017:48:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 698,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "6034:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 700,
													"indexExpression": {
														"id": 699,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "6050:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 697,
												"id": 701,
												"nodeType": "Return",
												"src": "6027:31:5"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:5",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "5960:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6008:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:5"
									},
									"scope": 1325,
									"src": "5938:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "6485:163:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 715,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "6514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 721,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 706,
																			"src": "6552:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 722,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "6561:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 725,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 706,
																				"src": "6589:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 726,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "6596:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 724,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "6572:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 730,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "6621:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 729,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "6608:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 732,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "6633:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 714,
												"id": 737,
												"nodeType": "Return",
												"src": "6495:146:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:5",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6399:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6414:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6431:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6479:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:5"
									},
									"scope": 1325,
									"src": "6376:272:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "7179:271:5",
										"statements": [
											{
												"condition": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:5",
													"subExpression": {
														"arguments": [
															{
																"id": 750,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "7208:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 751,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "7215:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 752,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "7224:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 749,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7194:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "7189:255:5",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "7234:210:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 755,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "7252:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 756,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 771,
																"nodeType": "Block",
																"src": "7350:84:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 767,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "7402:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 768,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7411:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 766,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7375:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 770,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:5"
																	}
																]
															},
															"id": 772,
															"nodeType": "IfStatement",
															"src": "7248:186:5",
															"trueBody": {
																"id": 765,
																"nodeType": "Block",
																"src": "7273:71:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 762,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7321:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 761,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "7298:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 764,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:5",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7108:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7123:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7140:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:5"
									},
									"scope": 1325,
									"src": "7082:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "8167:78:5",
										"statements": [
											{
												"id": 790,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:5",
												"statements": [
													{
														"expression": {
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 784,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "8201:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 786,
																"indexExpression": {
																	"id": 785,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "8211:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 787,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "8223:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 789,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:5",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8118:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8135:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 780,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:5"
									},
									"scope": 1325,
									"src": "8092:153:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "8933:700:5",
										"statements": [
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "8943:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 804,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "8967:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "8958:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9035:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "9031:86:5",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "9055:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "9086:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 818,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "9092:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 819,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9098:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 816,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "9069:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 824,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "9161:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 825,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "9157:256:5",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "9181:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 835,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9298:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 836,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 830,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1128,
																		1194
																	],
																	"referencedDeclaration": 1194,
																	"src": "9277:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:5"
														},
														{
															"id": 849,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:5",
															"statements": [
																{
																	"expression": {
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 843,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9368:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 845,
																			"indexExpression": {
																				"id": 844,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 805,
																				"src": "9378:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 848,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:5"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9427:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 853,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "IfStatement",
												"src": "9423:107:5",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "9445:85:5",
													"statements": [
														{
															"id": 864,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:5",
															"statements": [
																{
																	"expression": {
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 858,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9487:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 860,
																			"indexExpression": {
																				"id": 859,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "9497:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 863,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:5"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 867,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "9540:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 869,
														"indexExpression": {
															"id": 868,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9548:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 870,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9559:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "9586:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9592:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9596:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "9577:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "EmitStatement",
												"src": "9572:32:5"
											},
											{
												"expression": {
													"id": 879,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "9622:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 803,
												"id": 880,
												"nodeType": "Return",
												"src": "9615:11:5"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:5",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8855:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8867:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8884:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8924:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:5"
									},
									"scope": 1325,
									"src": "8838:795:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "10008:274:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "10022:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10018:87:5",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10040:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "10061:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "10054:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "10114:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 905,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [
														{
															"id": 908,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "10146:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10150:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 910,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 907,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "10138:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "10184:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "10180:96:5",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "10213:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 922,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "10234:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "10227:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:5",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9970:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9982:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:5"
									},
									"scope": 1325,
									"src": "9955:327:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "10690:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "10710:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "10714:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 940,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 973,
														"src": "10700:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:5"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:5",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10652:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10664:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:5"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:5"
									},
									"scope": 1325,
									"src": "10633:100:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "11038:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11054:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11058:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "11048:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 963,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11111:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11115:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 969,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "11124:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 962,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "11076:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:5"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:5",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10973:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10985:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11002:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:5"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:5"
									},
									"scope": 1325,
									"src": "10954:182:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "11503:186:5",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "11513:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 979,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "11557:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 981,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "11537:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "11591:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 994,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "11587:96:5",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "11620:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1000,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "11664:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 999,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "11641:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1002,
															"nodeType": "RevertStatement",
															"src": "11634:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "11477:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:5"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:5"
									},
									"scope": 1325,
									"src": "11462:227:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "12084:389:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "12098:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1017,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "12094:87:5",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "12116:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1023,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1022,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "12137:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1028,
															"nodeType": "RevertStatement",
															"src": "12130:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "12190:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1031,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1034,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "12222:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "12226:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1033,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "12214:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "12260:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1053,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "12362:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1054,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "12379:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1063,
													"nodeType": "IfStatement",
													"src": "12358:109:5",
													"trueBody": {
														"id": 1062,
														"nodeType": "Block",
														"src": "12385:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1057,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1009,
																			"src": "12427:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1058,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "12433:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1059,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "12442:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1056,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "12406:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1061,
																"nodeType": "RevertStatement",
																"src": "12399:57:5"
															}
														]
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "12256:211:5",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "12289:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "12333:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1048,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "12310:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "12303:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12032:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12046:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12058:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:5"
									},
									"scope": 1325,
									"src": "12013:460:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "13481:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "13505:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "13511:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "13515:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1076,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1084,
															1110
														],
														"referencedDeclaration": 1110,
														"src": "13491:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:5"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13429:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13443:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:5"
									},
									"scope": 1325,
									"src": "13406:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "13873:102:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13899:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13903:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1096,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "13883:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13944:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13950:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13954:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "13963:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1102,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "13921:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:5"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:5",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13794:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13808:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13820:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13837:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:5"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:5"
									},
									"scope": 1325,
									"src": "13771:204:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "14488:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "14507:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "14511:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1123,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "14520:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1120,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1194,
														"src": "14498:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:5"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:5",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14436:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14448:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14465:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:5"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:5"
									},
									"scope": 1325,
									"src": "14418:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "14814:568:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1140,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "14880:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1141,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "14893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1142,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "14876:460:5",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "14913:423:5",
													"statements": [
														{
															"assignments": [
																1149
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1149,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1185,
																	"src": "14927:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1153,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1151,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "14957:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1150,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "14943:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1154,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15093:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1160,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "15115:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1161,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15124:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1149,
																				"src": "15150:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1166,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "15157:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1164,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "15133:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1175,
															"nodeType": "IfStatement",
															"src": "15089:142:5",
															"trueBody": {
																"id": 1174,
																"nodeType": "Block",
																"src": "15164:67:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1171,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "15211:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1170,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "15189:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1173,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:5"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1176,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "15249:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1184,
															"nodeType": "IfStatement",
															"src": "15245:81:5",
															"trueBody": {
																"id": 1183,
																"nodeType": "Block",
																"src": "15260:66:5",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1178,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "15292:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1179,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "15299:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1180,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "15303:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1177,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "15283:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1182,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1187,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "15346:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1189,
														"indexExpression": {
															"id": 1188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "15362:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "15373:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:5"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:5",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14738:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14750:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14767:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14781:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:5"
									},
									"scope": 1325,
									"src": "14720:662:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "15684:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1204,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "15698:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "15694:91:5",
												"trueBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "15722:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1211,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "15765:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1210,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "15743:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1213,
															"nodeType": "RevertStatement",
															"src": "15736:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1216,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "15794:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1219,
															"indexExpression": {
																"id": 1217,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "15813:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1220,
														"indexExpression": {
															"id": 1218,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15820:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "15832:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1225,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "15870:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15877:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "15887:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1224,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "15855:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "EmitStatement",
												"src": "15850:46:5"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:5",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15619:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15634:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15652:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:5"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:5"
									},
									"scope": 1325,
									"src": "15591:312:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "16210:169:5",
										"statements": [
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "16220:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"id": 1242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "16245:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "16236:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "16267:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "16263:88:5",
												"trueBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "16288:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "16332:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1251,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "16309:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1254,
															"nodeType": "RevertStatement",
															"src": "16302:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1257,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "16367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1258,
												"nodeType": "Return",
												"src": "16360:12:5"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:5",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16161:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16201:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:5"
									},
									"scope": 1325,
									"src": "16138:241:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "17020:680:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1272,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "17034:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "17030:664:5",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "17054:640:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1301,
																		"nodeType": "Block",
																		"src": "17168:162:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1290,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1288,
																						"src": "17190:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1291,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1460,
																								"src": "17200:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1292,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:5",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1459,
																							"src": "17200:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1293,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1300,
																				"nodeType": "IfStatement",
																				"src": "17186:130:5",
																				"trueBody": {
																					"id": 1299,
																					"nodeType": "Block",
																					"src": "17243:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1296,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17294:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1295,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17272:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1297,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1298,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1302,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1289,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1288,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1302,
																				"src": "17153:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1287,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:5"
																	},
																	"src": "17144:186:5"
																},
																{
																	"block": {
																		"id": 1318,
																		"nodeType": "Block",
																		"src": "17359:325:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1306,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1304,
																							"src": "17381:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1307,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1316,
																					"nodeType": "Block",
																					"src": "17480:190:5",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:5",
																								"nodeType": "YulBlock",
																								"src": "17566:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:5",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:5"
																													},
																													"nativeSrc": "17599:15:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:5",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:5"
																													},
																													"nativeSrc": "17616:13:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:5"
																											},
																											"nativeSrc": "17592:38:5",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:5"
																										},
																										"nativeSrc": "17592:38:5",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:5"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:5",
																									"valueSize": 1
																								}
																							],
																							"id": 1315,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:5"
																						}
																					]
																				},
																				"id": 1317,
																				"nodeType": "IfStatement",
																				"src": "17377:293:5",
																				"trueBody": {
																					"id": 1314,
																					"nodeType": "Block",
																					"src": "17401:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1311,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17452:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1310,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17430:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1312,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1313,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1319,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1305,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1304,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1319,
																				"src": "17338:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1303,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:5"
																	},
																	"src": "17331:353:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1281,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "17109:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1283,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "17123:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1284,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "17129:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1285,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "17138:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1278,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "17088:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1277,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "17072:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1460",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:5",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1459,
																	"src": "17072:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1320,
															"nodeType": "TryStatement",
															"src": "17068:616:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16950:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16964:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16976:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16993:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:5"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:5"
									},
									"scope": 1325,
									"src": "16918:782:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1326,
							"src": "776:16926:5",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:17596:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2030
						],
						"IERC721": [
							1442
						]
					},
					"id": 1443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1443,
							"sourceUnit": 2031,
							"src": "134:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1328,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2030,
										"src": "142:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1331,
										"name": "IERC165",
										"nameLocations": [
											"287:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2030,
										"src": "287:7:6"
									},
									"id": 1332,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1330,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1442,
							"linearizedBaseContracts": [
								1442,
								2030
							],
							"name": "IERC721",
							"nameLocation": "276:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1341,
									"name": "Transfer",
									"nameLocation": "400:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "409:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "431:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "451:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:6"
									},
									"src": "394:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1350,
									"name": "Approval",
									"nameLocation": "587:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "596:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "619:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "645:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:6"
									},
									"src": "581:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1359,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "819:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "842:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:6"
									},
									"src": "798:85:6"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "989:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1027:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:6"
									},
									"scope": 1442,
									"src": "970:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1203:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:6"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1243:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:6"
									},
									"scope": 1442,
									"src": "1186:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1860:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1874:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1903:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:6"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:6"
									},
									"scope": 1442,
									"src": "1834:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2675:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2689:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2701:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:6"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:6"
									},
									"scope": 1442,
									"src": "2649:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3492:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3506:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:6"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:6"
									},
									"scope": 1442,
									"src": "3470:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4024:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4036:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:6"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:6"
									},
									"scope": 1442,
									"src": "4007:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4415:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4433:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:6"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:6"
									},
									"scope": 1442,
									"src": "4388:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4628:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:6"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4668:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:6"
									},
									"scope": 1442,
									"src": "4607:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4861:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4876:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:6"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4917:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:6"
									},
									"scope": 1442,
									"src": "4835:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1443,
							"src": "266:4659:6",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "108:4818:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1460
						]
					},
					"id": 1461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1460,
							"linearizedBaseContracts": [
								1460
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "867:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "893:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "915:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "940:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:7"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "984:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:7"
									},
									"scope": 1460,
									"src": "832:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1461,
							"src": "295:699:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1665
						],
						"ERC721": [
							1325
						],
						"ERC721Burnable": [
							1489
						]
					},
					"id": 1490,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "126:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1490,
							"sourceUnit": 1326,
							"src": "152:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1463,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "160:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1490,
							"sourceUnit": 1666,
							"src": "190:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1465,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1665,
										"src": "198:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1468,
										"name": "Context",
										"nameLocations": [
											"372:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1665,
										"src": "372:7:8"
									},
									"id": 1469,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:8"
								},
								{
									"baseName": {
										"id": 1470,
										"name": "ERC721",
										"nameLocations": [
											"381:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "381:6:8"
									},
									"id": 1471,
									"nodeType": "InheritanceSpecifier",
									"src": "381:6:8"
								}
							],
							"canonicalName": "ERC721Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1467,
								"nodeType": "StructuredDocumentation",
								"src": "243:92:8",
								"text": " @title ERC721 Burnable Token\n @dev ERC721 Token that can be burned (destroyed)."
							},
							"fullyImplemented": true,
							"id": 1489,
							"linearizedBaseContracts": [
								1489,
								1325,
								269,
								1643,
								1442,
								2018,
								2030,
								1665
							],
							"name": "ERC721Burnable",
							"nameLocation": "354:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "607:268:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "842:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "834:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1478,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "834:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "834:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1482,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "846:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1483,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "855:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "855:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1477,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "826:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "826:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "826:42:8"
											}
										]
									},
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "394:162:8",
										"text": " @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "570:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "583:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "575:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:17:8"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "607:0:8"
									},
									"scope": 1489,
									"src": "561:314:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1490,
							"src": "336:541:8",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "126:752:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1615
						],
						"IERC165": [
							2030
						],
						"IERC4906": [
							175
						],
						"Strings": [
							1994
						]
					},
					"id": 1616,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1491,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1493,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1616,
							"sourceUnit": 1326,
							"src": "154:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1492,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "162:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1495,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1616,
							"sourceUnit": 1995,
							"src": "192:51:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1494,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1994,
										"src": "200:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1497,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1616,
							"sourceUnit": 176,
							"src": "244:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1496,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "252:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1499,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1616,
							"sourceUnit": 152,
							"src": "303:56:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1498,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2030,
										"src": "311:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1501,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "469:8:9"
									},
									"id": 1502,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:9"
								},
								{
									"baseName": {
										"id": 1503,
										"name": "ERC721",
										"nameLocations": [
											"479:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "479:6:9"
									},
									"id": 1504,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:9"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1500,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:9",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1615,
							"linearizedBaseContracts": [
								1615,
								1325,
								269,
								1643,
								175,
								1442,
								2018,
								2030,
								1665
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1507,
									"libraryName": {
										"id": 1505,
										"name": "Strings",
										"nameLocations": [
											"498:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1994,
										"src": "498:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:9",
									"typeName": {
										"id": 1506,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1513,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "706:65:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1508,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1511,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1510,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1509,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:9",
												"typeDescriptions": {}
											}
										},
										"id": 1512,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1517,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "817:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1516,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:9",
										"keyType": {
											"id": 1514,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1515,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										417,
										2029
									],
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "1045:99:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1528,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "1062:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1529,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "1077:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1533,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1520,
																"src": "1125:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1531,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1615_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:9",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 417,
															"src": "1101:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1527,
												"id": 1536,
												"nodeType": "Return",
												"src": "1055:82:9"
											}
										]
									},
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:9",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1524,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1522,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1013:6:9"
											},
											{
												"id": 1523,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2030,
												"src": "1021:7:9"
											}
										],
										"src": "1004:25:9"
									},
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "964:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1519,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:9"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1039:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:9"
									},
									"scope": 1615,
									"src": "937:207:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "1298:505:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1548,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "1322:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1547,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1308:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:9"
											},
											{
												"assignments": [
													1552
												],
												"declarations": [
													{
														"constant": false,
														"id": 1552,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1594,
														"src": "1341:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1551,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1556,
												"initialValue": {
													"baseExpression": {
														"id": 1553,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "1367:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1555,
													"indexExpression": {
														"id": 1554,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "1378:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:9"
											},
											{
												"assignments": [
													1558
												],
												"declarations": [
													{
														"constant": false,
														"id": 1558,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1594,
														"src": "1396:18:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1557,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1561,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1559,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1417:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1564,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "1506:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1562,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1572,
												"nodeType": "IfStatement",
												"src": "1496:70:9",
												"trueBody": {
													"id": 1571,
													"nodeType": "Block",
													"src": "1525:41:9",
													"statements": [
														{
															"expression": {
																"id": 1569,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "1546:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1546,
															"id": 1570,
															"nodeType": "Return",
															"src": "1539:16:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1575,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "1671:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1573,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1588,
												"nodeType": "IfStatement",
												"src": "1661:95:9",
												"trueBody": {
													"id": 1587,
													"nodeType": "Block",
													"src": "1694:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1583,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1558,
																		"src": "1729:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1584,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1552,
																		"src": "1735:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1580,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:9",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1546,
															"id": 1586,
															"nodeType": "Return",
															"src": "1708:37:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1591,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "1788:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1589,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1615_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:9",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "1773:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1546,
												"id": 1593,
												"nodeType": "Return",
												"src": "1766:30:9"
											}
										]
									},
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:9",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1543,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:9"
									},
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "1228:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:9"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "1283:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:9"
									},
									"scope": 1615,
									"src": "1210:593:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "2003:86:9",
										"statements": [
											{
												"expression": {
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1603,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "2013:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1605,
														"indexExpression": {
															"id": 1604,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "2024:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1606,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "2035:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1610,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "2074:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1609,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2059:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1612,
												"nodeType": "EmitStatement",
												"src": "2054:28:9"
											}
										]
									},
									"documentation": {
										"id": 1596,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:9",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "1944:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "1961:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1599,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:9"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:9"
									},
									"scope": 1615,
									"src": "1922:167:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1616,
							"src": "431:1660:9",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "128:1964:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						],
						"IERC721Metadata": [
							1643
						]
					},
					"id": 1644,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1617,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1619,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1644,
							"sourceUnit": 1443,
							"src": "153:39:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1618,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "161:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1621,
										"name": "IERC721",
										"nameLocations": [
											"357:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "357:7:10"
									},
									"id": 1622,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:10"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1620,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:10",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1643,
							"linearizedBaseContracts": [
								1643,
								1442,
								2030
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:10",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:10"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "473:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1625,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:10"
									},
									"scope": 1643,
									"src": "434:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1629,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:10",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:10"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "600:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1631,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:10"
									},
									"scope": 1643,
									"src": "559:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:10",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "734:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:10"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "774:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1639,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:10"
									},
									"scope": 1643,
									"src": "716:73:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1644,
							"src": "328:463:10",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "127:665:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1665
						]
					},
					"id": 1666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1645,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1646,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1665,
							"linearizedBaseContracts": [
								1665
							],
							"name": "Context",
							"nameLocation": "642:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "718:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1651,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1650,
												"id": 1653,
												"nodeType": "Return",
												"src": "728:17:11"
											}
										]
									},
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 1665,
									"src": "656:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1663,
										"nodeType": "Block",
										"src": "825:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1660,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1659,
												"id": 1662,
												"nodeType": "Return",
												"src": "835:15:11"
											}
										]
									},
									"id": 1664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:11"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "809:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1657,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:11"
									},
									"scope": 1665,
									"src": "758:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1666,
							"src": "624:235:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1739
						]
					},
					"id": 1740,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1668,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:12",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1739,
							"linearizedBaseContracts": [
								1739
							],
							"name": "Counters",
							"nameLocation": "432:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1671,
									"members": [
										{
											"constant": false,
											"id": 1670,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1671,
											"src": "786:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1669,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:12",
									"nodeType": "StructDefinition",
									"scope": 1739,
									"src": "447:374:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "901:38:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1679,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "918:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1671_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1670,
													"src": "918:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1678,
												"id": 1681,
												"nodeType": "Return",
												"src": "911:21:12"
											}
										]
									},
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "844:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1671_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1673,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1672,
														"name": "Counter",
														"nameLocations": [
															"844:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1671,
														"src": "844:7:12"
													},
													"referencedDeclaration": 1671,
													"src": "844:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1671_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:12"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "892:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:12"
									},
									"scope": 1739,
									"src": "827:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "998:70:12",
										"statements": [
											{
												"id": 1695,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:12",
												"statements": [
													{
														"expression": {
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1689,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1686,
																	"src": "1032:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1671_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1670,
																"src": "1032:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1694,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:12"
													}
												]
											}
										]
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "964:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1671_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1685,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1684,
														"name": "Counter",
														"nameLocations": [
															"964:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1671,
														"src": "964:7:12"
													},
													"referencedDeclaration": 1671,
													"src": "964:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1671_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:12"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:12"
									},
									"scope": 1739,
									"src": "945:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "1127:176:12",
										"statements": [
											{
												"assignments": [
													1704
												],
												"declarations": [
													{
														"constant": false,
														"id": 1704,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1724,
														"src": "1137:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1703,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1707,
												"initialValue": {
													"expression": {
														"id": 1705,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "1153:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1671_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1670,
													"src": "1153:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1709,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "1185:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1708,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:12"
											},
											{
												"id": 1723,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:12",
												"statements": [
													{
														"expression": {
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1715,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1700,
																	"src": "1260:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1671_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1717,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1670,
																"src": "1260:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1718,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1704,
																	"src": "1277:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1722,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:12"
													}
												]
											}
										]
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "1093:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1671_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1698,
														"name": "Counter",
														"nameLocations": [
															"1093:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1671,
														"src": "1093:7:12"
													},
													"referencedDeclaration": 1671,
													"src": "1093:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1671_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:12"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:12"
									},
									"scope": 1739,
									"src": "1074:229:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1737,
										"nodeType": "Block",
										"src": "1358:35:12",
										"statements": [
											{
												"expression": {
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1731,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "1368:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1671_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:12",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1670,
														"src": "1368:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:12"
											}
										]
									},
									"id": 1738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "1324:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1671_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1727,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1726,
														"name": "Counter",
														"nameLocations": [
															"1324:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1671,
														"src": "1324:7:12"
													},
													"referencedDeclaration": 1671,
													"src": "1324:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1671_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:12"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:12"
									},
									"scope": 1739,
									"src": "1309:84:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1740,
							"src": "424:971:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3084
						],
						"SignedMath": [
							3189
						],
						"Strings": [
							1994
						]
					},
					"id": 1995,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1741,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1743,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1995,
							"sourceUnit": 3085,
							"src": "127:37:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1742,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3084,
										"src": "135:4:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1745,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1995,
							"sourceUnit": 3190,
							"src": "165:49:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1744,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3189,
										"src": "173:10:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1746,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:13",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1994,
							"linearizedBaseContracts": [
								1994
							],
							"name": "Strings",
							"nameLocation": "259:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1749,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 1994,
									"src": "273:56:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1747,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1748,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1752,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 1994,
									"src": "335:42:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1750,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1751,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:13",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1759,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "505:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "520:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:13"
									},
									"src": "470:66:13"
								},
								{
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "708:627:13",
										"statements": [
											{
												"id": 1805,
												"nodeType": "UncheckedBlock",
												"src": "718:611:13",
												"statements": [
													{
														"assignments": [
															1768
														],
														"declarations": [
															{
																"constant": false,
																"id": 1768,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 1805,
																"src": "742:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1767,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1775,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1771,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1762,
																		"src": "770:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1769,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3084,
																		"src": "759:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3084_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:13",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2904,
																	"src": "759:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:13"
													},
													{
														"assignments": [
															1777
														],
														"declarations": [
															{
																"constant": false,
																"id": 1777,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 1805,
																"src": "794:20:13",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1776,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1782,
														"initialValue": {
															"arguments": [
																{
																	"id": 1780,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "828:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1778,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:13"
													},
													{
														"assignments": [
															1784
														],
														"declarations": [
															{
																"constant": false,
																"id": 1784,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:13",
																"nodeType": "VariableDeclaration",
																"scope": 1805,
																"src": "849:11:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1783,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1785,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:13"
													},
													{
														"AST": {
															"nativeSrc": "930:67:13",
															"nodeType": "YulBlock",
															"src": "930:67:13",
															"statements": [
																{
																	"nativeSrc": "948:35:13",
																	"nodeType": "YulAssignment",
																	"src": "948:35:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:13",
																						"nodeType": "YulLiteral",
																						"src": "971:2:13",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:13"
																				},
																				"nativeSrc": "967:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:13"
																		},
																		"nativeSrc": "955:28:13",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:13"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:13"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1777,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:13",
																"valueSize": 1
															},
															{
																"declaration": 1768,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:13",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:13",
																"valueSize": 1
															}
														],
														"id": 1786,
														"nodeType": "InlineAssembly",
														"src": "921:76:13"
													},
													{
														"body": {
															"id": 1801,
															"nodeType": "Block",
															"src": "1023:269:13",
															"statements": [
																{
																	"expression": {
																		"id": 1789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:13",
																		"subExpression": {
																			"id": 1788,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "1041:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1790,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:13"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:13",
																		"nodeType": "YulBlock",
																		"src": "1124:86:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:13",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:13",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:13"
																									},
																									"nativeSrc": "1164:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:13"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:13"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:13"
																							},
																							"nativeSrc": "1159:32:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:13"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:13",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:13"
																					},
																					"nativeSrc": "1146:46:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:13"
																				},
																				"nativeSrc": "1146:46:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:13"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1749,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1784,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1762,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:13",
																			"valueSize": 1
																		}
																	],
																	"id": 1791,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:13"
																},
																{
																	"expression": {
																		"id": 1794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1792,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1762,
																			"src": "1227:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1795,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:13"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1796,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1762,
																			"src": "1260:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1800,
																	"nodeType": "IfStatement",
																	"src": "1256:21:13",
																	"trueBody": {
																		"id": 1799,
																		"nodeType": "Break",
																		"src": "1272:5:13"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1802,
														"nodeType": "WhileStatement",
														"src": "1010:282:13"
													},
													{
														"expression": {
															"id": 1803,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "1312:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1766,
														"id": 1804,
														"nodeType": "Return",
														"src": "1305:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "655:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:13"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "693:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1764,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:13"
									},
									"scope": 1994,
									"src": "637:698:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "1511:92:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1818,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1810,
																	"src": "1542:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:13",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1827,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1810,
																			"src": "1588:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1825,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3189,
																			"src": "1573:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3189_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:13",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3188,
																		"src": "1573:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1824,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1807,
																"src": "1564:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1815,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 1817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:13",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1814,
												"id": 1831,
												"nodeType": "Return",
												"src": "1521:75:13"
											}
										]
									},
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:13",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "1459:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1809,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:13"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "1496:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:13"
									},
									"scope": 1994,
									"src": "1435:168:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "1782:100:13",
										"statements": [
											{
												"id": 1851,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1842,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1836,
																	"src": "1835:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1845,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1836,
																				"src": "1854:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1843,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3084,
																				"src": "1842:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3084_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:13",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3026,
																			"src": "1842:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1841,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1853,
																	1936,
																	1956
																],
																"referencedDeclaration": 1936,
																"src": "1823:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1840,
														"id": 1850,
														"nodeType": "Return",
														"src": "1816:49:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1729:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:13"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1767:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1838,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:13"
									},
									"scope": 1994,
									"src": "1708:174:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1935,
										"nodeType": "Block",
										"src": "2095:435:13",
										"statements": [
											{
												"assignments": [
													1864
												],
												"declarations": [
													{
														"constant": false,
														"id": 1864,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1935,
														"src": "2105:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1863,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1866,
												"initialValue": {
													"id": 1865,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1856,
													"src": "2126:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:13"
											},
											{
												"assignments": [
													1868
												],
												"declarations": [
													{
														"constant": false,
														"id": 1868,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1935,
														"src": "2141:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1867,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1877,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1872,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1858,
																	"src": "2177:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1869,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:13"
											},
											{
												"expression": {
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1878,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "2198:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1880,
														"indexExpression": {
															"hexValue": "30",
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1883,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:13"
											},
											{
												"expression": {
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1884,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "2223:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1886,
														"indexExpression": {
															"hexValue": "31",
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1889,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:13"
											},
											{
												"body": {
													"id": 1918,
													"nodeType": "Block",
													"src": "2293:95:13",
													"statements": [
														{
															"expression": {
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1904,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1868,
																		"src": "2307:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1906,
																	"indexExpression": {
																		"id": 1905,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1891,
																		"src": "2314:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1907,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1749,
																		"src": "2319:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1911,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1908,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1864,
																			"src": "2330:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1913,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:13"
														},
														{
															"expression": {
																"id": 1916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1914,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "2361:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1917,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1898,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1891,
														"src": "2281:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1919,
												"initializationExpression": {
													"assignments": [
														1891
													],
													"declarations": [
														{
															"constant": false,
															"id": 1891,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1919,
															"src": "2253:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1890,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1897,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1893,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1858,
																"src": "2269:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:13"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:13",
														"subExpression": {
															"id": 1901,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1891,
															"src": "2290:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1903,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1920,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "2401:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1929,
												"nodeType": "IfStatement",
												"src": "2397:96:13",
												"trueBody": {
													"id": 1928,
													"nodeType": "Block",
													"src": "2418:75:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1924,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "2468:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1925,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1858,
																		"src": "2475:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1923,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1759,
																	"src": "2439:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1927,
															"nodeType": "RevertStatement",
															"src": "2432:50:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1932,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "2516:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1930,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1862,
												"id": 1934,
												"nodeType": "Return",
												"src": "2502:21:13"
											}
										]
									},
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "2026:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "2041:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:13"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "2080:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1860,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:13"
									},
									"scope": 1994,
									"src": "2005:525:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "2762:75:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1949,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1939,
																			"src": "2807:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1947,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1945,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1952,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "2815:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1944,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1853,
															1936,
															1956
														],
														"referencedDeclaration": 1936,
														"src": "2779:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1943,
												"id": 1954,
												"nodeType": "Return",
												"src": "2772:58:13"
											}
										]
									},
									"documentation": {
										"id": 1937,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:13",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "2710:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:13"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "2747:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1941,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:13"
									},
									"scope": 1994,
									"src": "2689:148:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1992,
										"nodeType": "Block",
										"src": "2992:104:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1968,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "3015:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1966,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1973,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1961,
																		"src": "3034:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1971,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1980,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1959,
																			"src": "3063:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1978,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1977,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1986,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1961,
																			"src": "3086:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1984,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1983,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1965,
												"id": 1991,
												"nodeType": "Return",
												"src": "3002:87:13"
											}
										]
									},
									"documentation": {
										"id": 1957,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:13",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2929:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2946:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1960,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:13"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2986:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1963,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:13"
									},
									"scope": 1994,
									"src": "2914:182:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1995,
							"src": "251:2847:13",
							"usedErrors": [
								1759
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2018
						],
						"IERC165": [
							2030
						]
					},
					"id": 2019,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1996,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1998,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2019,
							"sourceUnit": 2031,
							"src": "140:38:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1997,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2030,
										"src": "148:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2000,
										"name": "IERC165",
										"nameLocations": [
											"687:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2030,
										"src": "687:7:14"
									},
									"id": 2001,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:14"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1999,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:14",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2018,
							"linearizedBaseContracts": [
								2018,
								2030
							],
							"name": "ERC165",
							"nameLocation": "677:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2029
									],
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "844:64:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2009,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2004,
														"src": "861:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2011,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2030,
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2030_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2030_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2010,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2030",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:14",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2008,
												"id": 2015,
												"nodeType": "Return",
												"src": "854:47:14"
											}
										]
									},
									"documentation": {
										"id": 2002,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:14",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "789:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2003,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:14"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "838:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:14"
									},
									"scope": 2018,
									"src": "762:146:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2019,
							"src": "659:251:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2030
						]
					},
					"id": 2031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2020,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2021,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2030,
							"linearizedBaseContracts": [
								2030
							],
							"name": "IERC165",
							"nameLocation": "431:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2022,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2029,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "817:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2023,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:15"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "860:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2026,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:15"
									},
									"scope": 2030,
									"src": "790:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2031,
							"src": "421:447:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3084
						]
					},
					"id": 3085,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2033,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3084,
							"linearizedBaseContracts": [
								3084
							],
							"name": "Math",
							"nameLocation": "211:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2034,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:16",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2036,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:16"
									},
									"src": "277:29:16"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2041,
									"members": [
										{
											"id": 2037,
											"name": "Floor",
											"nameLocation": "336:5:16",
											"nodeType": "EnumValue",
											"src": "336:5:16"
										},
										{
											"id": 2038,
											"name": "Ceil",
											"nameLocation": "379:4:16",
											"nodeType": "EnumValue",
											"src": "379:4:16"
										},
										{
											"id": 2039,
											"name": "Trunc",
											"nameLocation": "421:5:16",
											"nodeType": "EnumValue",
											"src": "421:5:16"
										},
										{
											"id": 2040,
											"name": "Expand",
											"nameLocation": "451:6:16",
											"nodeType": "EnumValue",
											"src": "451:6:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:16",
									"nodeType": "EnumDefinition",
									"src": "312:169:16"
								},
								{
									"body": {
										"id": 2072,
										"nodeType": "Block",
										"src": "661:140:16",
										"statements": [
											{
												"id": 2071,
												"nodeType": "UncheckedBlock",
												"src": "671:124:16",
												"statements": [
													{
														"assignments": [
															2054
														],
														"declarations": [
															{
																"constant": false,
																"id": 2054,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2071,
																"src": "695:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2053,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2058,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2055,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2044,
																"src": "707:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2056,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "711:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2059,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2054,
																"src": "730:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2060,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2044,
																"src": "734:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2066,
														"nodeType": "IfStatement",
														"src": "726:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2064,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2052,
															"id": 2065,
															"nodeType": "Return",
															"src": "737:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2068,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2054,
																	"src": "782:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2069,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2052,
														"id": 2070,
														"nodeType": "Return",
														"src": "768:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:16",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "612:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:16"
									},
									"returnParameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "646:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2048,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "652:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:16"
									},
									"scope": 3084,
									"src": "585:216:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "984:113:16",
										"statements": [
											{
												"id": 2099,
												"nodeType": "UncheckedBlock",
												"src": "994:97:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2085,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2078,
																"src": "1022:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2086,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "1026:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2092,
														"nodeType": "IfStatement",
														"src": "1018:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2090,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2084,
															"id": 2091,
															"nodeType": "Return",
															"src": "1029:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2094,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2076,
																		"src": "1074:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2095,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2078,
																		"src": "1078:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2097,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2084,
														"id": 2098,
														"nodeType": "Return",
														"src": "1060:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:16",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "924:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "935:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:16"
									},
									"returnParameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "969:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2080,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "975:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:16"
									},
									"scope": 3084,
									"src": "908:189:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2142,
										"nodeType": "Block",
										"src": "1283:417:16",
										"statements": [
											{
												"id": 2141,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2113,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "1551:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2120,
														"nodeType": "IfStatement",
														"src": "1547:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2118,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2112,
															"id": 2119,
															"nodeType": "Return",
															"src": "1559:16:16"
														}
													},
													{
														"assignments": [
															2122
														],
														"declarations": [
															{
																"constant": false,
																"id": 2122,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2141,
																"src": "1589:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2121,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2126,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2123,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "1601:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2106,
																"src": "1605:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2127,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "1624:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2128,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2104,
																	"src": "1628:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2130,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2106,
																"src": "1633:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2136,
														"nodeType": "IfStatement",
														"src": "1620:33:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2134,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2112,
															"id": 2135,
															"nodeType": "Return",
															"src": "1636:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2138,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "1681:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2139,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2112,
														"id": 2140,
														"nodeType": "Return",
														"src": "1667:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2102,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:16",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "1223:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "1234:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:16"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "1268:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "1274:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:16"
									},
									"scope": 3084,
									"src": "1207:493:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2170,
										"nodeType": "Block",
										"src": "1887:114:16",
										"statements": [
											{
												"id": 2169,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2155,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2148,
																"src": "1925:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2162,
														"nodeType": "IfStatement",
														"src": "1921:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2154,
															"id": 2161,
															"nodeType": "Return",
															"src": "1933:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2164,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2146,
																		"src": "1978:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2165,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2148,
																		"src": "1982:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2167,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2154,
														"id": 2168,
														"nodeType": "Return",
														"src": "1964:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2144,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:16",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "1827:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "1838:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:16"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "1872:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "1878:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:16"
									},
									"scope": 3084,
									"src": "1811:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2198,
										"nodeType": "Block",
										"src": "2198:114:16",
										"statements": [
											{
												"id": 2197,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2183,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "2236:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2190,
														"nodeType": "IfStatement",
														"src": "2232:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2188,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2182,
															"id": 2189,
															"nodeType": "Return",
															"src": "2244:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2192,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "2289:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2193,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2176,
																		"src": "2293:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2195,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2182,
														"id": 2196,
														"nodeType": "Return",
														"src": "2275:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2172,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "2138:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "2149:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:16"
									},
									"returnParameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "2183:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2178,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "2189:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:16"
									},
									"scope": 3084,
									"src": "2122:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2216,
										"nodeType": "Block",
										"src": "2449:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2209,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "2466:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2210,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2204,
															"src": "2470:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2213,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2204,
														"src": "2478:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:16",
													"trueExpression": {
														"id": 2212,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2202,
														"src": "2474:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2208,
												"id": 2215,
												"nodeType": "Return",
												"src": "2459:20:16"
											}
										]
									},
									"documentation": {
										"id": 2200,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2395:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2406:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:16"
									},
									"returnParameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2440:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:16"
									},
									"scope": 3084,
									"src": "2382:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2234,
										"nodeType": "Block",
										"src": "2624:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2227,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2220,
															"src": "2641:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2228,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2222,
															"src": "2645:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2222,
														"src": "2653:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:16",
													"trueExpression": {
														"id": 2230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2220,
														"src": "2649:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2226,
												"id": 2233,
												"nodeType": "Return",
												"src": "2634:20:16"
											}
										]
									},
									"documentation": {
										"id": 2218,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "2570:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "2581:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:16"
									},
									"returnParameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "2615:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:16"
									},
									"scope": 3084,
									"src": "2557:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2257,
										"nodeType": "Block",
										"src": "2845:82:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2245,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2238,
																	"src": "2900:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2246,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2240,
																	"src": "2904:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2248,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2238,
																		"src": "2910:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2250,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2240,
																		"src": "2914:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2252,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2244,
												"id": 2256,
												"nodeType": "Return",
												"src": "2892:28:16"
											}
										]
									},
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "2791:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "2802:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:16"
									},
									"returnParameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "2836:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:16"
									},
									"scope": 3084,
									"src": "2774:153:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2291,
										"nodeType": "Block",
										"src": "3219:260:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2268,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2263,
														"src": "3233:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2276,
												"nodeType": "IfStatement",
												"src": "3229:127:16",
												"trueBody": {
													"id": 2275,
													"nodeType": "Block",
													"src": "3241:115:16",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2271,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2261,
																	"src": "3340:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2272,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "3344:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2267,
															"id": 2274,
															"nodeType": "Return",
															"src": "3333:12:16"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2277,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "3444:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2281,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2261,
																			"src": "3458:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2284,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2285,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2263,
																"src": "3467:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:16",
													"trueExpression": {
														"hexValue": "30",
														"id": 2280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2267,
												"id": 2290,
												"nodeType": "Return",
												"src": "3437:35:16"
											}
										]
									},
									"documentation": {
										"id": 2259,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "3165:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "3176:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:16"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "3210:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:16"
									},
									"scope": 3084,
									"src": "3148:331:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2417,
										"nodeType": "Block",
										"src": "3901:4018:16",
										"statements": [
											{
												"id": 2416,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:16",
												"statements": [
													{
														"assignments": [
															2305
														],
														"declarations": [
															{
																"constant": false,
																"id": 2305,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2416,
																"src": "4232:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2304,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2309,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2306,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "4248:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2307,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2297,
																"src": "4252:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:16"
													},
													{
														"assignments": [
															2311
														],
														"declarations": [
															{
																"constant": false,
																"id": 2311,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2416,
																"src": "4312:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2310,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2312,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:16"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:16",
															"nodeType": "YulBlock",
															"src": "4392:122:16",
															"statements": [
																{
																	"nativeSrc": "4410:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:16"
																				},
																				"nativeSrc": "4433:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:16"
																		},
																		"nativeSrc": "4420:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:16",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:16",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:16"
																				},
																				"nativeSrc": "4470:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:16"
																				},
																				"nativeSrc": "4486:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:16"
																		},
																		"nativeSrc": "4466:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2305,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2305,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2311,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2295,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2297,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:16",
																"valueSize": 1
															}
														],
														"id": 2313,
														"nodeType": "InlineAssembly",
														"src": "4383:131:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2314,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2311,
																"src": "4595:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2322,
														"nodeType": "IfStatement",
														"src": "4591:368:16",
														"trueBody": {
															"id": 2321,
															"nodeType": "Block",
															"src": "4607:352:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2317,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2305,
																			"src": "4925:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2318,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2299,
																			"src": "4933:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2303,
																	"id": 2320,
																	"nodeType": "Return",
																	"src": "4918:26:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2323,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "5065:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2324,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2311,
																"src": "5080:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2330,
														"nodeType": "IfStatement",
														"src": "5061:88:16",
														"trueBody": {
															"id": 2329,
															"nodeType": "Block",
															"src": "5087:62:16",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2326,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2036,
																			"src": "5112:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2328,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:16"
																}
															]
														}
													},
													{
														"assignments": [
															2332
														],
														"declarations": [
															{
																"constant": false,
																"id": 2332,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2416,
																"src": "5404:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2331,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2333,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:16"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:16",
															"nodeType": "YulBlock",
															"src": "5444:291:16",
															"statements": [
																{
																	"nativeSrc": "5513:38:16",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:16"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:16"
																		},
																		"nativeSrc": "5526:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:16",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:16",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:16"
																				},
																				"nativeSrc": "5653:20:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:16"
																		},
																		"nativeSrc": "5642:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:16",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:16"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:16"
																		},
																		"nativeSrc": "5700:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2299,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2305,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2305,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2305,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2311,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2311,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2332,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2332,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2332,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2295,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2297,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:16",
																"valueSize": 1
															}
														],
														"id": 2334,
														"nodeType": "InlineAssembly",
														"src": "5435:300:16"
													},
													{
														"assignments": [
															2336
														],
														"declarations": [
															{
																"constant": false,
																"id": 2336,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2416,
																"src": "5939:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2335,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2343,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2337,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "5954:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2339,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2299,
																			"src": "5973:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2341,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:16"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:16",
															"nodeType": "YulBlock",
															"src": "6008:362:16",
															"statements": [
																{
																	"nativeSrc": "6073:37:16",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:16"
																		},
																		"nativeSrc": "6088:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:16",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:16"
																		},
																		"nativeSrc": "6186:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:16",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:16"
																						},
																						"nativeSrc": "6333:12:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:16"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:16"
																				},
																				"nativeSrc": "6329:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:16"
																		},
																		"nativeSrc": "6325:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2299,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2299,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2305,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2305,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2336,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2336,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2336,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2336,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2336,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:16",
																"valueSize": 1
															}
														],
														"id": 2344,
														"nodeType": "InlineAssembly",
														"src": "5999:371:16"
													},
													{
														"expression": {
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2345,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2305,
																"src": "6436:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2346,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2311,
																	"src": "6445:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2347,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2336,
																	"src": "6453:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2350,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:16"
													},
													{
														"assignments": [
															2352
														],
														"declarations": [
															{
																"constant": false,
																"id": 2352,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2416,
																"src": "6775:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2351,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2359,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2354,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2299,
																			"src": "6798:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2356,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:16"
													},
													{
														"expression": {
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2360,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "7031:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2362,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2299,
																		"src": "7046:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2363,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2352,
																		"src": "7060:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2367,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:16"
													},
													{
														"expression": {
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2368,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "7100:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2370,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2299,
																		"src": "7115:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2371,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2352,
																		"src": "7129:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2375,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:16"
													},
													{
														"expression": {
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2376,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "7170:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2378,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2299,
																		"src": "7185:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2379,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2352,
																		"src": "7199:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2383,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:16"
													},
													{
														"expression": {
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2384,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "7240:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2386,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2299,
																		"src": "7255:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2387,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2352,
																		"src": "7269:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2391,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:16"
													},
													{
														"expression": {
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2392,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "7310:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2394,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2299,
																		"src": "7325:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2395,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2352,
																		"src": "7339:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2399,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:16"
													},
													{
														"expression": {
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2400,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "7381:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2402,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2299,
																		"src": "7396:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2403,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2352,
																		"src": "7410:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2407,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:16"
													},
													{
														"expression": {
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2408,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2302,
																"src": "7851:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2409,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2305,
																	"src": "7860:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2410,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2352,
																	"src": "7868:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2413,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:16"
													},
													{
														"expression": {
															"id": 2414,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2302,
															"src": "7896:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2303,
														"id": 2415,
														"nodeType": "Return",
														"src": "7889:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2293,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:16",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "3819:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "3830:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "3841:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:16"
									},
									"returnParameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "3885:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:16"
									},
									"scope": 3084,
									"src": "3803:4116:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2460,
										"nodeType": "Block",
										"src": "8161:192:16",
										"statements": [
											{
												"assignments": [
													2434
												],
												"declarations": [
													{
														"constant": false,
														"id": 2434,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2460,
														"src": "8171:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2433,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2440,
												"initialValue": {
													"arguments": [
														{
															"id": 2436,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2421,
															"src": "8195:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2437,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2423,
															"src": "8198:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2438,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2425,
															"src": "8201:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2435,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2418,
															2461
														],
														"referencedDeclaration": 2418,
														"src": "8188:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2442,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2428,
																"src": "8244:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2041",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2041",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2441,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3083,
															"src": "8227:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2041_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2445,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2421,
																	"src": "8264:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2446,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2423,
																	"src": "8267:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2447,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2425,
																	"src": "8270:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2444,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2457,
												"nodeType": "IfStatement",
												"src": "8223:101:16",
												"trueBody": {
													"id": 2456,
													"nodeType": "Block",
													"src": "8288:36:16",
													"statements": [
														{
															"expression": {
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2452,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2434,
																	"src": "8302:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2455,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2458,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2434,
													"src": "8340:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2432,
												"id": 2459,
												"nodeType": "Return",
												"src": "8333:13:16"
											}
										]
									},
									"documentation": {
										"id": 2419,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:16",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "8067:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "8078:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "8089:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "8110:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2041",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2427,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2426,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2041,
														"src": "8110:8:16"
													},
													"referencedDeclaration": 2041,
													"src": "8110:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2041",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:16"
									},
									"returnParameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "8152:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:16"
									},
									"scope": 3084,
									"src": "8051:302:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2572,
										"nodeType": "Block",
										"src": "8644:1585:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2469,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2464,
														"src": "8658:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2475,
												"nodeType": "IfStatement",
												"src": "8654:45:16",
												"trueBody": {
													"id": 2474,
													"nodeType": "Block",
													"src": "8666:33:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2468,
															"id": 2473,
															"nodeType": "Return",
															"src": "8680:8:16"
														}
													]
												}
											},
											{
												"assignments": [
													2477
												],
												"declarations": [
													{
														"constant": false,
														"id": 2477,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2572,
														"src": "9378:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2476,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2486,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2480,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2464,
																			"src": "9406:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2479,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2740,
																			2775
																		],
																		"referencedDeclaration": 2740,
																		"src": "9401:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2484,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:16"
											},
											{
												"id": 2571,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:16",
												"statements": [
													{
														"expression": {
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2487,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2477,
																"src": "9839:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2488,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2477,
																				"src": "9849:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2489,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2464,
																					"src": "9858:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2490,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2477,
																					"src": "9862:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2493,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2497,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:16"
													},
													{
														"expression": {
															"id": 2507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2498,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2477,
																"src": "9888:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2499,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2477,
																				"src": "9898:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2502,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2500,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2464,
																					"src": "9907:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2501,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2477,
																					"src": "9911:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2504,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2508,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:16"
													},
													{
														"expression": {
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2509,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2477,
																"src": "9937:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2510,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2477,
																				"src": "9947:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2513,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2511,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2464,
																					"src": "9956:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2512,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2477,
																					"src": "9960:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2515,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2519,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:16"
													},
													{
														"expression": {
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2520,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2477,
																"src": "9986:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2521,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2477,
																				"src": "9996:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2522,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2464,
																					"src": "10005:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2523,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2477,
																					"src": "10009:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2526,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2530,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:16"
													},
													{
														"expression": {
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2531,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2477,
																"src": "10035:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2532,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2477,
																				"src": "10045:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2535,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2533,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2464,
																					"src": "10054:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2534,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2477,
																					"src": "10058:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2537,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2541,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:16"
													},
													{
														"expression": {
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2542,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2477,
																"src": "10084:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2543,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2477,
																				"src": "10094:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2544,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2464,
																					"src": "10103:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2545,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2477,
																					"src": "10107:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2548,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2552,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:16"
													},
													{
														"expression": {
															"id": 2562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2553,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2477,
																"src": "10133:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2554,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2477,
																				"src": "10143:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2555,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2464,
																					"src": "10152:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2556,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2477,
																					"src": "10156:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2559,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2563,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:16"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2565,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2477,
																	"src": "10193:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2566,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2464,
																		"src": "10201:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2567,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2477,
																		"src": "10205:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2564,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2235,
																"src": "10189:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2468,
														"id": 2570,
														"nodeType": "Return",
														"src": "10182:30:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2462,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "8601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:16"
									},
									"returnParameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "8635:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:16"
									},
									"scope": 3084,
									"src": "8587:1642:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2607,
										"nodeType": "Block",
										"src": "10405:164:16",
										"statements": [
											{
												"id": 2606,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:16",
												"statements": [
													{
														"assignments": [
															2585
														],
														"declarations": [
															{
																"constant": false,
																"id": 2585,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2606,
																"src": "10439:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2584,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2589,
														"initialValue": {
															"arguments": [
																{
																	"id": 2587,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2576,
																	"src": "10461:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2586,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2573,
																	2608
																],
																"referencedDeclaration": 2573,
																"src": "10456:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2590,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2585,
																"src": "10484:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2592,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2579,
																						"src": "10511:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2041",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2041",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2591,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3083,
																					"src": "10494:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2041_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2596,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2594,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2585,
																						"src": "10524:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2595,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2585,
																						"src": "10533:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2597,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2576,
																					"src": "10542:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2603,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2583,
														"id": 2605,
														"nodeType": "Return",
														"src": "10477:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2574,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:16",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2576,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "10343:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "10354:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2041",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2578,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2577,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2041,
														"src": "10354:8:16"
													},
													"referencedDeclaration": 2041,
													"src": "10354:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2041",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:16"
									},
									"returnParameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "10396:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:16"
									},
									"scope": 3084,
									"src": "10329:240:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2739,
										"nodeType": "Block",
										"src": "10760:922:16",
										"statements": [
											{
												"assignments": [
													2617
												],
												"declarations": [
													{
														"constant": false,
														"id": 2617,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2739,
														"src": "10770:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2616,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2619,
												"initialValue": {
													"hexValue": "30",
													"id": 2618,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:16"
											},
											{
												"id": 2736,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2620,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "10826:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2634,
														"nodeType": "IfStatement",
														"src": "10822:99:16",
														"trueBody": {
															"id": 2633,
															"nodeType": "Block",
															"src": "10844:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 2627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2625,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "10862:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2628,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:16"
																},
																{
																	"expression": {
																		"id": 2631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2629,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2617,
																			"src": "10893:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2632,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2635,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "10938:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2649,
														"nodeType": "IfStatement",
														"src": "10934:96:16",
														"trueBody": {
															"id": 2648,
															"nodeType": "Block",
															"src": "10955:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2640,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "10973:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2643,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:16"
																},
																{
																	"expression": {
																		"id": 2646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2644,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2617,
																			"src": "11003:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2647,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2650,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "11047:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2664,
														"nodeType": "IfStatement",
														"src": "11043:96:16",
														"trueBody": {
															"id": 2663,
															"nodeType": "Block",
															"src": "11064:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2655,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "11082:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2658,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:16"
																},
																{
																	"expression": {
																		"id": 2661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2659,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2617,
																			"src": "11112:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2662,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "11156:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2679,
														"nodeType": "IfStatement",
														"src": "11152:96:16",
														"trueBody": {
															"id": 2678,
															"nodeType": "Block",
															"src": "11173:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2670,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "11191:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2673,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:16"
																},
																{
																	"expression": {
																		"id": 2676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2674,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2617,
																			"src": "11221:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2677,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2680,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "11265:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2694,
														"nodeType": "IfStatement",
														"src": "11261:93:16",
														"trueBody": {
															"id": 2693,
															"nodeType": "Block",
															"src": "11281:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2685,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "11299:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2688,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:16"
																},
																{
																	"expression": {
																		"id": 2691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2689,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2617,
																			"src": "11328:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2692,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2695,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "11371:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2709,
														"nodeType": "IfStatement",
														"src": "11367:93:16",
														"trueBody": {
															"id": 2708,
															"nodeType": "Block",
															"src": "11387:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2700,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "11405:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2703,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:16"
																},
																{
																	"expression": {
																		"id": 2706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2704,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2617,
																			"src": "11434:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2707,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2710,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "11477:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2724,
														"nodeType": "IfStatement",
														"src": "11473:93:16",
														"trueBody": {
															"id": 2723,
															"nodeType": "Block",
															"src": "11493:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2715,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "11511:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2718,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:16"
																},
																{
																	"expression": {
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2719,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2617,
																			"src": "11540:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2722,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2725,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "11583:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2735,
														"nodeType": "IfStatement",
														"src": "11579:64:16",
														"trueBody": {
															"id": 2734,
															"nodeType": "Block",
															"src": "11599:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2730,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2617,
																			"src": "11617:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2733,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2737,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2617,
													"src": "11669:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2615,
												"id": 2738,
												"nodeType": "Return",
												"src": "11662:13:16"
											}
										]
									},
									"documentation": {
										"id": 2609,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:16",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "10713:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:16"
									},
									"returnParameters": {
										"id": 2615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "10751:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:16"
									},
									"scope": 3084,
									"src": "10699:983:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2774,
										"nodeType": "Block",
										"src": "11915:168:16",
										"statements": [
											{
												"id": 2773,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:16",
												"statements": [
													{
														"assignments": [
															2752
														],
														"declarations": [
															{
																"constant": false,
																"id": 2752,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2773,
																"src": "11949:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2751,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2756,
														"initialValue": {
															"arguments": [
																{
																	"id": 2754,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2743,
																	"src": "11971:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2753,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2740,
																	2775
																],
																"referencedDeclaration": 2740,
																"src": "11966:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2757,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2752,
																"src": "11998:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2759,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2746,
																						"src": "12025:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2041",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2041",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2758,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3083,
																					"src": "12008:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2041_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2763,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2761,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2762,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2752,
																						"src": "12043:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2764,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2743,
																					"src": "12052:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2770,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2750,
														"id": 2772,
														"nodeType": "Return",
														"src": "11991:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2741,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2743,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "11849:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "11864:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2041",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2745,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2744,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2041,
														"src": "11864:8:16"
													},
													"referencedDeclaration": 2041,
													"src": "11864:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2041",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:16"
									},
									"returnParameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "11906:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:16"
									},
									"scope": 3084,
									"src": "11835:248:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2903,
										"nodeType": "Block",
										"src": "12276:854:16",
										"statements": [
											{
												"assignments": [
													2784
												],
												"declarations": [
													{
														"constant": false,
														"id": 2784,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2903,
														"src": "12286:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2783,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2786,
												"initialValue": {
													"hexValue": "30",
													"id": 2785,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:16"
											},
											{
												"id": 2900,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2787,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2778,
																"src": "12342:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2803,
														"nodeType": "IfStatement",
														"src": "12338:103:16",
														"trueBody": {
															"id": 2802,
															"nodeType": "Block",
															"src": "12361:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2792,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2778,
																			"src": "12379:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2797,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:16"
																},
																{
																	"expression": {
																		"id": 2800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2798,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2784,
																			"src": "12414:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2801,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2804,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2778,
																"src": "12458:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2820,
														"nodeType": "IfStatement",
														"src": "12454:103:16",
														"trueBody": {
															"id": 2819,
															"nodeType": "Block",
															"src": "12477:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2809,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2778,
																			"src": "12495:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2810,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2814,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:16"
																},
																{
																	"expression": {
																		"id": 2817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2815,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2784,
																			"src": "12530:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2818,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2821,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2778,
																"src": "12574:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2837,
														"nodeType": "IfStatement",
														"src": "12570:103:16",
														"trueBody": {
															"id": 2836,
															"nodeType": "Block",
															"src": "12593:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2826,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2778,
																			"src": "12611:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2827,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2831,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:16"
																},
																{
																	"expression": {
																		"id": 2834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2832,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2784,
																			"src": "12646:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2835,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2838,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2778,
																"src": "12690:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2854,
														"nodeType": "IfStatement",
														"src": "12686:100:16",
														"trueBody": {
															"id": 2853,
															"nodeType": "Block",
															"src": "12708:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2843,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2778,
																			"src": "12726:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2844,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2848,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:16"
																},
																{
																	"expression": {
																		"id": 2851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2849,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2784,
																			"src": "12760:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2852,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2855,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2778,
																"src": "12803:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2871,
														"nodeType": "IfStatement",
														"src": "12799:100:16",
														"trueBody": {
															"id": 2870,
															"nodeType": "Block",
															"src": "12821:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2860,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2778,
																			"src": "12839:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2861,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2865,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:16"
																},
																{
																	"expression": {
																		"id": 2868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2866,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2784,
																			"src": "12873:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2869,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2872,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2778,
																"src": "12916:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2888,
														"nodeType": "IfStatement",
														"src": "12912:100:16",
														"trueBody": {
															"id": 2887,
															"nodeType": "Block",
															"src": "12934:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2877,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2778,
																			"src": "12952:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2878,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2879,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2882,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:16"
																},
																{
																	"expression": {
																		"id": 2885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2883,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2784,
																			"src": "12986:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2886,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2889,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2778,
																"src": "13029:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2899,
														"nodeType": "IfStatement",
														"src": "13025:66:16",
														"trueBody": {
															"id": 2898,
															"nodeType": "Block",
															"src": "13047:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2894,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2784,
																			"src": "13065:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2897,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2901,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2784,
													"src": "13117:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2782,
												"id": 2902,
												"nodeType": "Return",
												"src": "13110:13:16"
											}
										]
									},
									"documentation": {
										"id": 2776,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:16",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "12229:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:16"
									},
									"returnParameters": {
										"id": 2782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "12267:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:16"
									},
									"scope": 3084,
									"src": "12214:916:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2938,
										"nodeType": "Block",
										"src": "13365:170:16",
										"statements": [
											{
												"id": 2937,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:16",
												"statements": [
													{
														"assignments": [
															2916
														],
														"declarations": [
															{
																"constant": false,
																"id": 2916,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2937,
																"src": "13399:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2915,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2920,
														"initialValue": {
															"arguments": [
																{
																	"id": 2918,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2907,
																	"src": "13422:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2917,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2904,
																	2939
																],
																"referencedDeclaration": 2904,
																"src": "13416:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2921,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2916,
																"src": "13449:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2923,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2910,
																						"src": "13476:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2041",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2041",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2922,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3083,
																					"src": "13459:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2041_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2924,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2927,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2925,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2926,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2916,
																						"src": "13495:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2928,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2907,
																					"src": "13504:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2934,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2914,
														"id": 2936,
														"nodeType": "Return",
														"src": "13442:76:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2905,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2907,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "13299:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2910,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "13314:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2041",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2909,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2908,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2041,
														"src": "13314:8:16"
													},
													"referencedDeclaration": 2041,
													"src": "13314:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2041",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:16"
									},
									"returnParameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "13356:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:16"
									},
									"scope": 3084,
									"src": "13284:251:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3025,
										"nodeType": "Block",
										"src": "13855:600:16",
										"statements": [
											{
												"assignments": [
													2948
												],
												"declarations": [
													{
														"constant": false,
														"id": 2948,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3025,
														"src": "13865:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2947,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2950,
												"initialValue": {
													"hexValue": "30",
													"id": 2949,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:16"
											},
											{
												"id": 3022,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2951,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2942,
																	"src": "13921:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2965,
														"nodeType": "IfStatement",
														"src": "13917:98:16",
														"trueBody": {
															"id": 2964,
															"nodeType": "Block",
															"src": "13939:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 2958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2956,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "13957:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2959,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:16"
																},
																{
																	"expression": {
																		"id": 2962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2960,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2948,
																			"src": "13988:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2963,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2966,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2942,
																	"src": "14032:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2980,
														"nodeType": "IfStatement",
														"src": "14028:95:16",
														"trueBody": {
															"id": 2979,
															"nodeType": "Block",
															"src": "14049:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 2973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2971,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "14067:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2974,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:16"
																},
																{
																	"expression": {
																		"id": 2977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2975,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2948,
																			"src": "14097:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2978,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2981,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2942,
																	"src": "14140:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2995,
														"nodeType": "IfStatement",
														"src": "14136:95:16",
														"trueBody": {
															"id": 2994,
															"nodeType": "Block",
															"src": "14157:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 2988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2986,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "14175:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2989,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:16"
																},
																{
																	"expression": {
																		"id": 2992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2990,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2948,
																			"src": "14205:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2993,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2996,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2942,
																	"src": "14248:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3010,
														"nodeType": "IfStatement",
														"src": "14244:95:16",
														"trueBody": {
															"id": 3009,
															"nodeType": "Block",
															"src": "14265:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3001,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "14283:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3004,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:16"
																},
																{
																	"expression": {
																		"id": 3007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3005,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2948,
																			"src": "14313:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3008,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2942,
																	"src": "14356:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3021,
														"nodeType": "IfStatement",
														"src": "14352:64:16",
														"trueBody": {
															"id": 3020,
															"nodeType": "Block",
															"src": "14372:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3016,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2948,
																			"src": "14390:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3019,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3023,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2948,
													"src": "14442:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2946,
												"id": 3024,
												"nodeType": "Return",
												"src": "14435:13:16"
											}
										]
									},
									"documentation": {
										"id": 2940,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:16",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2942,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3026,
												"src": "13808:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:16"
									},
									"returnParameters": {
										"id": 2946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3026,
												"src": "13846:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:16"
									},
									"scope": 3084,
									"src": "13792:663:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3063,
										"nodeType": "Block",
										"src": "14692:177:16",
										"statements": [
											{
												"id": 3062,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:16",
												"statements": [
													{
														"assignments": [
															3038
														],
														"declarations": [
															{
																"constant": false,
																"id": 3038,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3062,
																"src": "14726:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3037,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3042,
														"initialValue": {
															"arguments": [
																{
																	"id": 3040,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3029,
																	"src": "14750:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3039,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3026,
																	3064
																],
																"referencedDeclaration": 3026,
																"src": "14743:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3043,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3038,
																"src": "14777:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3045,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3032,
																						"src": "14804:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2041",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2041",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3044,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3083,
																					"src": "14787:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2041_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3046,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3052,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3047,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3050,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3048,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3038,
																									"src": "14823:6:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3049,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3051,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3053,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3029,
																					"src": "14838:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3059,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3036,
														"id": 3061,
														"nodeType": "Return",
														"src": "14770:82:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3027,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:16",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "14626:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3032,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "14641:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2041",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3031,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3030,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2041,
														"src": "14641:8:16"
													},
													"referencedDeclaration": 2041,
													"src": "14641:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2041",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:16"
									},
									"returnParameters": {
										"id": 3036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "14683:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:16"
									},
									"scope": 3084,
									"src": "14610:259:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3082,
										"nodeType": "Block",
										"src": "15067:48:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3075,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3068,
																	"src": "15090:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2041",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2041",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3073,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3072,
												"id": 3081,
												"nodeType": "Return",
												"src": "15077:31:16"
											}
										]
									},
									"documentation": {
										"id": 3065,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:16",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3068,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3083,
												"src": "15019:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2041",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3067,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3066,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2041,
														"src": "15019:8:16"
													},
													"referencedDeclaration": 2041,
													"src": "15019:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2041",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:16"
									},
									"returnParameters": {
										"id": 3072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3083,
												"src": "15061:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3070,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:16"
									},
									"scope": 3084,
									"src": "14993:122:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3085,
							"src": "203:14914:16",
							"usedErrors": [
								2036
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3189
						]
					},
					"id": 3190,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3086,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3087,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:17",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3189,
							"linearizedBaseContracts": [
								3189
							],
							"name": "SignedMath",
							"nameLocation": "224:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3104,
										"nodeType": "Block",
										"src": "376:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3097,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3090,
															"src": "393:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3098,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3092,
															"src": "397:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3101,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3092,
														"src": "405:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:17",
													"trueExpression": {
														"id": 3100,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3090,
														"src": "401:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3096,
												"id": 3103,
												"nodeType": "Return",
												"src": "386:20:17"
											}
										]
									},
									"documentation": {
										"id": 3088,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:17",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3090,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3105,
												"src": "325:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3089,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3105,
												"src": "335:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3091,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:17"
									},
									"returnParameters": {
										"id": 3096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3105,
												"src": "368:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3094,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:17"
									},
									"scope": 3189,
									"src": "312:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3122,
										"nodeType": "Block",
										"src": "555:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3115,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3108,
															"src": "572:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3116,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3110,
															"src": "576:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3119,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3110,
														"src": "584:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:17",
													"trueExpression": {
														"id": 3118,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3108,
														"src": "580:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3114,
												"id": 3121,
												"nodeType": "Return",
												"src": "565:20:17"
											}
										]
									},
									"documentation": {
										"id": 3106,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:17",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3108,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "504:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3107,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "514:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3109,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:17"
									},
									"returnParameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "547:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3112,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:17"
									},
									"scope": 3189,
									"src": "491:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3166,
										"nodeType": "Block",
										"src": "797:162:17",
										"statements": [
											{
												"assignments": [
													3134
												],
												"declarations": [
													{
														"constant": false,
														"id": 3134,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:17",
														"nodeType": "VariableDeclaration",
														"scope": 3166,
														"src": "859:8:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3133,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3147,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3135,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3126,
																	"src": "871:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3136,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3128,
																	"src": "875:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3138,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3139,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3126,
																				"src": "882:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3140,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3128,
																				"src": "886:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3142,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3145,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:17"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3148,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3134,
														"src": "911:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3153,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3134,
																						"src": "931:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3152,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3151,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:17",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3154,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3155,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3149,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3158,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3126,
																				"src": "945:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3159,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3128,
																				"src": "949:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3161,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3163,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3132,
												"id": 3165,
												"nodeType": "Return",
												"src": "904:48:17"
											}
										]
									},
									"documentation": {
										"id": 3124,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:17",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3126,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3167,
												"src": "746:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3125,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3167,
												"src": "756:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3127,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:17"
									},
									"returnParameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3167,
												"src": "789:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3130,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:17"
									},
									"scope": 3189,
									"src": "729:230:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3187,
										"nodeType": "Block",
										"src": "1103:158:17",
										"statements": [
											{
												"id": 3186,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:17",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3177,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3170,
																			"src": "1228:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:17",
																		"subExpression": {
																			"id": 3181,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3170,
																			"src": "1242:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:17",
																	"trueExpression": {
																		"id": 3180,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3170,
																		"src": "1237:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3175,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3174,
														"id": 3185,
														"nodeType": "Return",
														"src": "1213:31:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3168,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:17",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3170,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "1061:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3169,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:17"
									},
									"returnParameters": {
										"id": 3174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "1094:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:17"
									},
									"scope": 3189,
									"src": "1048:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3190,
							"src": "216:1047:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:17"
				},
				"id": 17
			},
			"contracts/NFTEventConcert.sol": {
				"ast": {
					"absolutePath": "contracts/NFTEventConcert.sol",
					"exportedSymbols": {
						"ArtistDynamicNFT": [
							3375
						],
						"Context": [
							1665
						],
						"Counters": [
							1739
						],
						"ERC165": [
							2018
						],
						"ERC721": [
							1325
						],
						"ERC721Burnable": [
							1489
						],
						"ERC721URIStorage": [
							1615
						],
						"IERC165": [
							2030
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1643
						],
						"IERC721Receiver": [
							1460
						],
						"LocationProvider": [
							3204
						],
						"Ownable": [
							147
						],
						"Strings": [
							1994
						]
					},
					"id": 3376,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3191,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3376,
							"sourceUnit": 1326,
							"src": "58:57:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3376,
							"sourceUnit": 1616,
							"src": "116:78:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
							"id": 3194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3376,
							"sourceUnit": 1490,
							"src": "195:76:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3195,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3376,
							"sourceUnit": 148,
							"src": "272:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3196,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3376,
							"sourceUnit": 1740,
							"src": "325:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LocationProvider",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3204,
							"linearizedBaseContracts": [
								3204
							],
							"name": "LocationProvider",
							"nameLocation": "389:16:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d9e0dc59",
									"id": 3203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLocation",
									"nameLocation": "421:11:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3198,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "441:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3203,
												"src": "433:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:18"
									},
									"returnParameters": {
										"id": 3202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3203,
												"src": "471:13:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:18"
									},
									"scope": 3204,
									"src": "412:74:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3376,
							"src": "379:109:18",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3205,
										"name": "ERC721",
										"nameLocations": [
											"519:6:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "519:6:18"
									},
									"id": 3206,
									"nodeType": "InheritanceSpecifier",
									"src": "519:6:18"
								},
								{
									"baseName": {
										"id": 3207,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"527:16:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1615,
										"src": "527:16:18"
									},
									"id": 3208,
									"nodeType": "InheritanceSpecifier",
									"src": "527:16:18"
								},
								{
									"baseName": {
										"id": 3209,
										"name": "ERC721Burnable",
										"nameLocations": [
											"545:14:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1489,
										"src": "545:14:18"
									},
									"id": 3210,
									"nodeType": "InheritanceSpecifier",
									"src": "545:14:18"
								},
								{
									"baseName": {
										"id": 3211,
										"name": "Ownable",
										"nameLocations": [
											"561:7:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "561:7:18"
									},
									"id": 3212,
									"nodeType": "InheritanceSpecifier",
									"src": "561:7:18"
								}
							],
							"canonicalName": "ArtistDynamicNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3375,
							"linearizedBaseContracts": [
								3375,
								147,
								1489,
								1615,
								1325,
								269,
								1643,
								175,
								1442,
								2018,
								2030,
								1665
							],
							"name": "ArtistDynamicNFT",
							"nameLocation": "499:16:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3214,
									"mutability": "mutable",
									"name": "uri",
									"nameLocation": "591:3:18",
									"nodeType": "VariableDeclaration",
									"scope": 3375,
									"src": "576:18:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3213,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "576:6:18",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"global": false,
									"id": 3218,
									"libraryName": {
										"id": 3215,
										"name": "Counters",
										"nameLocations": [
											"607:8:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1739,
										"src": "607:8:18"
									},
									"nodeType": "UsingForDirective",
									"src": "601:36:18",
									"typeName": {
										"id": 3217,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3216,
											"name": "Counters.Counter",
											"nameLocations": [
												"620:8:18",
												"629:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1671,
											"src": "620:16:18"
										},
										"referencedDeclaration": 1671,
										"src": "620:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1671_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 3221,
									"mutability": "mutable",
									"name": "_tokenIds",
									"nameLocation": "667:9:18",
									"nodeType": "VariableDeclaration",
									"scope": 3375,
									"src": "642:34:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1671_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3220,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3219,
											"name": "Counters.Counter",
											"nameLocations": [
												"642:8:18",
												"651:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1671,
											"src": "642:16:18"
										},
										"referencedDeclaration": 1671,
										"src": "642:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1671_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3225,
									"mutability": "mutable",
									"name": "tokenLocations",
									"nameLocation": "717:14:18",
									"nodeType": "VariableDeclaration",
									"scope": 3375,
									"src": "682:49:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 3224,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3222,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "690:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "682:26:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3223,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "701:6:18",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3228,
									"mutability": "mutable",
									"name": "locationProvider",
									"nameLocation": "762:16:18",
									"nodeType": "VariableDeclaration",
									"scope": 3375,
									"src": "737:41:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_LocationProvider_$3204",
										"typeString": "contract LocationProvider"
									},
									"typeName": {
										"id": 3227,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3226,
											"name": "LocationProvider",
											"nameLocations": [
												"737:16:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3204,
											"src": "737:16:18"
										},
										"referencedDeclaration": 3204,
										"src": "737:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LocationProvider_$3204",
											"typeString": "contract LocationProvider"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3256,
										"nodeType": "Block",
										"src": "940:65:18",
										"statements": [
											{
												"expression": {
													"id": 3250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3248,
														"name": "uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3214,
														"src": "946:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3249,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3234,
														"src": "952:4:18",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "946:10:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3251,
												"nodeType": "ExpressionStatement",
												"src": "946:10:18"
											},
											{
												"expression": {
													"id": 3254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3252,
														"name": "locationProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3228,
														"src": "962:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LocationProvider_$3204",
															"typeString": "contract LocationProvider"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3253,
														"name": "_locationProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3237,
														"src": "981:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LocationProvider_$3204",
															"typeString": "contract LocationProvider"
														}
													},
													"src": "962:36:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LocationProvider_$3204",
														"typeString": "contract LocationProvider"
													}
												},
												"id": 3255,
												"nodeType": "ExpressionStatement",
												"src": "962:36:18"
											}
										]
									},
									"id": 3257,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3240,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3230,
													"src": "906:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 3241,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3232,
													"src": "912:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 3242,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3239,
												"name": "ERC721",
												"nameLocations": [
													"899:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "899:6:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "899:20:18"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 3244,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "928:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "932:6:18",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "928:10:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3246,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3243,
												"name": "Ownable",
												"nameLocations": [
													"920:7:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "920:7:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "920:19:18"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3230,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "811:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3257,
												"src": "797:18:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3229,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "797:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3232,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "831:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3257,
												"src": "817:20:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3231,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3234,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "853:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3257,
												"src": "839:18:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "839:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3237,
												"mutability": "mutable",
												"name": "_locationProvider",
												"nameLocation": "876:17:18",
												"nodeType": "VariableDeclaration",
												"scope": 3257,
												"src": "859:34:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_LocationProvider_$3204",
													"typeString": "contract LocationProvider"
												},
												"typeName": {
													"id": 3236,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3235,
														"name": "LocationProvider",
														"nameLocations": [
															"859:16:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3204,
														"src": "859:16:18"
													},
													"referencedDeclaration": 3204,
													"src": "859:16:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LocationProvider_$3204",
														"typeString": "contract LocationProvider"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:98:18"
									},
									"returnParameters": {
										"id": 3247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "940:0:18"
									},
									"scope": 3375,
									"src": "785:220:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3286,
										"nodeType": "Block",
										"src": "1075:178:18",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3264,
															"name": "_tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3221,
															"src": "1085:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1671_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3266,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1095:9:18",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1697,
														"src": "1085:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1671_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1671_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1085:21:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3268,
												"nodeType": "ExpressionStatement",
												"src": "1085:21:18"
											},
											{
												"assignments": [
													3270
												],
												"declarations": [
													{
														"constant": false,
														"id": 3270,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1124:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 3286,
														"src": "1116:15:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3269,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1116:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3274,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3271,
															"name": "_tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3221,
															"src": "1134:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1671_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3272,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1144:7:18",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1683,
														"src": "1134:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1671_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1671_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:19:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1116:37:18"
											},
											{
												"expression": {
													"id": 3282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3275,
															"name": "tokenLocations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3225,
															"src": "1163:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 3277,
														"indexExpression": {
															"id": 3276,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3270,
															"src": "1178:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1163:23:18",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3280,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3259,
																"src": "1218:2:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 3278,
																"name": "locationProvider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3228,
																"src": "1189:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_LocationProvider_$3204",
																	"typeString": "contract LocationProvider"
																}
															},
															"id": 3279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1206:11:18",
															"memberName": "getLocation",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3203,
															"src": "1189:28:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
																"typeString": "function (address) view external returns (string memory)"
															}
														},
														"id": 3281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1189:32:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1163:58:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3283,
												"nodeType": "ExpressionStatement",
												"src": "1163:58:18"
											},
											{
												"expression": {
													"id": 3284,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3270,
													"src": "1239:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3263,
												"id": 3285,
												"nodeType": "Return",
												"src": "1232:14:18"
											}
										]
									},
									"functionSelector": "40d097c3",
									"id": 3287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "1021:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3259,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1038:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3287,
												"src": "1030:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:12:18"
									},
									"returnParameters": {
										"id": 3263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3287,
												"src": "1066:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:9:18"
									},
									"scope": 3375,
									"src": "1012:241:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										521
									],
									"body": {
										"id": 3295,
										"nodeType": "Block",
										"src": "1334:27:18",
										"statements": [
											{
												"expression": {
													"id": 3293,
													"name": "uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3214,
													"src": "1351:3:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 3292,
												"id": 3294,
												"nodeType": "Return",
												"src": "1344:10:18"
											}
										]
									},
									"id": 3296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "1268:8:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3289,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1301:8:18"
									},
									"parameters": {
										"id": 3288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1276:2:18"
									},
									"returnParameters": {
										"id": 3292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3296,
												"src": "1319:13:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1319:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1318:15:18"
									},
									"scope": 3375,
									"src": "1259:102:18",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										512,
										1595
									],
									"body": {
										"id": 3314,
										"nodeType": "Block",
										"src": "1486:90:18",
										"statements": [
											{
												"assignments": [
													3307
												],
												"declarations": [
													{
														"constant": false,
														"id": 3307,
														"mutability": "mutable",
														"name": "location",
														"nameLocation": "1510:8:18",
														"nodeType": "VariableDeclaration",
														"scope": 3314,
														"src": "1496:22:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 3306,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1496:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3311,
												"initialValue": {
													"baseExpression": {
														"id": 3308,
														"name": "tokenLocations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3225,
														"src": "1521:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 3310,
													"indexExpression": {
														"id": 3309,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3298,
														"src": "1536:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1521:23:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1496:48:18"
											},
											{
												"expression": {
													"id": 3312,
													"name": "location",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3307,
													"src": "1561:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3305,
												"id": 3313,
												"nodeType": "Return",
												"src": "1554:15:18"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 3315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1381:8:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3302,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3300,
												"name": "ERC721",
												"nameLocations": [
													"1436:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1436:6:18"
											},
											{
												"id": 3301,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"1444:16:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1615,
												"src": "1444:16:18"
											}
										],
										"src": "1427:34:18"
									},
									"parameters": {
										"id": 3299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3298,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1398:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3315,
												"src": "1390:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1389:17:18"
									},
									"returnParameters": {
										"id": 3305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3315,
												"src": "1470:13:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1470:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1469:15:18"
									},
									"scope": 3375,
									"src": "1372:204:18",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3344,
										"nodeType": "Block",
										"src": "1632:214:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3322,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3317,
																		"src": "1658:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3321,
																	"name": "ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "1650:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 3323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1650:16:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3324,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1670:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1674:6:18",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1670:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1650:30:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74466f756e64",
															"id": 3327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1682:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a896e77af5e233b52f3d565f8bd98eec0ddb0e671485cda84d2cd93d51849a53",
																"typeString": "literal_string \"NotFound\""
															},
															"value": "NotFound"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a896e77af5e233b52f3d565f8bd98eec0ddb0e671485cda84d2cd93d51849a53",
																"typeString": "literal_string \"NotFound\""
															}
														],
														"id": 3320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1642:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1642:51:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3329,
												"nodeType": "ExpressionStatement",
												"src": "1642:51:18"
											},
											{
												"assignments": [
													3331
												],
												"declarations": [
													{
														"constant": false,
														"id": 3331,
														"mutability": "mutable",
														"name": "location",
														"nameLocation": "1718:8:18",
														"nodeType": "VariableDeclaration",
														"scope": 3344,
														"src": "1704:22:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 3330,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1704:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3337,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1758:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1762:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1758:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3332,
															"name": "locationProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3228,
															"src": "1729:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LocationProvider_$3204",
																"typeString": "contract LocationProvider"
															}
														},
														"id": 3333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1746:11:18",
														"memberName": "getLocation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3203,
														"src": "1729:28:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
															"typeString": "function (address) view external returns (string memory)"
														}
													},
													"id": 3336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1729:40:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1704:65:18"
											},
											{
												"expression": {
													"id": 3342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3338,
															"name": "tokenLocations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3225,
															"src": "1779:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 3340,
														"indexExpression": {
															"id": 3339,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3317,
															"src": "1794:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1779:23:18",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3341,
														"name": "location",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3331,
														"src": "1805:8:18",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1779:34:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3343,
												"nodeType": "ExpressionStatement",
												"src": "1779:34:18"
											}
										]
									},
									"functionSelector": "47baf0e9",
									"id": 3345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateLocation",
									"nameLocation": "1591:14:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3317,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1614:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3345,
												"src": "1606:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:17:18"
									},
									"returnParameters": {
										"id": 3319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1632:0:18"
									},
									"scope": 3375,
									"src": "1582:264:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3357,
										"nodeType": "Block",
										"src": "1923:59:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3354,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3347,
															"src": "1969:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3352,
															"name": "locationProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3228,
															"src": "1940:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LocationProvider_$3204",
																"typeString": "contract LocationProvider"
															}
														},
														"id": 3353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1957:11:18",
														"memberName": "getLocation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3203,
														"src": "1940:28:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
															"typeString": "function (address) view external returns (string memory)"
														}
													},
													"id": 3355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:35:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3351,
												"id": 3356,
												"nodeType": "Return",
												"src": "1933:42:18"
											}
										]
									},
									"functionSelector": "d9e0dc59",
									"id": 3358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLocation",
									"nameLocation": "1861:11:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3347,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1881:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "1873:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:15:18"
									},
									"returnParameters": {
										"id": 3351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "1908:13:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3349,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:15:18"
									},
									"scope": 3375,
									"src": "1852:130:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										417,
										1538
									],
									"body": {
										"id": 3373,
										"nodeType": "Block",
										"src": "2104:60:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3370,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3360,
															"src": "2145:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3368,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2121:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ArtistDynamicNFT_$3375_$",
																"typeString": "type(contract super ArtistDynamicNFT)"
															}
														},
														"id": 3369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2127:17:18",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1538,
														"src": "2121:23:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:36:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3367,
												"id": 3372,
												"nodeType": "Return",
												"src": "2114:43:18"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1996:17:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3364,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3362,
												"name": "ERC721",
												"nameLocations": [
													"2063:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "2063:6:18"
											},
											{
												"id": 3363,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"2071:16:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1615,
												"src": "2071:16:18"
											}
										],
										"src": "2054:34:18"
									},
									"parameters": {
										"id": 3361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3360,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2021:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3374,
												"src": "2014:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3359,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2014:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:20:18"
									},
									"returnParameters": {
										"id": 3367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3374,
												"src": "2098:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3365,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2098:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:6:18"
									},
									"scope": 3375,
									"src": "1987:177:18",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3376,
							"src": "490:1677:18",
							"usedErrors": [
								13,
								18,
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								24,
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "32:2135:18"
				},
				"id": 18
			}
		}
	}
}